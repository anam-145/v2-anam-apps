!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).BitcoinJS=t()}(this,function(){"use strict";var e=Object.defineProperty,t=(t,r,o)=>((t,r,o)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o)(t,"symbol"!=typeof r?r+"":r,o);function r(e,t){for(var r=0;r<t.length;r++){const o=t[r];if("string"!=typeof o&&!Array.isArray(o))for(const t in o)if("default"!==t&&!(t in e)){const r=Object.getOwnPropertyDescriptor(o,t);r&&Object.defineProperty(e,t,r.get?r:{enumerable:!0,get:()=>o[t]})}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}function o(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function a(e){if(e.__esModule)return e;var t=e.default;if("function"==typeof t){var r=function e(){return this instanceof e?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};r.prototype=t.prototype}else r={};return Object.defineProperty(r,"__esModule",{value:!0}),Object.keys(e).forEach(function(t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})}),r}for(var n={},i={},s={byteLength:function(e){var t=d(e),r=t[0],o=t[1];return 3*(r+o)/4-o},toByteArray:function(e){var t,r,o=d(e),a=o[0],n=o[1],i=new l(function(e,t,r){return 3*(t+r)/4-r}(0,a,n)),s=0,u=n>0?a-4:a;for(r=0;r<u;r+=4)t=c[e.charCodeAt(r)]<<18|c[e.charCodeAt(r+1)]<<12|c[e.charCodeAt(r+2)]<<6|c[e.charCodeAt(r+3)],i[s++]=t>>16&255,i[s++]=t>>8&255,i[s++]=255&t;2===n&&(t=c[e.charCodeAt(r)]<<2|c[e.charCodeAt(r+1)]>>4,i[s++]=255&t);1===n&&(t=c[e.charCodeAt(r)]<<10|c[e.charCodeAt(r+1)]<<4|c[e.charCodeAt(r+2)]>>2,i[s++]=t>>8&255,i[s++]=255&t);return i},fromByteArray:function(e){for(var t,r=e.length,o=r%3,a=[],n=16383,i=0,s=r-o;i<s;i+=n)a.push(m(e,i,i+n>s?s:i+n));1===o?(t=e[r-1],a.push(u[t>>2]+u[t<<4&63]+"==")):2===o&&(t=(e[r-2]<<8)+e[r-1],a.push(u[t>>10]+u[t>>4&63]+u[t<<2&63]+"="));return a.join("")}},u=[],c=[],l="undefined"!=typeof Uint8Array?Uint8Array:Array,p="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",f=0;f<64;++f)u[f]=p[f],c[p.charCodeAt(f)]=f;function d(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function h(e){return u[e>>18&63]+u[e>>12&63]+u[e>>6&63]+u[63&e]}function m(e,t,r){for(var o,a=[],n=t;n<r;n+=3)o=(e[n]<<16&16711680)+(e[n+1]<<8&65280)+(255&e[n+2]),a.push(h(o));return a.join("")}c["-".charCodeAt(0)]=62,c["_".charCodeAt(0)]=63;var g={
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
read:function(e,t,r,o,a){var n,i,s=8*a-o-1,u=(1<<s)-1,c=u>>1,l=-7,p=r?a-1:0,f=r?-1:1,d=e[t+p];for(p+=f,n=d&(1<<-l)-1,d>>=-l,l+=s;l>0;n=256*n+e[t+p],p+=f,l-=8);for(i=n&(1<<-l)-1,n>>=-l,l+=o;l>0;i=256*i+e[t+p],p+=f,l-=8);if(0===n)n=1-c;else{if(n===u)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,o),n-=c}return(d?-1:1)*i*Math.pow(2,n-o)},write:function(e,t,r,o,a,n){var i,s,u,c=8*n-a-1,l=(1<<c)-1,p=l>>1,f=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,d=o?0:n-1,h=o?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+p>=1?f/u:f*Math.pow(2,1-p))*u>=2&&(i++,u/=2),i+p>=l?(s=0,i=l):i+p>=1?(s=(t*u-1)*Math.pow(2,a),i+=p):(s=t*Math.pow(2,p-1)*Math.pow(2,a),i=0));a>=8;e[r+d]=255&s,d+=h,s/=256,a-=8);for(i=i<<a|s,c+=a;c>0;e[r+d]=255&i,d+=h,i/=256,c-=8);e[r+d-h]|=128*m}};
/*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
!function(e){const t=s,r=g,o="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=l,e.SlowBuffer=function(e){+e!=e&&(e=0);return l.alloc(+e)},e.INSPECT_MAX_BYTES=50;const a=2147483647;e.kMaxLength=a;const{Uint8Array:n,ArrayBuffer:i,SharedArrayBuffer:u}=globalThis;function c(e){if(e>a)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new n(e);return Object.setPrototypeOf(t,l.prototype),t}function l(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return d(e)}return p(e,t,r)}function p(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|y(e,t);let o=c(r);const a=o.write(e,t);a!==r&&(o=o.slice(0,a));return o}(e,t);if(i.isView(e))return function(e){if(Q(e,n)){const t=new n(e);return m(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(Q(e,i)||e&&Q(e.buffer,i))return m(e,t,r);if(void 0!==u&&(Q(e,u)||e&&Q(e.buffer,u)))return m(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const o=e.valueOf&&e.valueOf();if(null!=o&&o!==e)return l.from(o,t,r);const a=function(e){if(l.isBuffer(e)){const t=0|b(e.length),r=c(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||Z(e.length)?c(0):h(e);if("Buffer"===e.type&&Array.isArray(e.data))return h(e.data)}(e);if(a)return a;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function f(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function d(e){return f(e),c(e<0?0:0|b(e))}function h(e){const t=e.length<0?0:0|b(e.length),r=c(t);for(let o=0;o<t;o+=1)r[o]=255&e[o];return r}function m(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let o;return o=void 0===t&&void 0===r?new n(e):void 0===r?new n(e,t):new n(e,t,r),Object.setPrototypeOf(o,l.prototype),o}function b(e){if(e>=a)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a.toString(16)+" bytes");return 0|e}function y(e,t){if(l.isBuffer(e))return e.length;if(i.isView(e)||Q(e,i))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,o=arguments.length>2&&!0===arguments[2];if(!o&&0===r)return 0;let a=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return $(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return Y(e).length;default:if(a)return o?-1:$(e).length;t=(""+t).toLowerCase(),a=!0}}function v(e,t,r){let o=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return B(this,t,r);case"utf8":case"utf-8":return O(this,t,r);case"ascii":return P(this,t,r);case"latin1":case"binary":return j(this,t,r);case"base64":return z(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return H(this,t,r);default:if(o)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),o=!0}}function w(e,t,r){const o=e[t];e[t]=e[r],e[r]=o}function k(e,t,r,o,a){if(0===e.length)return-1;if("string"==typeof r?(o=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Z(r=+r)&&(r=a?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(a)return-1;r=e.length-1}else if(r<0){if(!a)return-1;r=0}if("string"==typeof t&&(t=l.from(t,o)),l.isBuffer(t))return 0===t.length?-1:E(e,t,r,o,a);if("number"==typeof t)return t&=255,"function"==typeof n.prototype.indexOf?a?n.prototype.indexOf.call(e,t,r):n.prototype.lastIndexOf.call(e,t,r):E(e,[t],r,o,a);throw new TypeError("val must be string, number or Buffer")}function E(e,t,r,o,a){let n,i=1,s=e.length,u=t.length;if(void 0!==o&&("ucs2"===(o=String(o).toLowerCase())||"ucs-2"===o||"utf16le"===o||"utf-16le"===o)){if(e.length<2||t.length<2)return-1;i=2,s/=2,u/=2,r/=2}function c(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){let o=-1;for(n=r;n<s;n++)if(c(e,n)===c(t,-1===o?0:n-o)){if(-1===o&&(o=n),n-o+1===u)return o*i}else-1!==o&&(n-=n-o),o=-1}else for(r+u>s&&(r=s-u),n=r;n>=0;n--){let r=!0;for(let o=0;o<u;o++)if(c(e,n+o)!==c(t,o)){r=!1;break}if(r)return n}return-1}function S(e,t,r,o){r=Number(r)||0;const a=e.length-r;o?(o=Number(o))>a&&(o=a):o=a;const n=t.length;let i;for(o>n/2&&(o=n/2),i=0;i<o;++i){const o=parseInt(t.substr(2*i,2),16);if(Z(o))return i;e[r+i]=o}return i}function _(e,t,r,o){return J($(t,e.length-r),e,r,o)}function I(e,t,r,o){return J(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,o)}function T(e,t,r,o){return J(Y(t),e,r,o)}function A(e,t,r,o){return J(function(e,t){let r,o,a;const n=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)r=e.charCodeAt(i),o=r>>8,a=r%256,n.push(a),n.push(o);return n}(t,e.length-r),e,r,o)}function z(e,r,o){return 0===r&&o===e.length?t.fromByteArray(e):t.fromByteArray(e.slice(r,o))}function O(e,t,r){r=Math.min(e.length,r);const o=[];let a=t;for(;a<r;){const t=e[a];let n=null,i=t>239?4:t>223?3:t>191?2:1;if(a+i<=r){let r,o,s,u;switch(i){case 1:t<128&&(n=t);break;case 2:r=e[a+1],128==(192&r)&&(u=(31&t)<<6|63&r,u>127&&(n=u));break;case 3:r=e[a+1],o=e[a+2],128==(192&r)&&128==(192&o)&&(u=(15&t)<<12|(63&r)<<6|63&o,u>2047&&(u<55296||u>57343)&&(n=u));break;case 4:r=e[a+1],o=e[a+2],s=e[a+3],128==(192&r)&&128==(192&o)&&128==(192&s)&&(u=(15&t)<<18|(63&r)<<12|(63&o)<<6|63&s,u>65535&&u<1114112&&(n=u))}}null===n?(n=65533,i=1):n>65535&&(n-=65536,o.push(n>>>10&1023|55296),n=56320|1023&n),o.push(n),a+=i}return function(e){const t=e.length;if(t<=x)return String.fromCharCode.apply(String,e);let r="",o=0;for(;o<t;)r+=String.fromCharCode.apply(String,e.slice(o,o+=x));return r}(o)}l.TYPED_ARRAY_SUPPORT=function(){try{const e=new n(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,n.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),!l.TYPED_ARRAY_SUPPORT&&"undefined"!=typeof console&&console.error,Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(e,t,r){return p(e,t,r)},Object.setPrototypeOf(l.prototype,n.prototype),Object.setPrototypeOf(l,n),l.alloc=function(e,t,r){return function(e,t,r){return f(e),e<=0?c(e):void 0!==t?"string"==typeof r?c(e).fill(t,r):c(e).fill(t):c(e)}(e,t,r)},l.allocUnsafe=function(e){return d(e)},l.allocUnsafeSlow=function(e){return d(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype},l.compare=function(e,t){if(Q(e,n)&&(e=l.from(e,e.offset,e.byteLength)),Q(t,n)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,o=t.length;for(let a=0,n=Math.min(r,o);a<n;++a)if(e[a]!==t[a]){r=e[a],o=t[a];break}return r<o?-1:o<r?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const o=l.allocUnsafe(t);let a=0;for(r=0;r<e.length;++r){let t=e[r];if(Q(t,n))a+t.length>o.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(o,a)):n.prototype.set.call(o,t,a);else{if(!l.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(o,a)}a+=t.length}return o},l.byteLength=y,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)w(this,t,t+1);return this},l.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)w(this,t,t+3),w(this,t+1,t+2);return this},l.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)w(this,t,t+7),w(this,t+1,t+6),w(this,t+2,t+5),w(this,t+3,t+4);return this},l.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?O(this,0,e):v.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let t="";const r=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},o&&(l.prototype[o]=l.prototype.inspect),l.prototype.compare=function(e,t,r,o,a){if(Q(e,n)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===o&&(o=0),void 0===a&&(a=this.length),t<0||r>e.length||o<0||a>this.length)throw new RangeError("out of range index");if(o>=a&&t>=r)return 0;if(o>=a)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(a>>>=0)-(o>>>=0),s=(r>>>=0)-(t>>>=0);const u=Math.min(i,s),c=this.slice(o,a),p=e.slice(t,r);for(let n=0;n<u;++n)if(c[n]!==p[n]){i=c[n],s=p[n];break}return i<s?-1:s<i?1:0},l.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},l.prototype.indexOf=function(e,t,r){return k(this,e,t,r,!0)},l.prototype.lastIndexOf=function(e,t,r){return k(this,e,t,r,!1)},l.prototype.write=function(e,t,r,o){if(void 0===t)o="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)o=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===o&&(o="utf8")):(o=r,r=void 0)}const a=this.length-t;if((void 0===r||r>a)&&(r=a),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");o||(o="utf8");let n=!1;for(;;)switch(o){case"hex":return S(this,e,t,r);case"utf8":case"utf-8":return _(this,e,t,r);case"ascii":case"latin1":case"binary":return I(this,e,t,r);case"base64":return T(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,e,t,r);default:if(n)throw new TypeError("Unknown encoding: "+o);o=(""+o).toLowerCase(),n=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const x=4096;function P(e,t,r){let o="";r=Math.min(e.length,r);for(let a=t;a<r;++a)o+=String.fromCharCode(127&e[a]);return o}function j(e,t,r){let o="";r=Math.min(e.length,r);for(let a=t;a<r;++a)o+=String.fromCharCode(e[a]);return o}function B(e,t,r){const o=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>o)&&(r=o);let a="";for(let n=t;n<r;++n)a+=ee[e[n]];return a}function H(e,t,r){const o=e.slice(t,r);let a="";for(let n=0;n<o.length-1;n+=2)a+=String.fromCharCode(o[n]+256*o[n+1]);return a}function U(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function N(e,t,r,o,a,n){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<n)throw new RangeError('"value" argument is out of bounds');if(r+o>e.length)throw new RangeError("Index out of range")}function L(e,t,r,o,a){K(t,o,a,e,r,7);let n=Number(t&BigInt(4294967295));e[r++]=n,n>>=8,e[r++]=n,n>>=8,e[r++]=n,n>>=8,e[r++]=n;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,r}function C(e,t,r,o,a){K(t,o,a,e,r,7);let n=Number(t&BigInt(4294967295));e[r+7]=n,n>>=8,e[r+6]=n,n>>=8,e[r+5]=n,n>>=8,e[r+4]=n;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=i,i>>=8,e[r+2]=i,i>>=8,e[r+1]=i,i>>=8,e[r]=i,r+8}function R(e,t,r,o,a,n){if(r+o>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function q(e,t,o,a,n){return t=+t,o>>>=0,n||R(e,0,o,4),r.write(e,t,o,a,23,4),o+4}function M(e,t,o,a,n){return t=+t,o>>>=0,n||R(e,0,o,8),r.write(e,t,o,a,52,8),o+8}l.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const o=this.subarray(e,t);return Object.setPrototypeOf(o,l.prototype),o},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||U(e,t,this.length);let o=this[e],a=1,n=0;for(;++n<t&&(a*=256);)o+=this[e+n]*a;return o},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||U(e,t,this.length);let o=this[e+--t],a=1;for(;t>0&&(a*=256);)o+=this[e+--t]*a;return o},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||U(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||U(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||U(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||U(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||U(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=te(function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const o=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,a=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(o)+(BigInt(a)<<BigInt(32))}),l.prototype.readBigUInt64BE=te(function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const o=t*2**24+65536*this[++e]+256*this[++e]+this[++e],a=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(o)<<BigInt(32))+BigInt(a)}),l.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||U(e,t,this.length);let o=this[e],a=1,n=0;for(;++n<t&&(a*=256);)o+=this[e+n]*a;return a*=128,o>=a&&(o-=Math.pow(2,8*t)),o},l.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||U(e,t,this.length);let o=t,a=1,n=this[e+--o];for(;o>0&&(a*=256);)n+=this[e+--o]*a;return a*=128,n>=a&&(n-=Math.pow(2,8*t)),n},l.prototype.readInt8=function(e,t){return e>>>=0,t||U(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||U(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt16BE=function(e,t){e>>>=0,t||U(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||U(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||U(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=te(function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const o=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(o)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)}),l.prototype.readBigInt64BE=te(function(e){G(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||W(e,this.length-8);const o=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(o)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)}),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||U(e,4,this.length),r.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||U(e,4,this.length),r.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||U(e,8,this.length),r.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||U(e,8,this.length),r.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,r,o){if(e=+e,t>>>=0,r>>>=0,!o){N(this,e,t,r,Math.pow(2,8*r)-1,0)}let a=1,n=0;for(this[t]=255&e;++n<r&&(a*=256);)this[t+n]=e/a&255;return t+r},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,r,o){if(e=+e,t>>>=0,r>>>=0,!o){N(this,e,t,r,Math.pow(2,8*r)-1,0)}let a=r-1,n=1;for(this[t+a]=255&e;--a>=0&&(n*=256);)this[t+a]=e/n&255;return t+r},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=te(function(e,t=0){return L(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeBigUInt64BE=te(function(e,t=0){return C(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeIntLE=function(e,t,r,o){if(e=+e,t>>>=0,!o){const o=Math.pow(2,8*r-1);N(this,e,t,r,o-1,-o)}let a=0,n=1,i=0;for(this[t]=255&e;++a<r&&(n*=256);)e<0&&0===i&&0!==this[t+a-1]&&(i=1),this[t+a]=(e/n|0)-i&255;return t+r},l.prototype.writeIntBE=function(e,t,r,o){if(e=+e,t>>>=0,!o){const o=Math.pow(2,8*r-1);N(this,e,t,r,o-1,-o)}let a=r-1,n=1,i=0;for(this[t+a]=255&e;--a>=0&&(n*=256);)e<0&&0===i&&0!==this[t+a+1]&&(i=1),this[t+a]=(e/n|0)-i&255;return t+r},l.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||N(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=te(function(e,t=0){return L(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeBigInt64BE=te(function(e,t=0){return C(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeFloatLE=function(e,t,r){return q(this,e,t,!0,r)},l.prototype.writeFloatBE=function(e,t,r){return q(this,e,t,!1,r)},l.prototype.writeDoubleLE=function(e,t,r){return M(this,e,t,!0,r)},l.prototype.writeDoubleBE=function(e,t,r){return M(this,e,t,!1,r)},l.prototype.copy=function(e,t,r,o){if(!l.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),o||0===o||(o=this.length),t>=e.length&&(t=e.length),t||(t=0),o>0&&o<r&&(o=r),o===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(o<0)throw new RangeError("sourceEnd out of bounds");o>this.length&&(o=this.length),e.length-t<o-r&&(o=e.length-t+r);const a=o-r;return this===e&&"function"==typeof n.prototype.copyWithin?this.copyWithin(t,r,o):n.prototype.set.call(e,this.subarray(r,o),t),a},l.prototype.fill=function(e,t,r,o){if("string"==typeof e){if("string"==typeof t?(o=t,t=0,r=this.length):"string"==typeof r&&(o=r,r=this.length),void 0!==o&&"string"!=typeof o)throw new TypeError("encoding must be a string");if("string"==typeof o&&!l.isEncoding(o))throw new TypeError("Unknown encoding: "+o);if(1===e.length){const t=e.charCodeAt(0);("utf8"===o&&t<128||"latin1"===o)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let a;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(a=t;a<r;++a)this[a]=e;else{const n=l.isBuffer(e)?e:l.from(e,o),i=n.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(a=0;a<r-t;++a)this[a+t]=n[a%i]}return this};const V={};function D(e,t,r){V[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function F(e){let t="",r=e.length;const o="-"===e[0]?1:0;for(;r>=o+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function K(e,t,r,o,a,n){if(e>r||e<t){const r="bigint"==typeof t?"n":"";let o;throw o=0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(n+1)}${r}`:`>= -(2${r} ** ${8*(n+1)-1}${r}) and < 2 ** ${8*(n+1)-1}${r}`,new V.ERR_OUT_OF_RANGE("value",o,e)}!function(e,t,r){G(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||W(t,e.length-(r+1))}(o,a,n)}function G(e,t){if("number"!=typeof e)throw new V.ERR_INVALID_ARG_TYPE(t,"number",e)}function W(e,t,r){if(Math.floor(e)!==e)throw G(e,r),new V.ERR_OUT_OF_RANGE("offset","an integer",e);if(t<0)throw new V.ERR_BUFFER_OUT_OF_BOUNDS;throw new V.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${t}`,e)}D("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),D("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),D("ERR_OUT_OF_RANGE",function(e,t,r){let o=`The value of "${e}" is out of range.`,a=r;return Number.isInteger(r)&&Math.abs(r)>2**32?a=F(String(r)):"bigint"==typeof r&&(a=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(a=F(a)),a+="n"),o+=` It must be ${t}. Received ${a}`,o},RangeError);const X=/[^+/0-9A-Za-z-_]/g;function $(e,t){let r;t=t||1/0;const o=e.length;let a=null;const n=[];for(let i=0;i<o;++i){if(r=e.charCodeAt(i),r>55295&&r<57344){if(!a){if(r>56319){(t-=3)>-1&&n.push(239,191,189);continue}if(i+1===o){(t-=3)>-1&&n.push(239,191,189);continue}a=r;continue}if(r<56320){(t-=3)>-1&&n.push(239,191,189),a=r;continue}r=65536+(a-55296<<10|r-56320)}else a&&(t-=3)>-1&&n.push(239,191,189);if(a=null,r<128){if((t-=1)<0)break;n.push(r)}else if(r<2048){if((t-=2)<0)break;n.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;n.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;n.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return n}function Y(e){return t.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(X,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function J(e,t,r,o){let a;for(a=0;a<o&&!(a+r>=t.length||a>=e.length);++a)t[a+r]=e[a];return a}function Q(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Z(e){return e!=e}const ee=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const o=16*r;for(let a=0;a<16;++a)t[o+a]=e[r]+e[a]}return t}();function te(e){return"undefined"==typeof BigInt?re:e}function re(){throw new Error("BigInt not supported")}}(i);const b=i.Buffer,y=i.Blob,v=i.BlobOptions,w=i.Buffer,k=i.File,E=i.FileOptions,S=i.INSPECT_MAX_BYTES,_=i.SlowBuffer,I=i.TranscodeEncoding,T=i.atob,A=i.btoa,z=i.constants,O=i.isAscii,x=i.isUtf8,P=i.kMaxLength,j=i.kStringMaxLength,B=i.resolveObjectURL,H=i.transcode,U=Object.freeze(Object.defineProperty({__proto__:null,Blob:y,BlobOptions:v,Buffer:w,File:k,FileOptions:E,INSPECT_MAX_BYTES:S,SlowBuffer:_,TranscodeEncoding:I,atob:T,btoa:A,constants:z,default:b,isAscii:O,isUtf8:x,kMaxLength:P,kStringMaxLength:j,resolveObjectURL:B,transcode:H},Symbol.toStringTag,{value:"Module"}));var N={},L={};Object.defineProperty(L,"__esModule",{value:!0}),L.testnet=L.regtest=L.bitcoin=void 0,L.bitcoin={messagePrefix:"Bitcoin Signed Message:\n",bech32:"bc",bip32:{public:76067358,private:76066276},pubKeyHash:0,scriptHash:5,wif:128},L.regtest={messagePrefix:"Bitcoin Signed Message:\n",bech32:"bcrt",bip32:{public:70617039,private:70615956},pubKeyHash:111,scriptHash:196,wif:239},L.testnet={messagePrefix:"Bitcoin Signed Message:\n",bech32:"tb",bip32:{public:70617039,private:70615956},pubKeyHash:111,scriptHash:196,wif:239};var C={},R={},q={},M={};Object.defineProperty(M,"__esModule",{value:!0}),M.encode=M.decode=M.check=void 0,M.check=function(e){if(e.length<8)return!1;if(e.length>72)return!1;if(48!==e[0])return!1;if(e[1]!==e.length-2)return!1;if(2!==e[2])return!1;const t=e[3];if(0===t)return!1;if(5+t>=e.length)return!1;if(2!==e[4+t])return!1;const r=e[5+t];return 0!==r&&(6+t+r===e.length&&(!(128&e[4])&&(!(t>1&&0===e[4]&&!(128&e[5]))&&(!(128&e[t+6])&&!(r>1&&0===e[t+6]&&!(128&e[t+7]))))))},M.decode=function(e){if(e.length<8)throw new Error("DER sequence length is too short");if(e.length>72)throw new Error("DER sequence length is too long");if(48!==e[0])throw new Error("Expected DER sequence");if(e[1]!==e.length-2)throw new Error("DER sequence length is invalid");if(2!==e[2])throw new Error("Expected DER integer");const t=e[3];if(0===t)throw new Error("R length is zero");if(5+t>=e.length)throw new Error("R length is too long");if(2!==e[4+t])throw new Error("Expected DER integer (2)");const r=e[5+t];if(0===r)throw new Error("S length is zero");if(6+t+r!==e.length)throw new Error("S length is invalid");if(128&e[4])throw new Error("R value is negative");if(t>1&&0===e[4]&&!(128&e[5]))throw new Error("R value excessively padded");if(128&e[t+6])throw new Error("S value is negative");if(r>1&&0===e[t+6]&&!(128&e[t+7]))throw new Error("S value excessively padded");return{r:e.slice(4,4+t),s:e.slice(6+t)}},M.encode=function(e,t){const r=e.length,o=t.length;if(0===r)throw new Error("R length is zero");if(0===o)throw new Error("S length is zero");if(r>33)throw new Error("R length is too long");if(o>33)throw new Error("S length is too long");if(128&e[0])throw new Error("R value is negative");if(128&t[0])throw new Error("S value is negative");if(r>1&&0===e[0]&&!(128&e[1]))throw new Error("R value excessively padded");if(o>1&&0===t[0]&&!(128&t[1]))throw new Error("S value excessively padded");const a=b.allocUnsafe(6+r+o);return a[0]=48,a[1]=a.length-2,a[2]=2,a[3]=e.length,e.copy(a,4),a[4+r]=2,a[5+r]=t.length,t.copy(a,6+r),a};var V={};Object.defineProperty(V,"__esModule",{value:!0}),V.REVERSE_OPS=V.OPS=void 0;const D={OP_FALSE:0,OP_0:0,OP_PUSHDATA1:76,OP_PUSHDATA2:77,OP_PUSHDATA4:78,OP_1NEGATE:79,OP_RESERVED:80,OP_TRUE:81,OP_1:81,OP_2:82,OP_3:83,OP_4:84,OP_5:85,OP_6:86,OP_7:87,OP_8:88,OP_9:89,OP_10:90,OP_11:91,OP_12:92,OP_13:93,OP_14:94,OP_15:95,OP_16:96,OP_NOP:97,OP_VER:98,OP_IF:99,OP_NOTIF:100,OP_VERIF:101,OP_VERNOTIF:102,OP_ELSE:103,OP_ENDIF:104,OP_VERIFY:105,OP_RETURN:106,OP_TOALTSTACK:107,OP_FROMALTSTACK:108,OP_2DROP:109,OP_2DUP:110,OP_3DUP:111,OP_2OVER:112,OP_2ROT:113,OP_2SWAP:114,OP_IFDUP:115,OP_DEPTH:116,OP_DROP:117,OP_DUP:118,OP_NIP:119,OP_OVER:120,OP_PICK:121,OP_ROLL:122,OP_ROT:123,OP_SWAP:124,OP_TUCK:125,OP_CAT:126,OP_SUBSTR:127,OP_LEFT:128,OP_RIGHT:129,OP_SIZE:130,OP_INVERT:131,OP_AND:132,OP_OR:133,OP_XOR:134,OP_EQUAL:135,OP_EQUALVERIFY:136,OP_RESERVED1:137,OP_RESERVED2:138,OP_1ADD:139,OP_1SUB:140,OP_2MUL:141,OP_2DIV:142,OP_NEGATE:143,OP_ABS:144,OP_NOT:145,OP_0NOTEQUAL:146,OP_ADD:147,OP_SUB:148,OP_MUL:149,OP_DIV:150,OP_MOD:151,OP_LSHIFT:152,OP_RSHIFT:153,OP_BOOLAND:154,OP_BOOLOR:155,OP_NUMEQUAL:156,OP_NUMEQUALVERIFY:157,OP_NUMNOTEQUAL:158,OP_LESSTHAN:159,OP_GREATERTHAN:160,OP_LESSTHANOREQUAL:161,OP_GREATERTHANOREQUAL:162,OP_MIN:163,OP_MAX:164,OP_WITHIN:165,OP_RIPEMD160:166,OP_SHA1:167,OP_SHA256:168,OP_HASH160:169,OP_HASH256:170,OP_CODESEPARATOR:171,OP_CHECKSIG:172,OP_CHECKSIGVERIFY:173,OP_CHECKMULTISIG:174,OP_CHECKMULTISIGVERIFY:175,OP_NOP1:176,OP_NOP2:177,OP_CHECKLOCKTIMEVERIFY:177,OP_NOP3:178,OP_CHECKSEQUENCEVERIFY:178,OP_NOP4:179,OP_NOP5:180,OP_NOP6:181,OP_NOP7:182,OP_NOP8:183,OP_NOP9:184,OP_NOP10:185,OP_CHECKSIGADD:186,OP_PUBKEYHASH:253,OP_PUBKEY:254,OP_INVALIDOPCODE:255};V.OPS=D;const F={};V.REVERSE_OPS=F;for(const Rc of Object.keys(D)){F[D[Rc]]=Rc}var K={};Object.defineProperty(K,"__esModule",{value:!0}),K.decode=K.encode=K.encodingLength=void 0;const G=V;function W(e){return e<G.OPS.OP_PUSHDATA1?1:e<=255?2:e<=65535?3:5}K.encodingLength=W,K.encode=function(e,t,r){const o=W(t);return 1===o?e.writeUInt8(t,r):2===o?(e.writeUInt8(G.OPS.OP_PUSHDATA1,r),e.writeUInt8(t,r+1)):3===o?(e.writeUInt8(G.OPS.OP_PUSHDATA2,r),e.writeUInt16LE(t,r+1)):(e.writeUInt8(G.OPS.OP_PUSHDATA4,r),e.writeUInt32LE(t,r+1)),o},K.decode=function(e,t){const r=e.readUInt8(t);let o,a;if(r<G.OPS.OP_PUSHDATA1)o=r,a=1;else if(r===G.OPS.OP_PUSHDATA1){if(t+2>e.length)return null;o=e.readUInt8(t+1),a=2}else if(r===G.OPS.OP_PUSHDATA2){if(t+3>e.length)return null;o=e.readUInt16LE(t+1),a=3}else{if(t+5>e.length)return null;if(r!==G.OPS.OP_PUSHDATA4)throw new Error("Unexpected opcode");o=e.readUInt32LE(t+1),a=5}return{opcode:r,number:o,size:a}};var X={};Object.defineProperty(X,"__esModule",{value:!0}),X.encode=X.decode=void 0,X.decode=function(e,t,r){t=t||4,r=void 0===r||r;const o=e.length;if(0===o)return 0;if(o>t)throw new TypeError("Script number overflow");if(r&&!(127&e[o-1]||!(o<=1)&&128&e[o-2]))throw new Error("Non-minimally encoded script number");if(5===o){const t=e.readUInt32LE(0),r=e.readUInt8(4);return 128&r?-(4294967296*(-129&r)+t):4294967296*r+t}let a=0;for(let n=0;n<o;++n)a|=e[n]<<8*n;return 128&e[o-1]?-(a&~(128<<8*(o-1))):a},X.encode=function(e){let t=Math.abs(e);const r=(o=t)>2147483647?5:o>8388607?4:o>32767?3:o>127?2:o>0?1:0;var o;const a=b.allocUnsafe(r),n=e<0;for(let i=0;i<r;++i)a.writeUInt8(255&t,i),t>>=8;return 128&a[r-1]?a.writeUInt8(n?128:0,r-1):n&&(a[r-1]|=128),a};var $={},Y={};const J=a(U);var Q={Array:function(e){return null!=e&&e.constructor===Array},Boolean:function(e){return"boolean"==typeof e},Function:function(e){return"function"==typeof e},Nil:function(e){return null==e},Number:function(e){return"number"==typeof e},Object:function(e){return"object"==typeof e},String:function(e){return"string"==typeof e},"":function(){return!0}};for(var Z in Q.Null=Q.Nil,Q)Q[Z].toJSON=function(e){return e}.bind(null,Z);var ee=Q,te=ee;function re(e){return e.name||e.toString().match(/function (.*?)\s*\(/)[1]}function oe(e){return te.Nil(e)?"":re(e.constructor)}function ae(e,t){Error.captureStackTrace&&Error.captureStackTrace(e,t)}function ne(e){return te.Function(e)?e.toJSON?e.toJSON():re(e):te.Array(e)?"Array":e&&te.Object(e)?"Object":void 0!==e?e:""}function ie(e,t,r){var o=function(e){return te.Function(e)?"":te.String(e)?JSON.stringify(e):e&&te.Object(e)?"":e}(t);return"Expected "+ne(e)+", got"+(""!==r?" "+r:"")+(""!==o?" "+o:"")}function se(e,t,r){r=r||oe(t),this.message=ie(e,t,r),ae(this,se),this.__type=e,this.__value=t,this.__valueTypeName=r}function ue(e,t,r,o,a){e?(a=a||oe(o),this.message=function(e,t,r,o,a){var n='" of type ';return"key"===t&&(n='" with key type '),ie('property "'+ne(r)+n+ne(e),o,a)}(e,r,t,o,a)):this.message='Unexpected property "'+t+'"',ae(this,se),this.__label=r,this.__property=t,this.__type=e,this.__value=o,this.__valueTypeName=a}se.prototype=Object.create(Error.prototype),se.prototype.constructor=se,ue.prototype=Object.create(Error.prototype),ue.prototype.constructor=se;var ce,le,pe={TfTypeError:se,TfPropertyTypeError:ue,tfCustomError:function(e,t){return new se(e,{},t)},tfSubError:function(e,t,r){return e instanceof ue?(t=t+"."+e.__property,e=new ue(e.__type,t,e.__label,e.__value,e.__valueTypeName)):e instanceof se&&(e=new ue(e.__type,t,r,e.__value,e.__valueTypeName)),ae(e),e},tfJSON:ne,getValueTypeName:oe};var fe=ee,de=pe.tfJSON,he=pe.TfTypeError,me=pe.TfPropertyTypeError,ge=pe.tfSubError,be=pe.getValueTypeName,ye={arrayOf:function(e,t){function r(r,o){return!!fe.Array(r)&&(!fe.Nil(r)&&(!(void 0!==t.minLength&&r.length<t.minLength)&&(!(void 0!==t.maxLength&&r.length>t.maxLength)&&((void 0===t.length||r.length===t.length)&&r.every(function(t,r){try{return we(e,t,o)}catch(a){throw ge(a,r)}})))))}return e=ve(e),t=t||{},r.toJSON=function(){var r="["+de(e)+"]";return void 0!==t.length?r+="{"+t.length+"}":void 0===t.minLength&&void 0===t.maxLength||(r+="{"+(void 0===t.minLength?0:t.minLength)+","+(void 0===t.maxLength?1/0:t.maxLength)+"}"),r},r},maybe:function e(t){function r(r,o){return fe.Nil(r)||t(r,o,e)}return t=ve(t),r.toJSON=function(){return"?"+de(t)},r},map:function(e,t){function r(r,o){if(!fe.Object(r))return!1;if(fe.Nil(r))return!1;for(var a in r){try{t&&we(t,a,o)}catch(i){throw ge(i,a,"key")}try{var n=r[a];we(e,n,o)}catch(i){throw ge(i,a)}}return!0}return e=ve(e),t&&(t=ve(t)),r.toJSON=t?function(){return"{"+de(t)+": "+de(e)+"}"}:function(){return"{"+de(e)+"}"},r},object:function(e){var t={};for(var r in e)t[r]=ve(e[r]);function o(e,r){if(!fe.Object(e))return!1;if(fe.Nil(e))return!1;var o;try{for(o in t){we(t[o],e[o],r)}}catch(a){throw ge(a,o)}if(r)for(o in e)if(!t[o])throw new me(void 0,o);return!0}return o.toJSON=function(){return de(t)},o},anyOf:function(){var e=[].slice.call(arguments).map(ve);function t(t,r){return e.some(function(e){try{return we(e,t,r)}catch(o){return!1}})}return t.toJSON=function(){return e.map(de).join("|")},t},allOf:function(){var e=[].slice.call(arguments).map(ve);function t(t,r){return e.every(function(e){try{return we(e,t,r)}catch(o){return!1}})}return t.toJSON=function(){return e.map(de).join(" & ")},t},quacksLike:function(e){function t(t){return e===be(t)}return t.toJSON=function(){return e},t},tuple:function(){var e=[].slice.call(arguments).map(ve);function t(t,r){return!fe.Nil(t)&&(!fe.Nil(t.length)&&((!r||t.length===e.length)&&e.every(function(e,o){try{return we(e,t[o],r)}catch(a){throw ge(a,o)}})))}return t.toJSON=function(){return"("+e.map(de).join(", ")+")"},t},value:function(e){function t(t){return t===e}return t.toJSON=function(){return e},t}};function ve(e){if(fe.String(e))return"?"===e[0]?ye.maybe(e.slice(1)):fe[e]||ye.quacksLike(e);if(e&&fe.Object(e)){if(fe.Array(e)){if(1!==e.length)throw new TypeError("Expected compile() parameter of type Array of length 1");return ye.arrayOf(e[0])}return ye.object(e)}return fe.Function(e)?e:ye.value(e)}function we(e,t,r,o){if(fe.Function(e)){if(e(t,r))return!0;throw new he(o||e,t)}return we(ve(e),t,r)}for(var ke in ye.oneOf=ye.anyOf,fe)we[ke]=fe[ke];for(ke in ye)we[ke]=ye[ke];var Ee=function(){if(le)return ce;le=1;var e=ee,t=pe;function r(e){return b.isBuffer(e)}function o(e){return"string"==typeof e&&/^([0-9a-f]{2})+$/i.test(e)}function a(e,r){var o=e.toJSON();function a(a){if(!e(a))return!1;if(a.length===r)return!0;throw t.tfCustomError(o+"(Length: "+r+")",o+"(Length: "+a.length+")")}return a.toJSON=function(){return o},a}var n=a.bind(null,e.Array),i=a.bind(null,r),s=a.bind(null,o),u=a.bind(null,e.String),c=Math.pow(2,53)-1,l={ArrayN:n,Buffer:r,BufferN:i,Finite:function(e){return"number"==typeof e&&isFinite(e)},Hex:o,HexN:s,Int8:function(e){return e<<24>>24===e},Int16:function(e){return e<<16>>16===e},Int32:function(e){return(0|e)===e},Int53:function(e){return"number"==typeof e&&e>=-c&&e<=c&&Math.floor(e)===e},Range:function(t,r,o){function a(e,a){return o(e,a)&&e>t&&e<r}return o=o||e.Number,a.toJSON=function(){return`${o.toJSON()} between [${t}, ${r}]`},a},StringN:u,UInt8:function(e){return(255&e)===e},UInt16:function(e){return(65535&e)===e},UInt32:function(e){return e>>>0===e},UInt53:function(e){return"number"==typeof e&&e>=0&&e<=c&&Math.floor(e)===e}};for(var p in l)l[p].toJSON=function(e){return e}.bind(null,p);return ce=l}();for(ke in Ee)we[ke]=Ee[ke];we.compile=ve,we.TfTypeError=he,we.TfPropertyTypeError=me;var Se,_e,Ie=we;function Te(){return _e||(_e=1,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.signature=e.number=e.isCanonicalScriptSignature=e.isDefinedHashType=e.isCanonicalPubKey=e.toStack=e.fromASM=e.toASM=e.decompile=e.compile=e.countNonPushOnlyOPs=e.isPushOnly=e.OPS=void 0;const t=M,r=V;Object.defineProperty(e,"OPS",{enumerable:!0,get:function(){return r.OPS}});const o=K,a=X,n=function(){if(Se)return $;Se=1,Object.defineProperty($,"__esModule",{value:!0}),$.encode=$.decode=void 0;const e=M,t=Te(),r=Y,{typeforce:o}=r,a=b.alloc(1,0);function n(e){let t=0;for(;0===e[t];)++t;return t===e.length?a:128&(e=e.slice(t))[0]?b.concat([a,e],1+e.length):e}function i(e){0===e[0]&&(e=e.slice(1));const t=b.alloc(32,0),r=Math.max(0,32-e.length);return e.copy(t,r),t}return $.decode=function(r){const o=r.readUInt8(r.length-1);if(!(0,t.isDefinedHashType)(o))throw new Error("Invalid hashType "+o);const a=e.decode(r.slice(0,-1)),n=i(a.r),s=i(a.s);return{signature:b.concat([n,s],64),hashType:o}},$.encode=function(a,i){if(o({signature:r.BufferN(64),hashType:r.UInt8},{signature:a,hashType:i}),!(0,t.isDefinedHashType)(i))throw new Error("Invalid hashType "+i);const s=b.allocUnsafe(1);s.writeUInt8(i,0);const u=n(a.slice(0,32)),c=n(a.slice(32,64));return b.concat([e.encode(u,c),s])},$}(),i=Y,{typeforce:s}=i,u=r.OPS.OP_RESERVED;function c(e){return i.Buffer(e)||function(e){return i.Number(e)&&(e===r.OPS.OP_0||e>=r.OPS.OP_1&&e<=r.OPS.OP_16||e===r.OPS.OP_1NEGATE)}(e)}function l(e){return i.Array(e)&&e.every(c)}function p(e){return 0===e.length?r.OPS.OP_0:1===e.length?e[0]>=1&&e[0]<=16?u+e[0]:129===e[0]?r.OPS.OP_1NEGATE:void 0:void 0}function f(e){return b.isBuffer(e)}function d(e){return b.isBuffer(e)}function h(e){if(f(e))return e;s(i.Array,e);const t=e.reduce((e,t)=>d(t)?1===t.length&&void 0!==p(t)?e+1:e+o.encodingLength(t.length)+t.length:e+1,0),r=b.allocUnsafe(t);let a=0;if(e.forEach(e=>{if(d(e)){const t=p(e);if(void 0!==t)return r.writeUInt8(t,a),void(a+=1);a+=o.encode(r,e.length,a),e.copy(r,a),a+=e.length}else r.writeUInt8(e,a),a+=1}),a!==r.length)throw new Error("Could not decode chunks");return r}function m(e){if(t=e,i.Array(t))return e;var t;s(i.Buffer,e);const a=[];let n=0;for(;n<e.length;){const t=e[n];if(t>r.OPS.OP_0&&t<=r.OPS.OP_PUSHDATA4){const t=o.decode(e,n);if(null===t)return null;if(n+=t.size,n+t.number>e.length)return null;const r=e.slice(n,n+t.number);n+=t.number;const i=p(r);void 0!==i?a.push(i):a.push(r)}else a.push(t),n+=1}return a}function g(e){const t=-129&e;return t>0&&t<4}e.isPushOnly=l,e.countNonPushOnlyOPs=function(e){return e.length-e.filter(c).length},e.compile=h,e.decompile=m,e.toASM=function(e){if(f(e)&&(e=m(e)),!e)throw new Error("Could not convert invalid chunks to ASM");return e.map(e=>{if(d(e)){const t=p(e);if(void 0===t)return e.toString("hex");e=t}return r.REVERSE_OPS[e]}).join(" ")},e.fromASM=function(e){return s(i.String,e),h(e.split(" ").map(e=>void 0!==r.OPS[e]?r.OPS[e]:(s(i.Hex,e),b.from(e,"hex"))))},e.toStack=function(e){return e=m(e),s(l,e),e.map(e=>d(e)?e:e===r.OPS.OP_0?b.allocUnsafe(0):a.encode(e-u))},e.isCanonicalPubKey=function(e){return i.isPoint(e)},e.isDefinedHashType=g,e.isCanonicalScriptSignature=function(e){return!!b.isBuffer(e)&&(!!g(e[e.length-1])&&t.check(e.slice(0,-1)))},e.number=a,e.signature=n}(q)),q}!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.oneOf=e.Null=e.BufferN=e.Function=e.UInt32=e.UInt8=e.tuple=e.maybe=e.Hex=e.Buffer=e.String=e.Boolean=e.Array=e.Number=e.Hash256bit=e.Hash160bit=e.Buffer256bit=e.isTaptree=e.isTapleaf=e.TAPLEAF_VERSION_MASK=e.Satoshi=e.isPoint=e.stacksEqual=e.typeforce=void 0;const t=J;e.typeforce=Ie;const r=t.Buffer.alloc(32,0),o=t.Buffer.from("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f","hex");e.stacksEqual=function(e,t){return e.length===t.length&&e.every((e,r)=>e.equals(t[r]))},e.isPoint=function(e){if(!t.Buffer.isBuffer(e))return!1;if(e.length<33)return!1;const a=e[0],n=e.slice(1,33);if(0===n.compare(r))return!1;if(n.compare(o)>=0)return!1;if((2===a||3===a)&&33===e.length)return!0;const i=e.slice(33);return 0!==i.compare(r)&&(!(i.compare(o)>=0)&&(4===a&&65===e.length))};function a(r){return!(!r||!("output"in r))&&(!!t.Buffer.isBuffer(r.output)&&(void 0===r.version||(r.version&e.TAPLEAF_VERSION_MASK)===r.version))}e.Satoshi=function(t){return e.typeforce.UInt53(t)&&t<=21e14},e.TAPLEAF_VERSION_MASK=254,e.isTapleaf=a,e.isTaptree=function t(r){return(0,e.Array)(r)?2===r.length&&r.every(e=>t(e)):a(r)},e.Buffer256bit=e.typeforce.BufferN(32),e.Hash160bit=e.typeforce.BufferN(20),e.Hash256bit=e.typeforce.BufferN(32),e.Number=e.typeforce.Number,e.Array=e.typeforce.Array,e.Boolean=e.typeforce.Boolean,e.String=e.typeforce.String,e.Buffer=e.typeforce.Buffer,e.Hex=e.typeforce.Hex,e.maybe=e.typeforce.maybe,e.tuple=e.typeforce.tuple,e.UInt8=e.typeforce.UInt8,e.UInt32=e.typeforce.UInt32,e.Function=e.typeforce.Function,e.BufferN=e.typeforce.BufferN,e.Null=e.typeforce.Null,e.oneOf=e.typeforce.oneOf}(Y);var Ae={};Object.defineProperty(Ae,"__esModule",{value:!0}),Ae.value=Ae.prop=void 0,Ae.prop=function(e,t,r){Object.defineProperty(e,t,{configurable:!0,enumerable:!0,get(){const e=r.call(this);return this[t]=e,e},set(e){Object.defineProperty(this,t,{configurable:!0,enumerable:!0,value:e,writable:!0})}})},Ae.value=function(e){let t;return()=>(void 0!==t||(t=e()),t)},Object.defineProperty(R,"__esModule",{value:!0}),R.p2data=void 0;const ze=L,Oe=Te(),xe=Y,Pe=Ae,je=Oe.OPS;R.p2data=function(e,t){if(!e.data&&!e.output)throw new TypeError("Not enough data");t=Object.assign({validate:!0},t||{}),(0,xe.typeforce)({network:xe.typeforce.maybe(xe.typeforce.Object),output:xe.typeforce.maybe(xe.typeforce.Buffer),data:xe.typeforce.maybe(xe.typeforce.arrayOf(xe.typeforce.Buffer))},e);const r={name:"embed",network:e.network||ze.bitcoin};if(Pe.prop(r,"output",()=>{if(e.data)return Oe.compile([je.OP_RETURN].concat(e.data))}),Pe.prop(r,"data",()=>{if(e.output)return Oe.decompile(e.output).slice(1)}),t.validate&&e.output){const t=Oe.decompile(e.output);if(t[0]!==je.OP_RETURN)throw new TypeError("Output is invalid");if(!t.slice(1).every(xe.typeforce.Buffer))throw new TypeError("Output is invalid");if(e.data&&!(0,xe.stacksEqual)(e.data,r.data))throw new TypeError("Data mismatch")}return Object.assign(r,e)};var Be={};Object.defineProperty(Be,"__esModule",{value:!0}),Be.p2ms=void 0;const He=L,Ue=Te(),Ne=Y,Le=Ae,Ce=Ue.OPS,Re=Ce.OP_RESERVED;Be.p2ms=function(e,t){if(!(e.input||e.output||e.pubkeys&&void 0!==e.m||e.signatures))throw new TypeError("Not enough data");function r(e){return Ue.isCanonicalScriptSignature(e)||void 0!==(t.allowIncomplete&&e===Ce.OP_0)}t=Object.assign({validate:!0},t||{}),(0,Ne.typeforce)({network:Ne.typeforce.maybe(Ne.typeforce.Object),m:Ne.typeforce.maybe(Ne.typeforce.Number),n:Ne.typeforce.maybe(Ne.typeforce.Number),output:Ne.typeforce.maybe(Ne.typeforce.Buffer),pubkeys:Ne.typeforce.maybe(Ne.typeforce.arrayOf(Ne.isPoint)),signatures:Ne.typeforce.maybe(Ne.typeforce.arrayOf(r)),input:Ne.typeforce.maybe(Ne.typeforce.Buffer)},e);const o={network:e.network||He.bitcoin};let a=[],n=!1;function i(e){n||(n=!0,a=Ue.decompile(e),o.m=a[0]-Re,o.n=a[a.length-2]-Re,o.pubkeys=a.slice(1,-2))}if(Le.prop(o,"output",()=>{if(e.m&&o.n&&e.pubkeys)return Ue.compile([].concat(Re+e.m,e.pubkeys,Re+o.n,Ce.OP_CHECKMULTISIG))}),Le.prop(o,"m",()=>{if(o.output)return i(o.output),o.m}),Le.prop(o,"n",()=>{if(o.pubkeys)return o.pubkeys.length}),Le.prop(o,"pubkeys",()=>{if(e.output)return i(e.output),o.pubkeys}),Le.prop(o,"signatures",()=>{if(e.input)return Ue.decompile(e.input).slice(1)}),Le.prop(o,"input",()=>{if(e.signatures)return Ue.compile([Ce.OP_0].concat(e.signatures))}),Le.prop(o,"witness",()=>{if(o.input)return[]}),Le.prop(o,"name",()=>{if(o.m&&o.n)return`p2ms(${o.m} of ${o.n})`}),t.validate){if(e.output){if(i(e.output),!Ne.typeforce.Number(a[0]))throw new TypeError("Output is invalid");if(!Ne.typeforce.Number(a[a.length-2]))throw new TypeError("Output is invalid");if(a[a.length-1]!==Ce.OP_CHECKMULTISIG)throw new TypeError("Output is invalid");if(o.m<=0||o.n>16||o.m>o.n||o.n!==a.length-3)throw new TypeError("Output is invalid");if(!o.pubkeys.every(e=>(0,Ne.isPoint)(e)))throw new TypeError("Output is invalid");if(void 0!==e.m&&e.m!==o.m)throw new TypeError("m mismatch");if(void 0!==e.n&&e.n!==o.n)throw new TypeError("n mismatch");if(e.pubkeys&&!(0,Ne.stacksEqual)(e.pubkeys,o.pubkeys))throw new TypeError("Pubkeys mismatch")}if(e.pubkeys){if(void 0!==e.n&&e.n!==e.pubkeys.length)throw new TypeError("Pubkey count mismatch");if(o.n=e.pubkeys.length,o.n<o.m)throw new TypeError("Pubkey count cannot be less than m")}if(e.signatures){if(e.signatures.length<o.m)throw new TypeError("Not enough signatures provided");if(e.signatures.length>o.m)throw new TypeError("Too many signatures provided")}if(e.input){if(e.input[0]!==Ce.OP_0)throw new TypeError("Input is invalid");if(0===o.signatures.length||!o.signatures.every(r))throw new TypeError("Input has invalid signature(s)");if(e.signatures&&!(0,Ne.stacksEqual)(e.signatures,o.signatures))throw new TypeError("Signature mismatch");if(void 0!==e.m&&e.m!==e.signatures.length)throw new TypeError("Signature count mismatch")}}return Object.assign(o,e)};var qe={};Object.defineProperty(qe,"__esModule",{value:!0}),qe.p2pk=void 0;const Me=L,Ve=Te(),De=Y,Fe=Ae,Ke=Ve.OPS;qe.p2pk=function(e,t){if(!(e.input||e.output||e.pubkey||e.input||e.signature))throw new TypeError("Not enough data");t=Object.assign({validate:!0},t||{}),(0,De.typeforce)({network:De.typeforce.maybe(De.typeforce.Object),output:De.typeforce.maybe(De.typeforce.Buffer),pubkey:De.typeforce.maybe(De.isPoint),signature:De.typeforce.maybe(Ve.isCanonicalScriptSignature),input:De.typeforce.maybe(De.typeforce.Buffer)},e);const r=Fe.value(()=>Ve.decompile(e.input)),o={name:"p2pk",network:e.network||Me.bitcoin};if(Fe.prop(o,"output",()=>{if(e.pubkey)return Ve.compile([e.pubkey,Ke.OP_CHECKSIG])}),Fe.prop(o,"pubkey",()=>{if(e.output)return e.output.slice(1,-1)}),Fe.prop(o,"signature",()=>{if(e.input)return r()[0]}),Fe.prop(o,"input",()=>{if(e.signature)return Ve.compile([e.signature])}),Fe.prop(o,"witness",()=>{if(o.input)return[]}),t.validate){if(e.output){if(e.output[e.output.length-1]!==Ke.OP_CHECKSIG)throw new TypeError("Output is invalid");if(!(0,De.isPoint)(o.pubkey))throw new TypeError("Output pubkey is invalid");if(e.pubkey&&!e.pubkey.equals(o.pubkey))throw new TypeError("Pubkey mismatch")}if(e.signature&&e.input&&!e.input.equals(o.input))throw new TypeError("Signature mismatch");if(e.input){if(1!==r().length)throw new TypeError("Input is invalid");if(!Ve.isCanonicalScriptSignature(o.signature))throw new TypeError("Input has invalid signature")}}return Object.assign(o,e)};var Ge={},We={},Xe={},$e={},Ye={},Je={},Qe={};Object.defineProperty(Qe,"__esModule",{value:!0}),Qe.crypto=void 0,Qe.crypto="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0,function(e){
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(e,"__esModule",{value:!0}),e.wrapXOFConstructorWithOpts=e.wrapConstructorWithOpts=e.wrapConstructor=e.Hash=e.nextTick=e.swap32IfBE=e.byteSwapIfBE=e.swap8IfBE=e.isLE=void 0,e.isBytes=r,e.anumber=o,e.abytes=a,e.ahash=function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.createHasher");o(e.outputLen),o(e.blockLen)},e.aexists=function(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")},e.aoutput=function(e,t){a(e);const r=t.outputLen;if(e.length<r)throw new Error("digestInto() expects output buffer of length at least "+r)},e.u8=function(e){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)},e.u32=function(e){return new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4))},e.clean=function(...e){for(let t=0;t<e.length;t++)e[t].fill(0)},e.createView=function(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)},e.rotr=function(e,t){return e<<32-t|e>>>t},e.rotl=function(e,t){return e<<t|e>>>32-t>>>0},e.byteSwap=n,e.byteSwap32=i,e.bytesToHex=function(e){if(a(e),s)return e.toHex();let t="";for(let r=0;r<e.length;r++)t+=u[e[r]];return t},e.hexToBytes=function(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);if(s)return Uint8Array.fromHex(e);const t=e.length,r=t/2;if(t%2)throw new Error("hex string expected, got unpadded hex of length "+t);const o=new Uint8Array(r);for(let a=0,n=0;a<r;a++,n+=2){const t=l(e.charCodeAt(n)),r=l(e.charCodeAt(n+1));if(void 0===t||void 0===r){const t=e[n]+e[n+1];throw new Error('hex string expected, got non-hex character "'+t+'" at index '+n)}o[a]=16*t+r}return o},e.asyncLoop=async function(t,r,o){let a=Date.now();for(let n=0;n<t;n++){o(n);const t=Date.now()-a;t>=0&&t<r||(await(0,e.nextTick)(),a+=t)}},e.utf8ToBytes=p,e.bytesToUtf8=function(e){return(new TextDecoder).decode(e)},e.toBytes=f,e.kdfInputToBytes=function(e){"string"==typeof e&&(e=p(e));return a(e),e},e.concatBytes=function(...e){let t=0;for(let o=0;o<e.length;o++){const r=e[o];a(r),t+=r.length}const r=new Uint8Array(t);for(let o=0,a=0;o<e.length;o++){const t=e[o];r.set(t,a),a+=t.length}return r},e.checkOpts=function(e,t){if(void 0!==t&&"[object Object]"!=={}.toString.call(t))throw new Error("options should be object or undefined");return Object.assign(e,t)},e.createHasher=d,e.createOptHasher=h,e.createXOFer=m,e.randomBytes=function(e=32){if(t.crypto&&"function"==typeof t.crypto.getRandomValues)return t.crypto.getRandomValues(new Uint8Array(e));if(t.crypto&&"function"==typeof t.crypto.randomBytes)return Uint8Array.from(t.crypto.randomBytes(e));throw new Error("crypto.getRandomValues must be defined")};const t=Qe;function r(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function o(e){if(!Number.isSafeInteger(e)||e<0)throw new Error("positive integer expected, got "+e)}function a(e,...t){if(!r(e))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(e.length))throw new Error("Uint8Array expected of length "+t+", got length="+e.length)}function n(e){return e<<24&4278190080|e<<8&16711680|e>>>8&65280|e>>>24&255}function i(e){for(let t=0;t<e.length;t++)e[t]=n(e[t]);return e}e.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],e.swap8IfBE=e.isLE?e=>e:e=>n(e),e.byteSwapIfBE=e.swap8IfBE,e.swap32IfBE=e.isLE?e=>e:i;const s=(()=>"function"==typeof Uint8Array.from([]).toHex&&"function"==typeof Uint8Array.fromHex)(),u=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));const c={_0:48,_9:57,A:65,F:70,a:97,f:102};function l(e){return e>=c._0&&e<=c._9?e-c._0:e>=c.A&&e<=c.F?e-(c.A-10):e>=c.a&&e<=c.f?e-(c.a-10):void 0}function p(e){if("string"!=typeof e)throw new Error("string expected");return new Uint8Array((new TextEncoder).encode(e))}function f(e){return"string"==typeof e&&(e=p(e)),a(e),e}e.nextTick=async()=>{};function d(e){const t=t=>e().update(f(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function h(e){const t=(t,r)=>e(r).update(f(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t}function m(e){const t=(t,r)=>e(r).update(f(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t}e.Hash=class{},e.wrapConstructor=d,e.wrapConstructorWithOpts=h,e.wrapXOFConstructorWithOpts=m}(Je),Object.defineProperty(Ye,"__esModule",{value:!0}),Ye.SHA512_IV=Ye.SHA384_IV=Ye.SHA224_IV=Ye.SHA256_IV=Ye.HashMD=void 0,Ye.setBigUint64=et,Ye.Chi=function(e,t,r){return e&t^~e&r},Ye.Maj=function(e,t,r){return e&t^e&r^t&r};const Ze=Je;function et(e,t,r,o){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,r,o);const a=BigInt(32),n=BigInt(4294967295),i=Number(r>>a&n),s=Number(r&n),u=o?4:0,c=o?0:4;e.setUint32(t+u,i,o),e.setUint32(t+c,s,o)}Ye.HashMD=class extends Ze.Hash{constructor(e,t,r,o){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=o,this.buffer=new Uint8Array(e),this.view=(0,Ze.createView)(this.buffer)}update(e){(0,Ze.aexists)(this),e=(0,Ze.toBytes)(e),(0,Ze.abytes)(e);const{view:t,buffer:r,blockLen:o}=this,a=e.length;for(let n=0;n<a;){const i=Math.min(o-this.pos,a-n);if(i===o){const t=(0,Ze.createView)(e);for(;o<=a-n;n+=o)this.process(t,n);continue}r.set(e.subarray(n,n+i),this.pos),this.pos+=i,n+=i,this.pos===o&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){(0,Ze.aexists)(this),(0,Ze.aoutput)(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:o,isLE:a}=this;let{pos:n}=this;t[n++]=128,(0,Ze.clean)(this.buffer.subarray(n)),this.padOffset>o-n&&(this.process(r,0),n=0);for(let l=n;l<o;l++)t[l]=0;et(r,o-8,BigInt(8*this.length),a),this.process(r,0);const i=(0,Ze.createView)(e),s=this.outputLen;if(s%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const u=s/4,c=this.get();if(u>c.length)throw new Error("_sha2: outputLen bigger than state");for(let l=0;l<u;l++)i.setUint32(4*l,c[l],a)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:o,finished:a,destroyed:n,pos:i}=this;return e.destroyed=n,e.finished=a,e.length=o,e.pos=i,o%t&&e.buffer.set(r),e}clone(){return this._cloneInto()}},Ye.SHA256_IV=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Ye.SHA224_IV=Uint32Array.from([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]),Ye.SHA384_IV=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),Ye.SHA512_IV=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),Object.defineProperty($e,"__esModule",{value:!0}),$e.ripemd160=$e.RIPEMD160=$e.md5=$e.MD5=$e.sha1=$e.SHA1=void 0;const tt=Ye,rt=Je,ot=Uint32Array.from([1732584193,4023233417,2562383102,271733878,3285377520]),at=new Uint32Array(80);class nt extends tt.HashMD{constructor(){super(64,20,8,!1),this.A=0|ot[0],this.B=0|ot[1],this.C=0|ot[2],this.D=0|ot[3],this.E=0|ot[4]}get(){const{A:e,B:t,C:r,D:o,E:a}=this;return[e,t,r,o,a]}set(e,t,r,o,a){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|o,this.E=0|a}process(e,t){for(let s=0;s<16;s++,t+=4)at[s]=e.getUint32(t,!1);for(let s=16;s<80;s++)at[s]=(0,rt.rotl)(at[s-3]^at[s-8]^at[s-14]^at[s-16],1);let{A:r,B:o,C:a,D:n,E:i}=this;for(let s=0;s<80;s++){let e,t;s<20?(e=(0,tt.Chi)(o,a,n),t=1518500249):s<40?(e=o^a^n,t=1859775393):s<60?(e=(0,tt.Maj)(o,a,n),t=2400959708):(e=o^a^n,t=3395469782);const u=(0,rt.rotl)(r,5)+e+i+t+at[s]|0;i=n,n=a,a=(0,rt.rotl)(o,30),o=r,r=u}r=r+this.A|0,o=o+this.B|0,a=a+this.C|0,n=n+this.D|0,i=i+this.E|0,this.set(r,o,a,n,i)}roundClean(){(0,rt.clean)(at)}destroy(){this.set(0,0,0,0,0),(0,rt.clean)(this.buffer)}}$e.SHA1=nt,$e.sha1=(0,rt.createHasher)(()=>new nt);const it=Math.pow(2,32),st=Array.from({length:64},(e,t)=>Math.floor(it*Math.abs(Math.sin(t+1)))),ut=ot.slice(0,4),ct=new Uint32Array(16);class lt extends tt.HashMD{constructor(){super(64,16,8,!0),this.A=0|ut[0],this.B=0|ut[1],this.C=0|ut[2],this.D=0|ut[3]}get(){const{A:e,B:t,C:r,D:o}=this;return[e,t,r,o]}set(e,t,r,o){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|o}process(e,t){for(let i=0;i<16;i++,t+=4)ct[i]=e.getUint32(t,!0);let{A:r,B:o,C:a,D:n}=this;for(let i=0;i<64;i++){let e,t,s;i<16?(e=(0,tt.Chi)(o,a,n),t=i,s=[7,12,17,22]):i<32?(e=(0,tt.Chi)(n,o,a),t=(5*i+1)%16,s=[5,9,14,20]):i<48?(e=o^a^n,t=(3*i+5)%16,s=[4,11,16,23]):(e=a^(o|~n),t=7*i%16,s=[6,10,15,21]),e=e+r+st[i]+ct[t],r=n,n=a,a=o,o+=(0,rt.rotl)(e,s[i%4])}r=r+this.A|0,o=o+this.B|0,a=a+this.C|0,n=n+this.D|0,this.set(r,o,a,n)}roundClean(){(0,rt.clean)(ct)}destroy(){this.set(0,0,0,0),(0,rt.clean)(this.buffer)}}$e.MD5=lt,$e.md5=(0,rt.createHasher)(()=>new lt);const pt=Uint8Array.from([7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8]),ft=(()=>Uint8Array.from(new Array(16).fill(0).map((e,t)=>t)))(),dt=(()=>ft.map(e=>(9*e+5)%16))(),ht=(()=>{const e=[[ft],[dt]];for(let t=0;t<4;t++)for(let r of e)r.push(r[t].map(e=>pt[e]));return e})(),mt=(()=>ht[0])(),gt=(()=>ht[1])(),bt=[[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8],[12,13,11,15,6,9,9,7,12,15,11,13,7,8,7,7],[13,15,14,11,7,7,6,8,13,14,13,12,5,5,6,9],[14,11,12,14,8,6,5,5,15,12,15,14,9,9,8,6],[15,12,13,13,9,5,8,6,14,11,12,11,8,6,5,5]].map(e=>Uint8Array.from(e)),yt=mt.map((e,t)=>e.map(e=>bt[t][e])),vt=gt.map((e,t)=>e.map(e=>bt[t][e])),wt=Uint32Array.from([0,1518500249,1859775393,2400959708,2840853838]),kt=Uint32Array.from([1352829926,1548603684,1836072691,2053994217,0]);function Et(e,t,r,o){return 0===e?t^r^o:1===e?t&r|~t&o:2===e?(t|~r)^o:3===e?t&o|r&~o:t^(r|~o)}const St=new Uint32Array(16);class _t extends tt.HashMD{constructor(){super(64,20,8,!0),this.h0=1732584193,this.h1=-271733879,this.h2=-1732584194,this.h3=271733878,this.h4=-1009589776}get(){const{h0:e,h1:t,h2:r,h3:o,h4:a}=this;return[e,t,r,o,a]}set(e,t,r,o,a){this.h0=0|e,this.h1=0|t,this.h2=0|r,this.h3=0|o,this.h4=0|a}process(e,t){for(let f=0;f<16;f++,t+=4)St[f]=e.getUint32(t,!0);let r=0|this.h0,o=r,a=0|this.h1,n=a,i=0|this.h2,s=i,u=0|this.h3,c=u,l=0|this.h4,p=l;for(let f=0;f<5;f++){const e=4-f,t=wt[f],d=kt[f],h=mt[f],m=gt[f],g=yt[f],b=vt[f];for(let o=0;o<16;o++){const e=(0,rt.rotl)(r+Et(f,a,i,u)+St[h[o]]+t,g[o])+l|0;r=l,l=u,u=0|(0,rt.rotl)(i,10),i=a,a=e}for(let r=0;r<16;r++){const t=(0,rt.rotl)(o+Et(e,n,s,c)+St[m[r]]+d,b[r])+p|0;o=p,p=c,c=0|(0,rt.rotl)(s,10),s=n,n=t}}this.set(this.h1+i+c|0,this.h2+u+p|0,this.h3+l+o|0,this.h4+r+n|0,this.h0+a+s|0)}roundClean(){(0,rt.clean)(St)}destroy(){this.destroyed=!0,(0,rt.clean)(this.buffer),this.set(0,0,0,0,0)}}$e.RIPEMD160=_t,$e.ripemd160=(0,rt.createHasher)(()=>new _t),Object.defineProperty(Xe,"__esModule",{value:!0}),Xe.ripemd160=Xe.RIPEMD160=void 0;const It=$e;Xe.RIPEMD160=It.RIPEMD160,Xe.ripemd160=It.ripemd160;var Tt={};Object.defineProperty(Tt,"__esModule",{value:!0}),Tt.sha1=Tt.SHA1=void 0;const At=$e;Tt.SHA1=At.SHA1,Tt.sha1=At.sha1;var zt={},Ot={},xt={};Object.defineProperty(xt,"__esModule",{value:!0}),xt.toBig=xt.shrSL=xt.shrSH=xt.rotrSL=xt.rotrSH=xt.rotrBL=xt.rotrBH=xt.rotr32L=xt.rotr32H=xt.rotlSL=xt.rotlSH=xt.rotlBL=xt.rotlBH=xt.add5L=xt.add5H=xt.add4L=xt.add4H=xt.add3L=xt.add3H=void 0,xt.add=Xt,xt.fromBig=Bt,xt.split=Ht;const Pt=BigInt(2**32-1),jt=BigInt(32);function Bt(e,t=!1){return t?{h:Number(e&Pt),l:Number(e>>jt&Pt)}:{h:0|Number(e>>jt&Pt),l:0|Number(e&Pt)}}function Ht(e,t=!1){const r=e.length;let o=new Uint32Array(r),a=new Uint32Array(r);for(let n=0;n<r;n++){const{h:r,l:i}=Bt(e[n],t);[o[n],a[n]]=[r,i]}return[o,a]}const Ut=(e,t)=>BigInt(e>>>0)<<jt|BigInt(t>>>0);xt.toBig=Ut;const Nt=(e,t,r)=>e>>>r;xt.shrSH=Nt;const Lt=(e,t,r)=>e<<32-r|t>>>r;xt.shrSL=Lt;const Ct=(e,t,r)=>e>>>r|t<<32-r;xt.rotrSH=Ct;const Rt=(e,t,r)=>e<<32-r|t>>>r;xt.rotrSL=Rt;const qt=(e,t,r)=>e<<64-r|t>>>r-32;xt.rotrBH=qt;const Mt=(e,t,r)=>e>>>r-32|t<<64-r;xt.rotrBL=Mt;const Vt=(e,t)=>t;xt.rotr32H=Vt;const Dt=(e,t)=>e;xt.rotr32L=Dt;const Ft=(e,t,r)=>e<<r|t>>>32-r;xt.rotlSH=Ft;const Kt=(e,t,r)=>t<<r|e>>>32-r;xt.rotlSL=Kt;const Gt=(e,t,r)=>t<<r-32|e>>>64-r;xt.rotlBH=Gt;const Wt=(e,t,r)=>e<<r-32|t>>>64-r;function Xt(e,t,r,o){const a=(t>>>0)+(o>>>0);return{h:e+r+(a/2**32|0)|0,l:0|a}}xt.rotlBL=Wt;const $t=(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0);xt.add3L=$t;const Yt=(e,t,r,o)=>t+r+o+(e/2**32|0)|0;xt.add3H=Yt;const Jt=(e,t,r,o)=>(e>>>0)+(t>>>0)+(r>>>0)+(o>>>0);xt.add4L=Jt;const Qt=(e,t,r,o,a)=>t+r+o+a+(e/2**32|0)|0;xt.add4H=Qt;const Zt=(e,t,r,o,a)=>(e>>>0)+(t>>>0)+(r>>>0)+(o>>>0)+(a>>>0);xt.add5L=Zt;const er=(e,t,r,o,a,n)=>t+r+o+a+n+(e/2**32|0)|0;xt.add5H=er;const tr={fromBig:Bt,split:Ht,toBig:Ut,shrSH:Nt,shrSL:Lt,rotrSH:Ct,rotrSL:Rt,rotrBH:qt,rotrBL:Mt,rotr32H:Vt,rotr32L:Dt,rotlSH:Ft,rotlSL:Kt,rotlBH:Gt,rotlBL:Wt,add:Xt,add3L:$t,add3H:Yt,add4L:Jt,add4H:Qt,add5H:er,add5L:Zt};xt.default=tr,Object.defineProperty(Ot,"__esModule",{value:!0}),Ot.sha512_224=Ot.sha512_256=Ot.sha384=Ot.sha512=Ot.sha224=Ot.sha256=Ot.SHA512_256=Ot.SHA512_224=Ot.SHA384=Ot.SHA512=Ot.SHA224=Ot.SHA256=void 0;const rr=Ye,or=xt,ar=Je,nr=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),ir=new Uint32Array(64);class sr extends rr.HashMD{constructor(e=32){super(64,e,8,!1),this.A=0|rr.SHA256_IV[0],this.B=0|rr.SHA256_IV[1],this.C=0|rr.SHA256_IV[2],this.D=0|rr.SHA256_IV[3],this.E=0|rr.SHA256_IV[4],this.F=0|rr.SHA256_IV[5],this.G=0|rr.SHA256_IV[6],this.H=0|rr.SHA256_IV[7]}get(){const{A:e,B:t,C:r,D:o,E:a,F:n,G:i,H:s}=this;return[e,t,r,o,a,n,i,s]}set(e,t,r,o,a,n,i,s){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|o,this.E=0|a,this.F=0|n,this.G=0|i,this.H=0|s}process(e,t){for(let l=0;l<16;l++,t+=4)ir[l]=e.getUint32(t,!1);for(let l=16;l<64;l++){const e=ir[l-15],t=ir[l-2],r=(0,ar.rotr)(e,7)^(0,ar.rotr)(e,18)^e>>>3,o=(0,ar.rotr)(t,17)^(0,ar.rotr)(t,19)^t>>>10;ir[l]=o+ir[l-7]+r+ir[l-16]|0}let{A:r,B:o,C:a,D:n,E:i,F:s,G:u,H:c}=this;for(let l=0;l<64;l++){const e=c+((0,ar.rotr)(i,6)^(0,ar.rotr)(i,11)^(0,ar.rotr)(i,25))+(0,rr.Chi)(i,s,u)+nr[l]+ir[l]|0,t=((0,ar.rotr)(r,2)^(0,ar.rotr)(r,13)^(0,ar.rotr)(r,22))+(0,rr.Maj)(r,o,a)|0;c=u,u=s,s=i,i=n+e|0,n=a,a=o,o=r,r=e+t|0}r=r+this.A|0,o=o+this.B|0,a=a+this.C|0,n=n+this.D|0,i=i+this.E|0,s=s+this.F|0,u=u+this.G|0,c=c+this.H|0,this.set(r,o,a,n,i,s,u,c)}roundClean(){(0,ar.clean)(ir)}destroy(){this.set(0,0,0,0,0,0,0,0),(0,ar.clean)(this.buffer)}}Ot.SHA256=sr;class ur extends sr{constructor(){super(28),this.A=0|rr.SHA224_IV[0],this.B=0|rr.SHA224_IV[1],this.C=0|rr.SHA224_IV[2],this.D=0|rr.SHA224_IV[3],this.E=0|rr.SHA224_IV[4],this.F=0|rr.SHA224_IV[5],this.G=0|rr.SHA224_IV[6],this.H=0|rr.SHA224_IV[7]}}Ot.SHA224=ur;const cr=(()=>or.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))))(),lr=(()=>cr[0])(),pr=(()=>cr[1])(),fr=new Uint32Array(80),dr=new Uint32Array(80);class hr extends rr.HashMD{constructor(e=64){super(128,e,16,!1),this.Ah=0|rr.SHA512_IV[0],this.Al=0|rr.SHA512_IV[1],this.Bh=0|rr.SHA512_IV[2],this.Bl=0|rr.SHA512_IV[3],this.Ch=0|rr.SHA512_IV[4],this.Cl=0|rr.SHA512_IV[5],this.Dh=0|rr.SHA512_IV[6],this.Dl=0|rr.SHA512_IV[7],this.Eh=0|rr.SHA512_IV[8],this.El=0|rr.SHA512_IV[9],this.Fh=0|rr.SHA512_IV[10],this.Fl=0|rr.SHA512_IV[11],this.Gh=0|rr.SHA512_IV[12],this.Gl=0|rr.SHA512_IV[13],this.Hh=0|rr.SHA512_IV[14],this.Hl=0|rr.SHA512_IV[15]}get(){const{Ah:e,Al:t,Bh:r,Bl:o,Ch:a,Cl:n,Dh:i,Dl:s,Eh:u,El:c,Fh:l,Fl:p,Gh:f,Gl:d,Hh:h,Hl:m}=this;return[e,t,r,o,a,n,i,s,u,c,l,p,f,d,h,m]}set(e,t,r,o,a,n,i,s,u,c,l,p,f,d,h,m){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|o,this.Ch=0|a,this.Cl=0|n,this.Dh=0|i,this.Dl=0|s,this.Eh=0|u,this.El=0|c,this.Fh=0|l,this.Fl=0|p,this.Gh=0|f,this.Gl=0|d,this.Hh=0|h,this.Hl=0|m}process(e,t){for(let y=0;y<16;y++,t+=4)fr[y]=e.getUint32(t),dr[y]=e.getUint32(t+=4);for(let y=16;y<80;y++){const e=0|fr[y-15],t=0|dr[y-15],r=or.rotrSH(e,t,1)^or.rotrSH(e,t,8)^or.shrSH(e,t,7),o=or.rotrSL(e,t,1)^or.rotrSL(e,t,8)^or.shrSL(e,t,7),a=0|fr[y-2],n=0|dr[y-2],i=or.rotrSH(a,n,19)^or.rotrBH(a,n,61)^or.shrSH(a,n,6),s=or.rotrSL(a,n,19)^or.rotrBL(a,n,61)^or.shrSL(a,n,6),u=or.add4L(o,s,dr[y-7],dr[y-16]),c=or.add4H(u,r,i,fr[y-7],fr[y-16]);fr[y]=0|c,dr[y]=0|u}let{Ah:r,Al:o,Bh:a,Bl:n,Ch:i,Cl:s,Dh:u,Dl:c,Eh:l,El:p,Fh:f,Fl:d,Gh:h,Gl:m,Hh:g,Hl:b}=this;for(let y=0;y<80;y++){const e=or.rotrSH(l,p,14)^or.rotrSH(l,p,18)^or.rotrBH(l,p,41),t=or.rotrSL(l,p,14)^or.rotrSL(l,p,18)^or.rotrBL(l,p,41),v=l&f^~l&h,w=p&d^~p&m,k=or.add5L(b,t,w,pr[y],dr[y]),E=or.add5H(k,g,e,v,lr[y],fr[y]),S=0|k,_=or.rotrSH(r,o,28)^or.rotrBH(r,o,34)^or.rotrBH(r,o,39),I=or.rotrSL(r,o,28)^or.rotrBL(r,o,34)^or.rotrBL(r,o,39),T=r&a^r&i^a&i,A=o&n^o&s^n&s;g=0|h,b=0|m,h=0|f,m=0|d,f=0|l,d=0|p,({h:l,l:p}=or.add(0|u,0|c,0|E,0|S)),u=0|i,c=0|s,i=0|a,s=0|n,a=0|r,n=0|o;const z=or.add3L(S,I,A);r=or.add3H(z,E,_,T),o=0|z}({h:r,l:o}=or.add(0|this.Ah,0|this.Al,0|r,0|o)),({h:a,l:n}=or.add(0|this.Bh,0|this.Bl,0|a,0|n)),({h:i,l:s}=or.add(0|this.Ch,0|this.Cl,0|i,0|s)),({h:u,l:c}=or.add(0|this.Dh,0|this.Dl,0|u,0|c)),({h:l,l:p}=or.add(0|this.Eh,0|this.El,0|l,0|p)),({h:f,l:d}=or.add(0|this.Fh,0|this.Fl,0|f,0|d)),({h:h,l:m}=or.add(0|this.Gh,0|this.Gl,0|h,0|m)),({h:g,l:b}=or.add(0|this.Hh,0|this.Hl,0|g,0|b)),this.set(r,o,a,n,i,s,u,c,l,p,f,d,h,m,g,b)}roundClean(){(0,ar.clean)(fr,dr)}destroy(){(0,ar.clean)(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}Ot.SHA512=hr;class mr extends hr{constructor(){super(48),this.Ah=0|rr.SHA384_IV[0],this.Al=0|rr.SHA384_IV[1],this.Bh=0|rr.SHA384_IV[2],this.Bl=0|rr.SHA384_IV[3],this.Ch=0|rr.SHA384_IV[4],this.Cl=0|rr.SHA384_IV[5],this.Dh=0|rr.SHA384_IV[6],this.Dl=0|rr.SHA384_IV[7],this.Eh=0|rr.SHA384_IV[8],this.El=0|rr.SHA384_IV[9],this.Fh=0|rr.SHA384_IV[10],this.Fl=0|rr.SHA384_IV[11],this.Gh=0|rr.SHA384_IV[12],this.Gl=0|rr.SHA384_IV[13],this.Hh=0|rr.SHA384_IV[14],this.Hl=0|rr.SHA384_IV[15]}}Ot.SHA384=mr;const gr=Uint32Array.from([2352822216,424955298,1944164710,2312950998,502970286,855612546,1738396948,1479516111,258812777,2077511080,2011393907,79989058,1067287976,1780299464,286451373,2446758561]),br=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class yr extends hr{constructor(){super(28),this.Ah=0|gr[0],this.Al=0|gr[1],this.Bh=0|gr[2],this.Bl=0|gr[3],this.Ch=0|gr[4],this.Cl=0|gr[5],this.Dh=0|gr[6],this.Dl=0|gr[7],this.Eh=0|gr[8],this.El=0|gr[9],this.Fh=0|gr[10],this.Fl=0|gr[11],this.Gh=0|gr[12],this.Gl=0|gr[13],this.Hh=0|gr[14],this.Hl=0|gr[15]}}Ot.SHA512_224=yr;class vr extends hr{constructor(){super(32),this.Ah=0|br[0],this.Al=0|br[1],this.Bh=0|br[2],this.Bl=0|br[3],this.Ch=0|br[4],this.Cl=0|br[5],this.Dh=0|br[6],this.Dl=0|br[7],this.Eh=0|br[8],this.El=0|br[9],this.Fh=0|br[10],this.Fl=0|br[11],this.Gh=0|br[12],this.Gl=0|br[13],this.Hh=0|br[14],this.Hl=0|br[15]}}Ot.SHA512_256=vr,Ot.sha256=(0,ar.createHasher)(()=>new sr),Ot.sha224=(0,ar.createHasher)(()=>new ur),Ot.sha512=(0,ar.createHasher)(()=>new hr),Ot.sha384=(0,ar.createHasher)(()=>new mr),Ot.sha512_256=(0,ar.createHasher)(()=>new vr),Ot.sha512_224=(0,ar.createHasher)(()=>new yr),Object.defineProperty(zt,"__esModule",{value:!0}),zt.sha224=zt.SHA224=zt.sha256=zt.SHA256=void 0;const wr=Ot;zt.SHA256=wr.SHA256,zt.sha256=wr.sha256,zt.SHA224=wr.SHA224,zt.sha224=wr.sha224,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.taggedHash=e.TAGGED_HASH_PREFIXES=e.TAGS=e.hash256=e.hash160=e.sha256=e.sha1=e.ripemd160=void 0;const t=Xe,r=Tt,o=zt;function a(e){return b.from((0,o.sha256)(Uint8Array.from(e)))}e.ripemd160=function(e){return b.from((0,t.ripemd160)(Uint8Array.from(e)))},e.sha1=function(e){return b.from((0,r.sha1)(Uint8Array.from(e)))},e.sha256=a,e.hash160=function(e){return b.from((0,t.ripemd160)((0,o.sha256)(Uint8Array.from(e))))},e.hash256=function(e){return b.from((0,o.sha256)((0,o.sha256)(Uint8Array.from(e))))},e.TAGS=["BIP0340/challenge","BIP0340/aux","BIP0340/nonce","TapLeaf","TapBranch","TapSighash","TapTweak","KeyAgg list","KeyAgg coefficient"],e.TAGGED_HASH_PREFIXES={"BIP0340/challenge":b.from([123,181,45,122,159,239,88,50,62,177,191,122,64,125,179,130,210,243,242,216,27,177,34,79,73,254,81,143,109,72,211,124,123,181,45,122,159,239,88,50,62,177,191,122,64,125,179,130,210,243,242,216,27,177,34,79,73,254,81,143,109,72,211,124]),"BIP0340/aux":b.from([241,239,78,94,192,99,202,218,109,148,202,250,157,152,126,160,105,38,88,57,236,193,31,151,45,119,165,46,216,193,204,144,241,239,78,94,192,99,202,218,109,148,202,250,157,152,126,160,105,38,88,57,236,193,31,151,45,119,165,46,216,193,204,144]),"BIP0340/nonce":b.from([7,73,119,52,167,155,203,53,91,155,140,125,3,79,18,28,244,52,215,62,247,45,218,25,135,0,97,251,82,191,235,47,7,73,119,52,167,155,203,53,91,155,140,125,3,79,18,28,244,52,215,62,247,45,218,25,135,0,97,251,82,191,235,47]),TapLeaf:b.from([174,234,143,220,66,8,152,49,5,115,75,88,8,29,30,38,56,211,95,28,181,64,8,212,211,87,202,3,190,120,233,238,174,234,143,220,66,8,152,49,5,115,75,88,8,29,30,38,56,211,95,28,181,64,8,212,211,87,202,3,190,120,233,238]),TapBranch:b.from([25,65,161,242,229,110,185,95,162,169,241,148,190,92,1,247,33,111,51,237,130,176,145,70,52,144,208,91,245,22,160,21,25,65,161,242,229,110,185,95,162,169,241,148,190,92,1,247,33,111,51,237,130,176,145,70,52,144,208,91,245,22,160,21]),TapSighash:b.from([244,10,72,223,75,42,112,200,180,146,75,242,101,70,97,237,61,149,253,102,163,19,235,135,35,117,151,198,40,228,160,49,244,10,72,223,75,42,112,200,180,146,75,242,101,70,97,237,61,149,253,102,163,19,235,135,35,117,151,198,40,228,160,49]),TapTweak:b.from([232,15,225,99,156,156,160,80,227,175,27,57,193,67,198,62,66,156,188,235,21,217,64,251,181,197,161,244,175,87,197,233,232,15,225,99,156,156,160,80,227,175,27,57,193,67,198,62,66,156,188,235,21,217,64,251,181,197,161,244,175,87,197,233]),"KeyAgg list":b.from([72,28,151,28,60,11,70,215,240,178,117,174,89,141,78,44,126,215,49,156,89,74,92,110,199,158,160,212,153,2,148,240,72,28,151,28,60,11,70,215,240,178,117,174,89,141,78,44,126,215,49,156,89,74,92,110,199,158,160,212,153,2,148,240]),"KeyAgg coefficient":b.from([191,201,4,3,77,28,136,232,200,14,34,229,61,36,86,109,100,130,78,214,66,114,129,192,145,0,249,77,205,82,201,129,191,201,4,3,77,28,136,232,200,14,34,229,61,36,86,109,100,130,78,214,66,114,129,192,145,0,249,77,205,82,201,129])},e.taggedHash=function(t,r){return a(b.concat([e.TAGGED_HASH_PREFIXES[t],r]))}}(We);var kr=function(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),r=0;r<t.length;r++)t[r]=255;for(var o=0;o<e.length;o++){var a=e.charAt(o),n=a.charCodeAt(0);if(255!==t[n])throw new TypeError(a+" is ambiguous");t[n]=o}var i=e.length,s=e.charAt(0),u=Math.log(i)/Math.log(256),c=Math.log(256)/Math.log(i);function l(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;for(var r=0,o=0,a=0;e[r]===s;)o++,r++;for(var n=(e.length-r)*u+1>>>0,c=new Uint8Array(n);e[r];){var l=e.charCodeAt(r);if(l>255)return;var p=t[l];if(255===p)return;for(var f=0,d=n-1;(0!==p||f<a)&&-1!==d;d--,f++)p+=i*c[d]>>>0,c[d]=p%256>>>0,p=p/256>>>0;if(0!==p)throw new Error("Non-zero carry");a=f,r++}for(var h=n-a;h!==n&&0===c[h];)h++;for(var m=new Uint8Array(o+(n-h)),g=o;h!==n;)m[g++]=c[h++];return m}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,o=0,a=0,n=t.length;a!==n&&0===t[a];)a++,r++;for(var u=(n-a)*c+1>>>0,l=new Uint8Array(u);a!==n;){for(var p=t[a],f=0,d=u-1;(0!==p||f<o)&&-1!==d;d--,f++)p+=256*l[d]>>>0,l[d]=p%i>>>0,p=p/i>>>0;if(0!==p)throw new Error("Non-zero carry");o=f,a++}for(var h=u-o;h!==u&&0===l[h];)h++;for(var m=s.repeat(r);h<u;++h)m+=e.charAt(l[h]);return m},decodeUnsafe:l,decode:function(e){var t=l(e);if(t)return t;throw new Error("Non-base"+i+" character")}}}("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),{sha256:Er}=zt;var Sr=function(e){function t(t){var r=t.slice(0,-4),o=t.slice(-4),a=e(r);if(!(o[0]^a[0]|o[1]^a[1]|o[2]^a[2]|o[3]^a[3]))return r}return{encode:function(t){var r=Uint8Array.from(t),o=e(r),a=r.length+4,n=new Uint8Array(a);return n.set(r,0),n.set(o.subarray(0,4),r.length),kr.encode(n,a)},decode:function(e){var r=t(kr.decode(e));if(!r)throw new Error("Invalid checksum");return r},decodeUnsafe:function(e){var r=kr.decodeUnsafe(e);if(r)return t(r)}}}(function(e){return Er(Er(e))});Object.defineProperty(Ge,"__esModule",{value:!0}),Ge.p2pkh=void 0;const _r=We,Ir=L,Tr=Te(),Ar=Y,zr=Ae,Or=Sr,xr=Tr.OPS;Ge.p2pkh=function(e,t){if(!(e.address||e.hash||e.output||e.pubkey||e.input))throw new TypeError("Not enough data");t=Object.assign({validate:!0},t||{}),(0,Ar.typeforce)({network:Ar.typeforce.maybe(Ar.typeforce.Object),address:Ar.typeforce.maybe(Ar.typeforce.String),hash:Ar.typeforce.maybe(Ar.typeforce.BufferN(20)),output:Ar.typeforce.maybe(Ar.typeforce.BufferN(25)),pubkey:Ar.typeforce.maybe(Ar.isPoint),signature:Ar.typeforce.maybe(Tr.isCanonicalScriptSignature),input:Ar.typeforce.maybe(Ar.typeforce.Buffer)},e);const r=zr.value(()=>{const t=b.from(Or.decode(e.address));return{version:t.readUInt8(0),hash:t.slice(1)}}),o=zr.value(()=>Tr.decompile(e.input)),a=e.network||Ir.bitcoin,n={name:"p2pkh",network:a};if(zr.prop(n,"address",()=>{if(!n.hash)return;const e=b.allocUnsafe(21);return e.writeUInt8(a.pubKeyHash,0),n.hash.copy(e,1),Or.encode(e)}),zr.prop(n,"hash",()=>e.output?e.output.slice(3,23):e.address?r().hash:e.pubkey||n.pubkey?_r.hash160(e.pubkey||n.pubkey):void 0),zr.prop(n,"output",()=>{if(n.hash)return Tr.compile([xr.OP_DUP,xr.OP_HASH160,n.hash,xr.OP_EQUALVERIFY,xr.OP_CHECKSIG])}),zr.prop(n,"pubkey",()=>{if(e.input)return o()[1]}),zr.prop(n,"signature",()=>{if(e.input)return o()[0]}),zr.prop(n,"input",()=>{if(e.pubkey&&e.signature)return Tr.compile([e.signature,e.pubkey])}),zr.prop(n,"witness",()=>{if(n.input)return[]}),t.validate){let t=b.from([]);if(e.address){if(r().version!==a.pubKeyHash)throw new TypeError("Invalid version or Network mismatch");if(20!==r().hash.length)throw new TypeError("Invalid address");t=r().hash}if(e.hash){if(t.length>0&&!t.equals(e.hash))throw new TypeError("Hash mismatch");t=e.hash}if(e.output){if(25!==e.output.length||e.output[0]!==xr.OP_DUP||e.output[1]!==xr.OP_HASH160||20!==e.output[2]||e.output[23]!==xr.OP_EQUALVERIFY||e.output[24]!==xr.OP_CHECKSIG)throw new TypeError("Output is invalid");const r=e.output.slice(3,23);if(t.length>0&&!t.equals(r))throw new TypeError("Hash mismatch");t=r}if(e.pubkey){const r=_r.hash160(e.pubkey);if(t.length>0&&!t.equals(r))throw new TypeError("Hash mismatch");t=r}if(e.input){const r=o();if(2!==r.length)throw new TypeError("Input is invalid");if(!Tr.isCanonicalScriptSignature(r[0]))throw new TypeError("Input has invalid signature");if(!(0,Ar.isPoint)(r[1]))throw new TypeError("Input has invalid pubkey");if(e.signature&&!e.signature.equals(r[0]))throw new TypeError("Signature mismatch");if(e.pubkey&&!e.pubkey.equals(r[1]))throw new TypeError("Pubkey mismatch");const a=_r.hash160(r[1]);if(t.length>0&&!t.equals(a))throw new TypeError("Hash mismatch")}}return Object.assign(n,e)};var Pr={};Object.defineProperty(Pr,"__esModule",{value:!0}),Pr.p2sh=void 0;const jr=We,Br=L,Hr=Te(),Ur=Y,Nr=Ae,Lr=Sr,Cr=Hr.OPS;Pr.p2sh=function(e,t){if(!(e.address||e.hash||e.output||e.redeem||e.input))throw new TypeError("Not enough data");t=Object.assign({validate:!0},t||{}),(0,Ur.typeforce)({network:Ur.typeforce.maybe(Ur.typeforce.Object),address:Ur.typeforce.maybe(Ur.typeforce.String),hash:Ur.typeforce.maybe(Ur.typeforce.BufferN(20)),output:Ur.typeforce.maybe(Ur.typeforce.BufferN(23)),redeem:Ur.typeforce.maybe({network:Ur.typeforce.maybe(Ur.typeforce.Object),output:Ur.typeforce.maybe(Ur.typeforce.Buffer),input:Ur.typeforce.maybe(Ur.typeforce.Buffer),witness:Ur.typeforce.maybe(Ur.typeforce.arrayOf(Ur.typeforce.Buffer))}),input:Ur.typeforce.maybe(Ur.typeforce.Buffer),witness:Ur.typeforce.maybe(Ur.typeforce.arrayOf(Ur.typeforce.Buffer))},e);let r=e.network;r||(r=e.redeem&&e.redeem.network||Br.bitcoin);const o={network:r},a=Nr.value(()=>{const t=b.from(Lr.decode(e.address));return{version:t.readUInt8(0),hash:t.slice(1)}}),n=Nr.value(()=>Hr.decompile(e.input)),i=Nr.value(()=>{const t=n(),o=t[t.length-1];return{network:r,output:o===Cr.OP_FALSE?b.from([]):o,input:Hr.compile(t.slice(0,-1)),witness:e.witness||[]}});if(Nr.prop(o,"address",()=>{if(!o.hash)return;const e=b.allocUnsafe(21);return e.writeUInt8(o.network.scriptHash,0),o.hash.copy(e,1),Lr.encode(e)}),Nr.prop(o,"hash",()=>e.output?e.output.slice(2,22):e.address?a().hash:o.redeem&&o.redeem.output?jr.hash160(o.redeem.output):void 0),Nr.prop(o,"output",()=>{if(o.hash)return Hr.compile([Cr.OP_HASH160,o.hash,Cr.OP_EQUAL])}),Nr.prop(o,"redeem",()=>{if(e.input)return i()}),Nr.prop(o,"input",()=>{if(e.redeem&&e.redeem.input&&e.redeem.output)return Hr.compile([].concat(Hr.decompile(e.redeem.input),e.redeem.output))}),Nr.prop(o,"witness",()=>o.redeem&&o.redeem.witness?o.redeem.witness:o.input?[]:void 0),Nr.prop(o,"name",()=>{const e=["p2sh"];return void 0!==o.redeem&&void 0!==o.redeem.name&&e.push(o.redeem.name),e.join("-")}),t.validate){let t=b.from([]);if(e.address){if(a().version!==r.scriptHash)throw new TypeError("Invalid version or Network mismatch");if(20!==a().hash.length)throw new TypeError("Invalid address");t=a().hash}if(e.hash){if(t.length>0&&!t.equals(e.hash))throw new TypeError("Hash mismatch");t=e.hash}if(e.output){if(23!==e.output.length||e.output[0]!==Cr.OP_HASH160||20!==e.output[1]||e.output[22]!==Cr.OP_EQUAL)throw new TypeError("Output is invalid");const r=e.output.slice(2,22);if(t.length>0&&!t.equals(r))throw new TypeError("Hash mismatch");t=r}const o=e=>{if(e.output){const r=Hr.decompile(e.output);if(!r||r.length<1)throw new TypeError("Redeem.output too short");if(e.output.byteLength>520)throw new TypeError("Redeem.output unspendable if larger than 520 bytes");if(Hr.countNonPushOnlyOPs(r)>201)throw new TypeError("Redeem.output unspendable with more than 201 non-push ops");const o=jr.hash160(e.output);if(t.length>0&&!t.equals(o))throw new TypeError("Hash mismatch");t=o}if(e.input){const t=e.input.length>0,r=e.witness&&e.witness.length>0;if(!t&&!r)throw new TypeError("Empty input");if(t&&r)throw new TypeError("Input and witness provided");if(t){const t=Hr.decompile(e.input);if(!Hr.isPushOnly(t))throw new TypeError("Non push-only scriptSig")}}};if(e.input){const e=n();if(!e||e.length<1)throw new TypeError("Input too short");if(!b.isBuffer(i().output))throw new TypeError("Input is invalid");o(i())}if(e.redeem){if(e.redeem.network&&e.redeem.network!==r)throw new TypeError("Network mismatch");if(e.input){const t=i();if(e.redeem.output&&!e.redeem.output.equals(t.output))throw new TypeError("Redeem.output mismatch");if(e.redeem.input&&!e.redeem.input.equals(t.input))throw new TypeError("Redeem.input mismatch")}o(e.redeem)}if(e.witness&&e.redeem&&e.redeem.witness&&!(0,Ur.stacksEqual)(e.redeem.witness,e.witness))throw new TypeError("Witness and redeem.witness mismatch")}return Object.assign(o,e)};var Rr={},qr={};Object.defineProperty(qr,"__esModule",{value:!0}),qr.bech32m=qr.bech32=void 0;const Mr="qpzry9x8gf2tvdw0s3jn54khce6mua7l",Vr={};for(let Rc=0;Rc<32;Rc++){const e=Mr.charAt(Rc);Vr[e]=Rc}function Dr(e){const t=e>>25;return(33554431&e)<<5^996825010&-(1&t)^642813549&-(t>>1&1)^513874426&-(t>>2&1)^1027748829&-(t>>3&1)^705979059&-(t>>4&1)}function Fr(e){let t=1;for(let r=0;r<e.length;++r){const o=e.charCodeAt(r);if(o<33||o>126)return"Invalid prefix ("+e+")";t=Dr(t)^o>>5}t=Dr(t);for(let r=0;r<e.length;++r){const o=e.charCodeAt(r);t=Dr(t)^31&o}return t}function Kr(e,t,r,o){let a=0,n=0;const i=(1<<r)-1,s=[];for(let u=0;u<e.length;++u)for(a=a<<t|e[u],n+=t;n>=r;)n-=r,s.push(a>>n&i);if(o)n>0&&s.push(a<<r-n&i);else{if(n>=t)return"Excess padding";if(a<<r-n&i)return"Non-zero padding"}return s}function Gr(e){return Kr(e,8,5,!0)}function Wr(e){const t=Kr(e,5,8,!1);if(Array.isArray(t))return t}function Xr(e){const t=Kr(e,5,8,!1);if(Array.isArray(t))return t;throw new Error(t)}function $r(e){let t;function r(e,r){if(r=r||90,e.length<8)return e+" too short";if(e.length>r)return"Exceeds length limit";const o=e.toLowerCase(),a=e.toUpperCase();if(e!==o&&e!==a)return"Mixed-case string "+e;const n=(e=o).lastIndexOf("1");if(-1===n)return"No separator character for "+e;if(0===n)return"Missing prefix for "+e;const i=e.slice(0,n),s=e.slice(n+1);if(s.length<6)return"Data too short";let u=Fr(i);if("string"==typeof u)return u;const c=[];for(let t=0;t<s.length;++t){const e=s.charAt(t),r=Vr[e];if(void 0===r)return"Unknown character "+e;u=Dr(u)^r,t+6>=s.length||c.push(r)}return u!==t?"Invalid checksum for "+e:{prefix:i,words:c}}return t="bech32"===e?1:734539939,{decodeUnsafe:function(e,t){const o=r(e,t);if("object"==typeof o)return o},decode:function(e,t){const o=r(e,t);if("object"==typeof o)return o;throw new Error(o)},encode:function(e,r,o){if(o=o||90,e.length+7+r.length>o)throw new TypeError("Exceeds length limit");let a=Fr(e=e.toLowerCase());if("string"==typeof a)throw new Error(a);let n=e+"1";for(let t=0;t<r.length;++t){const e=r[t];if(e>>5)throw new Error("Non 5-bit word");a=Dr(a)^e,n+=Mr.charAt(e)}for(let t=0;t<6;++t)a=Dr(a);a^=t;for(let t=0;t<6;++t){n+=Mr.charAt(a>>5*(5-t)&31)}return n},toWords:Gr,fromWordsUnsafe:Wr,fromWords:Xr}}qr.bech32=$r("bech32"),qr.bech32m=$r("bech32m"),Object.defineProperty(Rr,"__esModule",{value:!0}),Rr.p2wpkh=void 0;const Yr=We,Jr=L,Qr=Te(),Zr=Y,eo=Ae,to=qr,ro=Qr.OPS,oo=b.alloc(0);Rr.p2wpkh=function(e,t){if(!(e.address||e.hash||e.output||e.pubkey||e.witness))throw new TypeError("Not enough data");t=Object.assign({validate:!0},t||{}),(0,Zr.typeforce)({address:Zr.typeforce.maybe(Zr.typeforce.String),hash:Zr.typeforce.maybe(Zr.typeforce.BufferN(20)),input:Zr.typeforce.maybe(Zr.typeforce.BufferN(0)),network:Zr.typeforce.maybe(Zr.typeforce.Object),output:Zr.typeforce.maybe(Zr.typeforce.BufferN(22)),pubkey:Zr.typeforce.maybe(Zr.isPoint),signature:Zr.typeforce.maybe(Qr.isCanonicalScriptSignature),witness:Zr.typeforce.maybe(Zr.typeforce.arrayOf(Zr.typeforce.Buffer))},e);const r=eo.value(()=>{const t=to.bech32.decode(e.address),r=t.words.shift(),o=to.bech32.fromWords(t.words);return{version:r,prefix:t.prefix,data:b.from(o)}}),o=e.network||Jr.bitcoin,a={name:"p2wpkh",network:o};if(eo.prop(a,"address",()=>{if(!a.hash)return;const e=to.bech32.toWords(a.hash);return e.unshift(0),to.bech32.encode(o.bech32,e)}),eo.prop(a,"hash",()=>e.output?e.output.slice(2,22):e.address?r().data:e.pubkey||a.pubkey?Yr.hash160(e.pubkey||a.pubkey):void 0),eo.prop(a,"output",()=>{if(a.hash)return Qr.compile([ro.OP_0,a.hash])}),eo.prop(a,"pubkey",()=>e.pubkey?e.pubkey:e.witness?e.witness[1]:void 0),eo.prop(a,"signature",()=>{if(e.witness)return e.witness[0]}),eo.prop(a,"input",()=>{if(a.witness)return oo}),eo.prop(a,"witness",()=>{if(e.pubkey&&e.signature)return[e.signature,e.pubkey]}),t.validate){let t=b.from([]);if(e.address){if(o&&o.bech32!==r().prefix)throw new TypeError("Invalid prefix or Network mismatch");if(0!==r().version)throw new TypeError("Invalid address version");if(20!==r().data.length)throw new TypeError("Invalid address data");t=r().data}if(e.hash){if(t.length>0&&!t.equals(e.hash))throw new TypeError("Hash mismatch");t=e.hash}if(e.output){if(22!==e.output.length||e.output[0]!==ro.OP_0||20!==e.output[1])throw new TypeError("Output is invalid");if(t.length>0&&!t.equals(e.output.slice(2)))throw new TypeError("Hash mismatch");t=e.output.slice(2)}if(e.pubkey){const r=Yr.hash160(e.pubkey);if(t.length>0&&!t.equals(r))throw new TypeError("Hash mismatch");if(t=r,!(0,Zr.isPoint)(e.pubkey)||33!==e.pubkey.length)throw new TypeError("Invalid pubkey for p2wpkh")}if(e.witness){if(2!==e.witness.length)throw new TypeError("Witness is invalid");if(!Qr.isCanonicalScriptSignature(e.witness[0]))throw new TypeError("Witness has invalid signature");if(!(0,Zr.isPoint)(e.witness[1])||33!==e.witness[1].length)throw new TypeError("Witness has invalid pubkey");if(e.signature&&!e.signature.equals(e.witness[0]))throw new TypeError("Signature mismatch");if(e.pubkey&&!e.pubkey.equals(e.witness[1]))throw new TypeError("Pubkey mismatch");const r=Yr.hash160(e.witness[1]);if(t.length>0&&!t.equals(r))throw new TypeError("Hash mismatch")}}return Object.assign(a,e)};var ao={};Object.defineProperty(ao,"__esModule",{value:!0}),ao.p2wsh=void 0;const no=We,io=L,so=Te(),uo=Y,co=Ae,lo=qr,po=so.OPS,fo=b.alloc(0);function ho(e){return!(!b.isBuffer(e)||65!==e.length||4!==e[0]||!(0,uo.isPoint)(e))}ao.p2wsh=function(e,t){if(!(e.address||e.hash||e.output||e.redeem||e.witness))throw new TypeError("Not enough data");t=Object.assign({validate:!0},t||{}),(0,uo.typeforce)({network:uo.typeforce.maybe(uo.typeforce.Object),address:uo.typeforce.maybe(uo.typeforce.String),hash:uo.typeforce.maybe(uo.typeforce.BufferN(32)),output:uo.typeforce.maybe(uo.typeforce.BufferN(34)),redeem:uo.typeforce.maybe({input:uo.typeforce.maybe(uo.typeforce.Buffer),network:uo.typeforce.maybe(uo.typeforce.Object),output:uo.typeforce.maybe(uo.typeforce.Buffer),witness:uo.typeforce.maybe(uo.typeforce.arrayOf(uo.typeforce.Buffer))}),input:uo.typeforce.maybe(uo.typeforce.BufferN(0)),witness:uo.typeforce.maybe(uo.typeforce.arrayOf(uo.typeforce.Buffer))},e);const r=co.value(()=>{const t=lo.bech32.decode(e.address),r=t.words.shift(),o=lo.bech32.fromWords(t.words);return{version:r,prefix:t.prefix,data:b.from(o)}}),o=co.value(()=>so.decompile(e.redeem.input));let a=e.network;a||(a=e.redeem&&e.redeem.network||io.bitcoin);const n={network:a};if(co.prop(n,"address",()=>{if(!n.hash)return;const e=lo.bech32.toWords(n.hash);return e.unshift(0),lo.bech32.encode(a.bech32,e)}),co.prop(n,"hash",()=>e.output?e.output.slice(2):e.address?r().data:n.redeem&&n.redeem.output?no.sha256(n.redeem.output):void 0),co.prop(n,"output",()=>{if(n.hash)return so.compile([po.OP_0,n.hash])}),co.prop(n,"redeem",()=>{if(e.witness)return{output:e.witness[e.witness.length-1],input:fo,witness:e.witness.slice(0,-1)}}),co.prop(n,"input",()=>{if(n.witness)return fo}),co.prop(n,"witness",()=>{if(e.redeem&&e.redeem.input&&e.redeem.input.length>0&&e.redeem.output&&e.redeem.output.length>0){const t=so.toStack(o());return n.redeem=Object.assign({witness:t},e.redeem),n.redeem.input=fo,[].concat(t,e.redeem.output)}if(e.redeem&&e.redeem.output&&e.redeem.witness)return[].concat(e.redeem.witness,e.redeem.output)}),co.prop(n,"name",()=>{const e=["p2wsh"];return void 0!==n.redeem&&void 0!==n.redeem.name&&e.push(n.redeem.name),e.join("-")}),t.validate){let t=b.from([]);if(e.address){if(r().prefix!==a.bech32)throw new TypeError("Invalid prefix or Network mismatch");if(0!==r().version)throw new TypeError("Invalid address version");if(32!==r().data.length)throw new TypeError("Invalid address data");t=r().data}if(e.hash){if(t.length>0&&!t.equals(e.hash))throw new TypeError("Hash mismatch");t=e.hash}if(e.output){if(34!==e.output.length||e.output[0]!==po.OP_0||32!==e.output[1])throw new TypeError("Output is invalid");const r=e.output.slice(2);if(t.length>0&&!t.equals(r))throw new TypeError("Hash mismatch");t=r}if(e.redeem){if(e.redeem.network&&e.redeem.network!==a)throw new TypeError("Network mismatch");if(e.redeem.input&&e.redeem.input.length>0&&e.redeem.witness&&e.redeem.witness.length>0)throw new TypeError("Ambiguous witness source");if(e.redeem.output){const r=so.decompile(e.redeem.output);if(!r||r.length<1)throw new TypeError("Redeem.output is invalid");if(e.redeem.output.byteLength>3600)throw new TypeError("Redeem.output unspendable if larger than 3600 bytes");if(so.countNonPushOnlyOPs(r)>201)throw new TypeError("Redeem.output unspendable with more than 201 non-push ops");const o=no.sha256(e.redeem.output);if(t.length>0&&!t.equals(o))throw new TypeError("Hash mismatch");t=o}if(e.redeem.input&&!so.isPushOnly(o()))throw new TypeError("Non push-only scriptSig");if(e.witness&&e.redeem.witness&&!(0,uo.stacksEqual)(e.witness,e.redeem.witness))throw new TypeError("Witness and redeem.witness mismatch");if(e.redeem.input&&o().some(ho)||e.redeem.output&&(so.decompile(e.redeem.output)||[]).some(ho))throw new TypeError("redeem.input or redeem.output contains uncompressed pubkey")}if(e.witness&&e.witness.length>0){const t=e.witness[e.witness.length-1];if(e.redeem&&e.redeem.output&&!e.redeem.output.equals(t))throw new TypeError("Witness and redeem.output mismatch");if(e.witness.some(ho)||(so.decompile(t)||[]).some(ho))throw new TypeError("Witness contains uncompressed pubkey")}}return Object.assign(n,e)};var mo={},go={};Object.defineProperty(go,"__esModule",{value:!0}),go.getEccLib=go.initEccLib=void 0;const bo={};go.initEccLib=function(e,t){var r;e?e!==bo.eccLib&&((null==t?void 0:t.DANGER_DO_NOT_VERIFY_ECCLIB)||(vo("function"==typeof(r=e).isXOnlyPoint),vo(r.isXOnlyPoint(yo("79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798"))),vo(r.isXOnlyPoint(yo("fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e"))),vo(r.isXOnlyPoint(yo("f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9"))),vo(r.isXOnlyPoint(yo("0000000000000000000000000000000000000000000000000000000000000001"))),vo(!r.isXOnlyPoint(yo("0000000000000000000000000000000000000000000000000000000000000000"))),vo(!r.isXOnlyPoint(yo("fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"))),vo("function"==typeof r.xOnlyPointAddTweak),wo.forEach(e=>{const t=r.xOnlyPointAddTweak(yo(e.pubkey),yo(e.tweak));null===e.result?vo(null===t):(vo(null!==t),vo(t.parity===e.parity),vo(b.from(t.xOnlyPubkey).equals(yo(e.result))))})),bo.eccLib=e):bo.eccLib=e},go.getEccLib=function(){if(!bo.eccLib)throw new Error("No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance");return bo.eccLib};const yo=e=>b.from(e,"hex");function vo(e){if(!e)throw new Error("ecc library invalid")}const wo=[{pubkey:"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",tweak:"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140",parity:-1,result:null},{pubkey:"1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b",tweak:"a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac",parity:1,result:"e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf"},{pubkey:"2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991",tweak:"823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47",parity:0,result:"9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c"}];var ko={},Eo={},So={exports:{}};
/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
!function(e,t){var r=J,o=r.Buffer;function a(e,t){for(var r in e)t[r]=e[r]}function n(e,t,r){return o(e,t,r)}o.from&&o.alloc&&o.allocUnsafe&&o.allocUnsafeSlow?e.exports=r:(a(r,t),t.Buffer=n),n.prototype=Object.create(o.prototype),a(o,n),n.from=function(e,t,r){if("number"==typeof e)throw new TypeError("Argument must not be a number");return o(e,t,r)},n.alloc=function(e,t,r){if("number"!=typeof e)throw new TypeError("Argument must be a number");var a=o(e);return void 0!==t?"string"==typeof r?a.fill(t,r):a.fill(t):a.fill(0),a},n.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return o(e)},n.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return r.SlowBuffer(e)}}(So,So.exports);var _o=So.exports.Buffer;function Io(e){if(e<0||e>9007199254740991||e%1!=0)throw new RangeError("value out of range")}function To(e){return Io(e),e<253?1:e<=65535?3:e<=4294967295?5:9}var Ao={encode:function e(t,r,o){if(Io(t),r||(r=_o.allocUnsafe(To(t))),!_o.isBuffer(r))throw new TypeError("buffer must be a Buffer instance");return o||(o=0),t<253?(r.writeUInt8(t,o),e.bytes=1):t<=65535?(r.writeUInt8(253,o),r.writeUInt16LE(t,o+1),e.bytes=3):t<=4294967295?(r.writeUInt8(254,o),r.writeUInt32LE(t,o+1),e.bytes=5):(r.writeUInt8(255,o),r.writeUInt32LE(t>>>0,o+1),r.writeUInt32LE(t/4294967296|0,o+5),e.bytes=9),r},decode:function e(t,r){if(!_o.isBuffer(t))throw new TypeError("buffer must be a Buffer instance");r||(r=0);var o=t.readUInt8(r);if(o<253)return e.bytes=1,o;if(253===o)return e.bytes=3,t.readUInt16LE(r+1);if(254===o)return e.bytes=5,t.readUInt32LE(r+1);e.bytes=9;var a=t.readUInt32LE(r+1),n=4294967296*t.readUInt32LE(r+5)+a;return Io(n),n},encodingLength:To};Object.defineProperty(Eo,"__esModule",{value:!0}),Eo.BufferReader=Eo.BufferWriter=Eo.cloneBuffer=Eo.reverseBuffer=Eo.writeUInt64LE=Eo.readUInt64LE=Eo.varuint=void 0;const zo=Y,{typeforce:Oo}=zo,xo=Ao;function Po(e,t){if("number"!=typeof e)throw new Error("cannot write a non-number as a number");if(e<0)throw new Error("specified a negative value for writing an unsigned value");if(e>t)throw new Error("RangeError: value out of range");if(Math.floor(e)!==e)throw new Error("value has a fractional component")}function jo(e,t){const r=e.readUInt32LE(t);let o=e.readUInt32LE(t+4);return o*=4294967296,Po(o+r,9007199254740991),o+r}function Bo(e,t,r){return Po(t,9007199254740991),e.writeInt32LE(-1&t,r),e.writeUInt32LE(Math.floor(t/4294967296),r+4),r+8}Eo.varuint=xo,Eo.readUInt64LE=jo,Eo.writeUInt64LE=Bo,Eo.reverseBuffer=function(e){if(e.length<1)return e;let t=e.length-1,r=0;for(let o=0;o<e.length/2;o++)r=e[o],e[o]=e[t],e[t]=r,t--;return e},Eo.cloneBuffer=function(e){const t=b.allocUnsafe(e.length);return e.copy(t),t};class Ho{static withCapacity(e){return new Ho(b.alloc(e))}constructor(e,t=0){this.buffer=e,this.offset=t,Oo(zo.tuple(zo.Buffer,zo.UInt32),[e,t])}writeUInt8(e){this.offset=this.buffer.writeUInt8(e,this.offset)}writeInt32(e){this.offset=this.buffer.writeInt32LE(e,this.offset)}writeUInt32(e){this.offset=this.buffer.writeUInt32LE(e,this.offset)}writeUInt64(e){this.offset=Bo(this.buffer,e,this.offset)}writeVarInt(e){xo.encode(e,this.buffer,this.offset),this.offset+=xo.encode.bytes}writeSlice(e){if(this.buffer.length<this.offset+e.length)throw new Error("Cannot write slice out of bounds");this.offset+=e.copy(this.buffer,this.offset)}writeVarSlice(e){this.writeVarInt(e.length),this.writeSlice(e)}writeVector(e){this.writeVarInt(e.length),e.forEach(e=>this.writeVarSlice(e))}end(){if(this.buffer.length===this.offset)return this.buffer;throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`)}}Eo.BufferWriter=Ho;var Uo,No,Lo;function Co(){return No||(No=1,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.p2tr=e.p2wsh=e.p2wpkh=e.p2sh=e.p2pkh=e.p2pk=e.p2ms=e.embed=void 0;const t=R;Object.defineProperty(e,"embed",{enumerable:!0,get:function(){return t.p2data}});const r=Be;Object.defineProperty(e,"p2ms",{enumerable:!0,get:function(){return r.p2ms}});const o=qe;Object.defineProperty(e,"p2pk",{enumerable:!0,get:function(){return o.p2pk}});const a=Ge;Object.defineProperty(e,"p2pkh",{enumerable:!0,get:function(){return a.p2pkh}});const n=Pr;Object.defineProperty(e,"p2sh",{enumerable:!0,get:function(){return n.p2sh}});const i=Rr;Object.defineProperty(e,"p2wpkh",{enumerable:!0,get:function(){return i.p2wpkh}});const s=ao;Object.defineProperty(e,"p2wsh",{enumerable:!0,get:function(){return s.p2wsh}});const u=function(){if(Uo)return mo;Uo=1,Object.defineProperty(mo,"__esModule",{value:!0}),mo.p2tr=void 0;const e=J,t=L,r=Te(),o=Y,a=go,n=ko,i=Ae,s=qr,u=Ro(),c=r.OPS;return mo.p2tr=function(l,p){if(!(l.address||l.output||l.pubkey||l.internalPubkey||l.witness&&l.witness.length>1))throw new TypeError("Not enough data");p=Object.assign({validate:!0},p||{}),(0,o.typeforce)({address:o.typeforce.maybe(o.typeforce.String),input:o.typeforce.maybe(o.typeforce.BufferN(0)),network:o.typeforce.maybe(o.typeforce.Object),output:o.typeforce.maybe(o.typeforce.BufferN(34)),internalPubkey:o.typeforce.maybe(o.typeforce.BufferN(32)),hash:o.typeforce.maybe(o.typeforce.BufferN(32)),pubkey:o.typeforce.maybe(o.typeforce.BufferN(32)),signature:o.typeforce.maybe(o.typeforce.anyOf(o.typeforce.BufferN(64),o.typeforce.BufferN(65))),witness:o.typeforce.maybe(o.typeforce.arrayOf(o.typeforce.Buffer)),scriptTree:o.typeforce.maybe(o.isTaptree),redeem:o.typeforce.maybe({output:o.typeforce.maybe(o.typeforce.Buffer),redeemVersion:o.typeforce.maybe(o.typeforce.Number),witness:o.typeforce.maybe(o.typeforce.arrayOf(o.typeforce.Buffer))}),redeemVersion:o.typeforce.maybe(o.typeforce.Number)},l);const f=i.value(()=>(0,u.fromBech32)(l.address)),d=i.value(()=>{if(l.witness&&l.witness.length)return l.witness.length>=2&&80===l.witness[l.witness.length-1][0]?l.witness.slice(0,-1):l.witness.slice()}),h=i.value(()=>l.scriptTree?(0,n.toHashTree)(l.scriptTree):l.hash?{hash:l.hash}:void 0),m=l.network||t.bitcoin,g={name:"p2tr",network:m};if(i.prop(g,"address",()=>{if(!g.pubkey)return;const e=s.bech32m.toWords(g.pubkey);return e.unshift(1),s.bech32m.encode(m.bech32,e)}),i.prop(g,"hash",()=>{const e=h();if(e)return e.hash;const t=d();if(t&&t.length>1){const e=t[t.length-1],r=e[0]&o.TAPLEAF_VERSION_MASK,a=t[t.length-2],i=(0,n.tapleafHash)({output:a,version:r});return(0,n.rootHashFromPath)(e,i)}return null}),i.prop(g,"output",()=>{if(g.pubkey)return r.compile([c.OP_1,g.pubkey])}),i.prop(g,"redeemVersion",()=>l.redeemVersion?l.redeemVersion:l.redeem&&void 0!==l.redeem.redeemVersion&&null!==l.redeem.redeemVersion?l.redeem.redeemVersion:n.LEAF_VERSION_TAPSCRIPT),i.prop(g,"redeem",()=>{const e=d();if(e&&!(e.length<2))return{output:e[e.length-2],witness:e.slice(0,-2),redeemVersion:e[e.length-1][0]&o.TAPLEAF_VERSION_MASK}}),i.prop(g,"pubkey",()=>{if(l.pubkey)return l.pubkey;if(l.output)return l.output.slice(2);if(l.address)return f().data;if(g.internalPubkey){const e=(0,n.tweakKey)(g.internalPubkey,g.hash);if(e)return e.x}}),i.prop(g,"internalPubkey",()=>{if(l.internalPubkey)return l.internalPubkey;const e=d();return e&&e.length>1?e[e.length-1].slice(1,33):void 0}),i.prop(g,"signature",()=>{if(l.signature)return l.signature;const e=d();return e&&1===e.length?e[0]:void 0}),i.prop(g,"witness",()=>{if(l.witness)return l.witness;const t=h();if(t&&l.redeem&&l.redeem.output&&l.internalPubkey){const r=(0,n.tapleafHash)({output:l.redeem.output,version:g.redeemVersion}),o=(0,n.findScriptPath)(t,r);if(!o)return;const a=(0,n.tweakKey)(l.internalPubkey,t.hash);if(!a)return;const i=e.Buffer.concat([e.Buffer.from([g.redeemVersion|a.parity]),l.internalPubkey].concat(o));return[l.redeem.output,i]}return l.signature?[l.signature]:void 0}),p.validate){let t=e.Buffer.from([]);if(l.address){if(m&&m.bech32!==f().prefix)throw new TypeError("Invalid prefix or Network mismatch");if(1!==f().version)throw new TypeError("Invalid address version");if(32!==f().data.length)throw new TypeError("Invalid address data");t=f().data}if(l.pubkey){if(t.length>0&&!t.equals(l.pubkey))throw new TypeError("Pubkey mismatch");t=l.pubkey}if(l.output){if(34!==l.output.length||l.output[0]!==c.OP_1||32!==l.output[1])throw new TypeError("Output is invalid");if(t.length>0&&!t.equals(l.output.slice(2)))throw new TypeError("Pubkey mismatch");t=l.output.slice(2)}if(l.internalPubkey){const e=(0,n.tweakKey)(l.internalPubkey,g.hash);if(t.length>0&&!t.equals(e.x))throw new TypeError("Pubkey mismatch");t=e.x}if(t&&t.length&&!(0,a.getEccLib)().isXOnlyPoint(t))throw new TypeError("Invalid pubkey for p2tr");const i=h();if(l.hash&&i&&!l.hash.equals(i.hash))throw new TypeError("Hash mismatch");if(l.redeem&&l.redeem.output&&i){const e=(0,n.tapleafHash)({output:l.redeem.output,version:g.redeemVersion});if(!(0,n.findScriptPath)(i,e))throw new TypeError("Redeem script not in tree")}const s=d();if(l.redeem&&g.redeem){if(l.redeem.redeemVersion&&l.redeem.redeemVersion!==g.redeem.redeemVersion)throw new TypeError("Redeem.redeemVersion and witness mismatch");if(l.redeem.output){if(0===r.decompile(l.redeem.output).length)throw new TypeError("Redeem.output is invalid");if(g.redeem.output&&!l.redeem.output.equals(g.redeem.output))throw new TypeError("Redeem.output and witness mismatch")}if(l.redeem.witness&&g.redeem.witness&&!(0,o.stacksEqual)(l.redeem.witness,g.redeem.witness))throw new TypeError("Redeem.witness and witness mismatch")}if(s&&s.length)if(1===s.length){if(l.signature&&!l.signature.equals(s[0]))throw new TypeError("Signature mismatch")}else{const e=s[s.length-1];if(e.length<33)throw new TypeError(`The control-block length is too small. Got ${e.length}, expected min 33.`);if((e.length-33)%32!=0)throw new TypeError(`The control-block length of ${e.length} is incorrect!`);const r=(e.length-33)/32;if(r>128)throw new TypeError(`The script path is too long. Got ${r}, expected max 128.`);const i=e.slice(1,33);if(l.internalPubkey&&!l.internalPubkey.equals(i))throw new TypeError("Internal pubkey mismatch");if(!(0,a.getEccLib)().isXOnlyPoint(i))throw new TypeError("Invalid internalPubkey for p2tr witness");const u=e[0]&o.TAPLEAF_VERSION_MASK,c=s[s.length-2],p=(0,n.tapleafHash)({output:c,version:u}),f=(0,n.rootHashFromPath)(e,p),d=(0,n.tweakKey)(i,f);if(!d)throw new TypeError("Invalid outputKey for p2tr witness");if(t.length&&!t.equals(d.x))throw new TypeError("Pubkey mismatch for p2tr witness");if(d.parity!==(1&e[0]))throw new Error("Incorrect parity")}}return Object.assign(g,l)},mo}();Object.defineProperty(e,"p2tr",{enumerable:!0,get:function(){return u.p2tr}})}(C)),C}function Ro(){if(Lo)return N;Lo=1,Object.defineProperty(N,"__esModule",{value:!0}),N.toOutputScript=N.fromOutputScript=N.toBech32=N.toBase58Check=N.fromBech32=N.fromBase58Check=void 0;const e=L,t=Co(),r=Te(),o=Y,a=qr,n=Sr;function i(e){const t=b.from(n.decode(e));if(t.length<21)throw new TypeError(e+" is too short");if(t.length>21)throw new TypeError(e+" is too long");return{version:t.readUInt8(0),hash:t.slice(1)}}function s(e){let t,r;try{t=a.bech32.decode(e)}catch(n){}if(t){if(r=t.words[0],0!==r)throw new TypeError(e+" uses wrong encoding")}else if(t=a.bech32m.decode(e),r=t.words[0],0===r)throw new TypeError(e+" uses wrong encoding");const o=a.bech32.fromWords(t.words.slice(1));return{version:r,prefix:t.prefix,data:b.from(o)}}function u(e,t,r){const o=a.bech32.toWords(e);return o.unshift(t),0===t?a.bech32.encode(r,o):a.bech32m.encode(r,o)}return N.fromBase58Check=i,N.fromBech32=s,N.toBase58Check=function(e,t){(0,o.typeforce)((0,o.tuple)(o.Hash160bit,o.UInt8),arguments);const r=b.allocUnsafe(21);return r.writeUInt8(t,0),e.copy(r,1),n.encode(r)},N.toBech32=u,N.fromOutputScript=function(o,a){a=a||e.bitcoin;try{return t.p2pkh({output:o,network:a}).address}catch(n){}try{return t.p2sh({output:o,network:a}).address}catch(n){}try{return t.p2wpkh({output:o,network:a}).address}catch(n){}try{return t.p2wsh({output:o,network:a}).address}catch(n){}try{return t.p2tr({output:o,network:a}).address}catch(n){}try{return function(e,t){const r=e.slice(2);if(r.length<2||r.length>40)throw new TypeError("Invalid program length for segwit address");const o=e[0]-80;if(o<2||o>16)throw new TypeError("Invalid version for segwit address");if(e[1]!==r.length)throw new TypeError("Invalid script for segwit address");return u(r,o,t.bech32)}(o,a)}catch(n){}throw new Error(r.toASM(o)+" has no matching Address")},N.toOutputScript=function(o,a){let n,u;a=a||e.bitcoin;try{n=i(o)}catch(c){}if(n){if(n.version===a.pubKeyHash)return t.p2pkh({hash:n.hash}).output;if(n.version===a.scriptHash)return t.p2sh({hash:n.hash}).output}else{try{u=s(o)}catch(c){}if(u){if(u.prefix!==a.bech32)throw new Error(o+" has an invalid prefix");if(0===u.version){if(20===u.data.length)return t.p2wpkh({hash:u.data}).output;if(32===u.data.length)return t.p2wsh({hash:u.data}).output}else if(1===u.version){if(32===u.data.length)return t.p2tr({pubkey:u.data}).output}else if(u.version>=2&&u.version<=16&&u.data.length>=2&&u.data.length<=40)return r.compile([u.version+80,u.data])}}throw new Error(o+" has no matching Script")},N}Eo.BufferReader=class{constructor(e,t=0){this.buffer=e,this.offset=t,Oo(zo.tuple(zo.Buffer,zo.UInt32),[e,t])}readUInt8(){const e=this.buffer.readUInt8(this.offset);return this.offset++,e}readInt32(){const e=this.buffer.readInt32LE(this.offset);return this.offset+=4,e}readUInt32(){const e=this.buffer.readUInt32LE(this.offset);return this.offset+=4,e}readUInt64(){const e=jo(this.buffer,this.offset);return this.offset+=8,e}readVarInt(){const e=xo.decode(this.buffer,this.offset);return this.offset+=xo.decode.bytes,e}readSlice(e){if(this.buffer.length<this.offset+e)throw new Error("Cannot read slice out of bounds");const t=this.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}readVarSlice(){return this.readSlice(this.readVarInt())}readVector(){const e=this.readVarInt(),t=[];for(let r=0;r<e;r++)t.push(this.readVarSlice());return t}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.tweakKey=e.tapTweakHash=e.tapleafHash=e.findScriptPath=e.toHashTree=e.rootHashFromPath=e.MAX_TAPTREE_DEPTH=e.LEAF_VERSION_TAPSCRIPT=void 0;const t=J,r=go,o=We,a=Eo,n=Y;e.LEAF_VERSION_TAPSCRIPT=192,e.MAX_TAPTREE_DEPTH=128;function i(r){const a=r.version||e.LEAF_VERSION_TAPSCRIPT;return o.taggedHash("TapLeaf",t.Buffer.concat([t.Buffer.from([a]),c(r.output)]))}function s(e,r){return o.taggedHash("TapTweak",t.Buffer.concat(r?[e,r]:[e]))}function u(e,r){return o.taggedHash("TapBranch",t.Buffer.concat([e,r]))}function c(e){const r=a.varuint.encodingLength(e.length),o=t.Buffer.allocUnsafe(r);return a.varuint.encode(e.length,o),t.Buffer.concat([o,e])}e.rootHashFromPath=function(e,t){if(e.length<33)throw new TypeError(`The control-block length is too small. Got ${e.length}, expected min 33.`);const r=(e.length-33)/32;let o=t;for(let a=0;a<r;a++){const t=e.slice(33+32*a,65+32*a);o=o.compare(t)<0?u(o,t):u(t,o)}return o},e.toHashTree=function e(t){if((0,n.isTapleaf)(t))return{hash:i(t)};const r=[e(t[0]),e(t[1])];r.sort((e,t)=>e.hash.compare(t.hash));const[o,a]=r;return{hash:u(o.hash,a.hash),left:o,right:a}},e.findScriptPath=function e(t,r){if("left"in(o=t)&&"right"in o){const o=e(t.left,r);if(void 0!==o)return[...o,t.right.hash];const a=e(t.right,r);if(void 0!==a)return[...a,t.left.hash]}else if(t.hash.equals(r))return[];var o},e.tapleafHash=i,e.tapTweakHash=s,e.tweakKey=function(e,o){if(!t.Buffer.isBuffer(e))return null;if(32!==e.length)return null;if(o&&32!==o.length)return null;const a=s(e,o),n=(0,r.getEccLib)().xOnlyPointAddTweak(e,a);return n&&null!==n.xOnlyPubkey?{parity:n.parity,x:t.Buffer.from(n.xOnlyPubkey)}:null}}(ko);var qo={},Mo={};Object.defineProperty(Mo,"__esModule",{value:!0}),Mo.fastMerkleRoot=void 0,Mo.fastMerkleRoot=function(e,t){if(!Array.isArray(e))throw TypeError("Expected values Array");if("function"!=typeof t)throw TypeError("Expected digest Function");let r=e.length;const o=e.concat();for(;r>1;){let e=0;for(let a=0;a<r;a+=2,++e){const n=o[a],i=a+1===r?n:o[a+1],s=b.concat([n,i]);o[e]=t(s)}r=e}return o[0]};var Vo={};Object.defineProperty(Vo,"__esModule",{value:!0}),Vo.Transaction=void 0;const Do=Eo,Fo=We,Ko=Te(),Go=Te(),Wo=Y,{typeforce:Xo}=Wo;function $o(e){const t=e.length;return Do.varuint.encodingLength(t)+t}const Yo=b.allocUnsafe(0),Jo=[],Qo=b.from("0000000000000000000000000000000000000000000000000000000000000000","hex"),Zo=b.from("0000000000000000000000000000000000000000000000000000000000000001","hex"),ea=b.from("ffffffffffffffff","hex"),ta={script:Yo,valueBuffer:ea};class ra{constructor(){this.version=1,this.locktime=0,this.ins=[],this.outs=[]}static fromBuffer(e,t){const r=new Do.BufferReader(e),o=new ra;o.version=r.readInt32();const a=r.readUInt8(),n=r.readUInt8();let i=!1;a===ra.ADVANCED_TRANSACTION_MARKER&&n===ra.ADVANCED_TRANSACTION_FLAG?i=!0:r.offset-=2;const s=r.readVarInt();for(let c=0;c<s;++c)o.ins.push({hash:r.readSlice(32),index:r.readUInt32(),script:r.readVarSlice(),sequence:r.readUInt32(),witness:Jo});const u=r.readVarInt();for(let c=0;c<u;++c)o.outs.push({value:r.readUInt64(),script:r.readVarSlice()});if(i){for(let e=0;e<s;++e)o.ins[e].witness=r.readVector();if(!o.hasWitnesses())throw new Error("Transaction has superfluous witness data")}if(o.locktime=r.readUInt32(),t)return o;if(r.offset!==e.length)throw new Error("Transaction has unexpected data");return o}static fromHex(e){return ra.fromBuffer(b.from(e,"hex"),!1)}static isCoinbaseHash(e){Xo(Wo.Hash256bit,e);for(let t=0;t<32;++t)if(0!==e[t])return!1;return!0}isCoinbase(){return 1===this.ins.length&&ra.isCoinbaseHash(this.ins[0].hash)}addInput(e,t,r,o){return Xo(Wo.tuple(Wo.Hash256bit,Wo.UInt32,Wo.maybe(Wo.UInt32),Wo.maybe(Wo.Buffer)),arguments),Wo.Null(r)&&(r=ra.DEFAULT_SEQUENCE),this.ins.push({hash:e,index:t,script:o||Yo,sequence:r,witness:Jo})-1}addOutput(e,t){return Xo(Wo.tuple(Wo.Buffer,Wo.Satoshi),arguments),this.outs.push({script:e,value:t})-1}hasWitnesses(){return this.ins.some(e=>0!==e.witness.length)}stripWitnesses(){this.ins.forEach(e=>{e.witness=Jo})}weight(){return 3*this.byteLength(!1)+this.byteLength(!0)}virtualSize(){return Math.ceil(this.weight()/4)}byteLength(e=!0){const t=e&&this.hasWitnesses();return(t?10:8)+Do.varuint.encodingLength(this.ins.length)+Do.varuint.encodingLength(this.outs.length)+this.ins.reduce((e,t)=>e+40+$o(t.script),0)+this.outs.reduce((e,t)=>e+8+$o(t.script),0)+(t?this.ins.reduce((e,t)=>e+function(e){const t=e.length;return Do.varuint.encodingLength(t)+e.reduce((e,t)=>e+$o(t),0)}(t.witness),0):0)}clone(){const e=new ra;return e.version=this.version,e.locktime=this.locktime,e.ins=this.ins.map(e=>({hash:e.hash,index:e.index,script:e.script,sequence:e.sequence,witness:e.witness})),e.outs=this.outs.map(e=>({script:e.script,value:e.value})),e}hashForSignature(e,t,r){if(Xo(Wo.tuple(Wo.UInt32,Wo.Buffer,Wo.Number),arguments),e>=this.ins.length)return Zo;const o=Ko.compile(Ko.decompile(t).filter(e=>e!==Go.OPS.OP_CODESEPARATOR)),a=this.clone();if((31&r)===ra.SIGHASH_NONE)a.outs=[],a.ins.forEach((t,r)=>{r!==e&&(t.sequence=0)});else if((31&r)===ra.SIGHASH_SINGLE){if(e>=this.outs.length)return Zo;a.outs.length=e+1;for(let t=0;t<e;t++)a.outs[t]=ta;a.ins.forEach((t,r)=>{r!==e&&(t.sequence=0)})}r&ra.SIGHASH_ANYONECANPAY?(a.ins=[a.ins[e]],a.ins[0].script=o):(a.ins.forEach(e=>{e.script=Yo}),a.ins[e].script=o);const n=b.allocUnsafe(a.byteLength(!1)+4);return n.writeInt32LE(r,n.length-4),a.__toBuffer(n,0,!1),Fo.hash256(n)}hashForWitnessV1(e,t,r,o,a,n){if(Xo(Wo.tuple(Wo.UInt32,Xo.arrayOf(Wo.Buffer),Xo.arrayOf(Wo.Satoshi),Wo.UInt32),arguments),r.length!==this.ins.length||t.length!==this.ins.length)throw new Error("Must supply prevout script and value for all inputs");const i=o===ra.SIGHASH_DEFAULT?ra.SIGHASH_ALL:o&ra.SIGHASH_OUTPUT_MASK,s=(o&ra.SIGHASH_INPUT_MASK)===ra.SIGHASH_ANYONECANPAY,u=i===ra.SIGHASH_NONE,c=i===ra.SIGHASH_SINGLE;let l=Yo,p=Yo,f=Yo,d=Yo,h=Yo;if(!s){let e=Do.BufferWriter.withCapacity(36*this.ins.length);this.ins.forEach(t=>{e.writeSlice(t.hash),e.writeUInt32(t.index)}),l=Fo.sha256(e.end()),e=Do.BufferWriter.withCapacity(8*this.ins.length),r.forEach(t=>e.writeUInt64(t)),p=Fo.sha256(e.end()),e=Do.BufferWriter.withCapacity(t.map($o).reduce((e,t)=>e+t)),t.forEach(t=>e.writeVarSlice(t)),f=Fo.sha256(e.end()),e=Do.BufferWriter.withCapacity(4*this.ins.length),this.ins.forEach(t=>e.writeUInt32(t.sequence)),d=Fo.sha256(e.end())}if(u||c){if(c&&e<this.outs.length){const t=this.outs[e],r=Do.BufferWriter.withCapacity(8+$o(t.script));r.writeUInt64(t.value),r.writeVarSlice(t.script),h=Fo.sha256(r.end())}}else{const e=this.outs.map(e=>8+$o(e.script)).reduce((e,t)=>e+t),t=Do.BufferWriter.withCapacity(e);this.outs.forEach(e=>{t.writeUInt64(e.value),t.writeVarSlice(e.script)}),h=Fo.sha256(t.end())}const m=(a?2:0)+(n?1:0),g=174-(s?49:0)-(u?32:0)+(n?32:0)+(a?37:0),y=Do.BufferWriter.withCapacity(g);if(y.writeUInt8(o),y.writeInt32(this.version),y.writeUInt32(this.locktime),y.writeSlice(l),y.writeSlice(p),y.writeSlice(f),y.writeSlice(d),u||c||y.writeSlice(h),y.writeUInt8(m),s){const o=this.ins[e];y.writeSlice(o.hash),y.writeUInt32(o.index),y.writeUInt64(r[e]),y.writeVarSlice(t[e]),y.writeUInt32(o.sequence)}else y.writeUInt32(e);if(n){const e=Do.BufferWriter.withCapacity($o(n));e.writeVarSlice(n),y.writeSlice(Fo.sha256(e.end()))}return c&&y.writeSlice(h),a&&(y.writeSlice(a),y.writeUInt8(0),y.writeUInt32(4294967295)),Fo.taggedHash("TapSighash",b.concat([b.from([0]),y.end()]))}hashForWitnessV0(e,t,r,o){Xo(Wo.tuple(Wo.UInt32,Wo.Buffer,Wo.Satoshi,Wo.UInt32),arguments);let a,n=b.from([]),i=Qo,s=Qo,u=Qo;if(o&ra.SIGHASH_ANYONECANPAY||(n=b.allocUnsafe(36*this.ins.length),a=new Do.BufferWriter(n,0),this.ins.forEach(e=>{a.writeSlice(e.hash),a.writeUInt32(e.index)}),s=Fo.hash256(n)),o&ra.SIGHASH_ANYONECANPAY||(31&o)===ra.SIGHASH_SINGLE||(31&o)===ra.SIGHASH_NONE||(n=b.allocUnsafe(4*this.ins.length),a=new Do.BufferWriter(n,0),this.ins.forEach(e=>{a.writeUInt32(e.sequence)}),u=Fo.hash256(n)),(31&o)!==ra.SIGHASH_SINGLE&&(31&o)!==ra.SIGHASH_NONE){const e=this.outs.reduce((e,t)=>e+8+$o(t.script),0);n=b.allocUnsafe(e),a=new Do.BufferWriter(n,0),this.outs.forEach(e=>{a.writeUInt64(e.value),a.writeVarSlice(e.script)}),i=Fo.hash256(n)}else if((31&o)===ra.SIGHASH_SINGLE&&e<this.outs.length){const t=this.outs[e];n=b.allocUnsafe(8+$o(t.script)),a=new Do.BufferWriter(n,0),a.writeUInt64(t.value),a.writeVarSlice(t.script),i=Fo.hash256(n)}n=b.allocUnsafe(156+$o(t)),a=new Do.BufferWriter(n,0);const c=this.ins[e];return a.writeInt32(this.version),a.writeSlice(s),a.writeSlice(u),a.writeSlice(c.hash),a.writeUInt32(c.index),a.writeVarSlice(t),a.writeUInt64(r),a.writeUInt32(c.sequence),a.writeSlice(i),a.writeUInt32(this.locktime),a.writeUInt32(o),Fo.hash256(n)}getHash(e){return e&&this.isCoinbase()?b.alloc(32,0):Fo.hash256(this.__toBuffer(void 0,void 0,e))}getId(){return(0,Do.reverseBuffer)(this.getHash(!1)).toString("hex")}toBuffer(e,t){return this.__toBuffer(e,t,!0)}toHex(){return this.toBuffer(void 0,void 0).toString("hex")}setInputScript(e,t){Xo(Wo.tuple(Wo.Number,Wo.Buffer),arguments),this.ins[e].script=t}setWitness(e,t){Xo(Wo.tuple(Wo.Number,[Wo.Buffer]),arguments),this.ins[e].witness=t}__toBuffer(e,t,r=!1){e||(e=b.allocUnsafe(this.byteLength(r)));const o=new Do.BufferWriter(e,t||0);o.writeInt32(this.version);const a=r&&this.hasWitnesses();return a&&(o.writeUInt8(ra.ADVANCED_TRANSACTION_MARKER),o.writeUInt8(ra.ADVANCED_TRANSACTION_FLAG)),o.writeVarInt(this.ins.length),this.ins.forEach(e=>{o.writeSlice(e.hash),o.writeUInt32(e.index),o.writeVarSlice(e.script),o.writeUInt32(e.sequence)}),o.writeVarInt(this.outs.length),this.outs.forEach(e=>{void 0!==e.value?o.writeUInt64(e.value):o.writeSlice(e.valueBuffer),o.writeVarSlice(e.script)}),a&&this.ins.forEach(e=>{o.writeVector(e.witness)}),o.writeUInt32(this.locktime),void 0!==t?e.slice(t,o.offset):e}}Vo.Transaction=ra,ra.DEFAULT_SEQUENCE=4294967295,ra.SIGHASH_DEFAULT=0,ra.SIGHASH_ALL=1,ra.SIGHASH_NONE=2,ra.SIGHASH_SINGLE=3,ra.SIGHASH_ANYONECANPAY=128,ra.SIGHASH_OUTPUT_MASK=3,ra.SIGHASH_INPUT_MASK=128,ra.ADVANCED_TRANSACTION_MARKER=0,ra.ADVANCED_TRANSACTION_FLAG=1,Object.defineProperty(qo,"__esModule",{value:!0}),qo.Block=void 0;const oa=Eo,aa=We,na=Mo,ia=Vo,sa=Y,{typeforce:ua}=sa,ca=new TypeError("Cannot compute merkle root for zero transactions"),la=new TypeError("Cannot compute witness commit for non-segwit block");class pa{constructor(){this.version=1,this.prevHash=void 0,this.merkleRoot=void 0,this.timestamp=0,this.witnessCommit=void 0,this.bits=0,this.nonce=0,this.transactions=void 0}static fromBuffer(e){if(e.length<80)throw new Error("Buffer too small (< 80 bytes)");const t=new oa.BufferReader(e),r=new pa;if(r.version=t.readInt32(),r.prevHash=t.readSlice(32),r.merkleRoot=t.readSlice(32),r.timestamp=t.readUInt32(),r.bits=t.readUInt32(),r.nonce=t.readUInt32(),80===e.length)return r;const o=()=>{const e=ia.Transaction.fromBuffer(t.buffer.slice(t.offset),!0);return t.offset+=e.byteLength(),e},a=t.readVarInt();r.transactions=[];for(let i=0;i<a;++i){const e=o();r.transactions.push(e)}const n=r.getWitnessCommit();return n&&(r.witnessCommit=n),r}static fromHex(e){return pa.fromBuffer(b.from(e,"hex"))}static calculateTarget(e){const t=((4278190080&e)>>24)-3,r=8388607&e,o=b.alloc(32,0);return o.writeUIntBE(r,29-t,3),o}static calculateMerkleRoot(e,t){if(ua([{getHash:sa.Function}],e),0===e.length)throw ca;if(t&&!fa(e))throw la;const r=e.map(e=>e.getHash(t)),o=(0,na.fastMerkleRoot)(r,aa.hash256);return t?aa.hash256(b.concat([o,e[0].ins[0].witness[0]])):o}getWitnessCommit(){if(!fa(this.transactions))return null;const e=this.transactions[0].outs.filter(e=>e.script.slice(0,6).equals(b.from("6a24aa21a9ed","hex"))).map(e=>e.script.slice(6,38));if(0===e.length)return null;const t=e[e.length-1];return t instanceof b&&32===t.length?t:null}hasWitnessCommit(){return this.witnessCommit instanceof b&&32===this.witnessCommit.length||null!==this.getWitnessCommit()}hasWitness(){return(e=this.transactions)instanceof Array&&e.some(e=>"object"==typeof e&&e.ins instanceof Array&&e.ins.some(e=>"object"==typeof e&&e.witness instanceof Array&&e.witness.length>0));var e}weight(){return 3*this.byteLength(!1,!1)+this.byteLength(!1,!0)}byteLength(e,t=!0){return e||!this.transactions?80:80+oa.varuint.encodingLength(this.transactions.length)+this.transactions.reduce((e,r)=>e+r.byteLength(t),0)}getHash(){return aa.hash256(this.toBuffer(!0))}getId(){return(0,oa.reverseBuffer)(this.getHash()).toString("hex")}getUTCDate(){const e=new Date(0);return e.setUTCSeconds(this.timestamp),e}toBuffer(e){const t=b.allocUnsafe(this.byteLength(e)),r=new oa.BufferWriter(t);return r.writeInt32(this.version),r.writeSlice(this.prevHash),r.writeSlice(this.merkleRoot),r.writeUInt32(this.timestamp),r.writeUInt32(this.bits),r.writeUInt32(this.nonce),e||!this.transactions||(oa.varuint.encode(this.transactions.length,t,r.offset),r.offset+=oa.varuint.encode.bytes,this.transactions.forEach(e=>{const o=e.byteLength();e.toBuffer(t,r.offset),r.offset+=o})),t}toHex(e){return this.toBuffer(e).toString("hex")}checkTxRoots(){const e=this.hasWitnessCommit();return!(!e&&this.hasWitness())&&(this.__checkMerkleRoot()&&(!e||this.__checkWitnessCommit()))}checkProofOfWork(){const e=(0,oa.reverseBuffer)(this.getHash()),t=pa.calculateTarget(this.bits);return e.compare(t)<=0}__checkMerkleRoot(){if(!this.transactions)throw ca;const e=pa.calculateMerkleRoot(this.transactions);return 0===this.merkleRoot.compare(e)}__checkWitnessCommit(){if(!this.transactions)throw ca;if(!this.hasWitnessCommit())throw la;const e=pa.calculateMerkleRoot(this.transactions,!0);return 0===this.witnessCommit.compare(e)}}function fa(e){return e instanceof Array&&e[0]&&e[0].ins&&e[0].ins instanceof Array&&e[0].ins[0]&&e[0].ins[0].witness&&e[0].ins[0].witness instanceof Array&&e[0].ins[0].witness.length>0}qo.Block=pa;var da,ha,ma,ga,ba={},ya={},va={},wa={},ka={},Ea={},Sa={};da=Sa,Object.defineProperty(da,"__esModule",{value:!0}),(ha=da.GlobalTypes||(da.GlobalTypes={}))[ha.UNSIGNED_TX=0]="UNSIGNED_TX",ha[ha.GLOBAL_XPUB=1]="GLOBAL_XPUB",da.GLOBAL_TYPE_NAMES=["unsignedTx","globalXpub"],(ma=da.InputTypes||(da.InputTypes={}))[ma.NON_WITNESS_UTXO=0]="NON_WITNESS_UTXO",ma[ma.WITNESS_UTXO=1]="WITNESS_UTXO",ma[ma.PARTIAL_SIG=2]="PARTIAL_SIG",ma[ma.SIGHASH_TYPE=3]="SIGHASH_TYPE",ma[ma.REDEEM_SCRIPT=4]="REDEEM_SCRIPT",ma[ma.WITNESS_SCRIPT=5]="WITNESS_SCRIPT",ma[ma.BIP32_DERIVATION=6]="BIP32_DERIVATION",ma[ma.FINAL_SCRIPTSIG=7]="FINAL_SCRIPTSIG",ma[ma.FINAL_SCRIPTWITNESS=8]="FINAL_SCRIPTWITNESS",ma[ma.POR_COMMITMENT=9]="POR_COMMITMENT",ma[ma.TAP_KEY_SIG=19]="TAP_KEY_SIG",ma[ma.TAP_SCRIPT_SIG=20]="TAP_SCRIPT_SIG",ma[ma.TAP_LEAF_SCRIPT=21]="TAP_LEAF_SCRIPT",ma[ma.TAP_BIP32_DERIVATION=22]="TAP_BIP32_DERIVATION",ma[ma.TAP_INTERNAL_KEY=23]="TAP_INTERNAL_KEY",ma[ma.TAP_MERKLE_ROOT=24]="TAP_MERKLE_ROOT",da.INPUT_TYPE_NAMES=["nonWitnessUtxo","witnessUtxo","partialSig","sighashType","redeemScript","witnessScript","bip32Derivation","finalScriptSig","finalScriptWitness","porCommitment","tapKeySig","tapScriptSig","tapLeafScript","tapBip32Derivation","tapInternalKey","tapMerkleRoot"],(ga=da.OutputTypes||(da.OutputTypes={}))[ga.REDEEM_SCRIPT=0]="REDEEM_SCRIPT",ga[ga.WITNESS_SCRIPT=1]="WITNESS_SCRIPT",ga[ga.BIP32_DERIVATION=2]="BIP32_DERIVATION",ga[ga.TAP_INTERNAL_KEY=5]="TAP_INTERNAL_KEY",ga[ga.TAP_TREE=6]="TAP_TREE",ga[ga.TAP_BIP32_DERIVATION=7]="TAP_BIP32_DERIVATION",da.OUTPUT_TYPE_NAMES=["redeemScript","witnessScript","bip32Derivation","tapInternalKey","tapTree","tapBip32Derivation"];var _a={};Object.defineProperty(_a,"__esModule",{value:!0});const Ia=Sa;_a.decode=function(e){if(e.key[0]!==Ia.GlobalTypes.GLOBAL_XPUB)throw new Error("Decode Error: could not decode globalXpub with key 0x"+e.key.toString("hex"));if(79!==e.key.length||![2,3].includes(e.key[46]))throw new Error("Decode Error: globalXpub has invalid extended pubkey in key 0x"+e.key.toString("hex"));if(e.value.length/4%1!=0)throw new Error("Decode Error: Global GLOBAL_XPUB value length should be multiple of 4");const t=e.key.slice(1),r={masterFingerprint:e.value.slice(0,4),extendedPubkey:t,path:"m"};for(const a of(o=e.value.length/4-1,[...Array(o).keys()])){const t=e.value.readUInt32LE(4*a+4),o=!!(2147483648&t),n=2147483647&t;r.path+="/"+n.toString(10)+(o?"'":"")}var o;return r},_a.encode=function(e){const t=b.from([Ia.GlobalTypes.GLOBAL_XPUB]),r=b.concat([t,e.extendedPubkey]),o=e.path.split("/"),a=b.allocUnsafe(4*o.length);e.masterFingerprint.copy(a,0);let n=4;return o.slice(1).forEach(e=>{const t="'"===e.slice(-1);let r=2147483647&parseInt(t?e.slice(0,-1):e,10);t&&(r+=2147483648),a.writeUInt32LE(r,n),n+=4}),{key:r,value:a}},_a.expected="{ masterFingerprint: Buffer; extendedPubkey: Buffer; path: string; }",_a.check=function(e){const t=e.extendedPubkey,r=e.masterFingerprint,o=e.path;return b.isBuffer(t)&&78===t.length&&[2,3].indexOf(t[45])>-1&&b.isBuffer(r)&&4===r.length&&"string"==typeof o&&!!o.match(/^m(\/\d+'?)*$/)},_a.canAddToArray=function(e,t,r){const o=t.extendedPubkey.toString("hex");return!r.has(o)&&(r.add(o),0===e.filter(e=>e.extendedPubkey.equals(t.extendedPubkey)).length)};var Ta={};Object.defineProperty(Ta,"__esModule",{value:!0});const Aa=Sa;Ta.encode=function(e){return{key:b.from([Aa.GlobalTypes.UNSIGNED_TX]),value:e.toBuffer()}};var za={};Object.defineProperty(za,"__esModule",{value:!0});const Oa=Sa;za.decode=function(e){if(e.key[0]!==Oa.InputTypes.FINAL_SCRIPTSIG)throw new Error("Decode Error: could not decode finalScriptSig with key 0x"+e.key.toString("hex"));return e.value},za.encode=function(e){return{key:b.from([Oa.InputTypes.FINAL_SCRIPTSIG]),value:e}},za.expected="Buffer",za.check=function(e){return b.isBuffer(e)},za.canAdd=function(e,t){return!!e&&!!t&&void 0===e.finalScriptSig};var xa={};Object.defineProperty(xa,"__esModule",{value:!0});const Pa=Sa;xa.decode=function(e){if(e.key[0]!==Pa.InputTypes.FINAL_SCRIPTWITNESS)throw new Error("Decode Error: could not decode finalScriptWitness with key 0x"+e.key.toString("hex"));return e.value},xa.encode=function(e){return{key:b.from([Pa.InputTypes.FINAL_SCRIPTWITNESS]),value:e}},xa.expected="Buffer",xa.check=function(e){return b.isBuffer(e)},xa.canAdd=function(e,t){return!!e&&!!t&&void 0===e.finalScriptWitness};var ja={};Object.defineProperty(ja,"__esModule",{value:!0});const Ba=Sa;ja.decode=function(e){if(e.key[0]!==Ba.InputTypes.NON_WITNESS_UTXO)throw new Error("Decode Error: could not decode nonWitnessUtxo with key 0x"+e.key.toString("hex"));return e.value},ja.encode=function(e){return{key:b.from([Ba.InputTypes.NON_WITNESS_UTXO]),value:e}},ja.expected="Buffer",ja.check=function(e){return b.isBuffer(e)},ja.canAdd=function(e,t){return!!e&&!!t&&void 0===e.nonWitnessUtxo};var Ha={};Object.defineProperty(Ha,"__esModule",{value:!0});const Ua=Sa;Ha.decode=function(e){if(e.key[0]!==Ua.InputTypes.PARTIAL_SIG)throw new Error("Decode Error: could not decode partialSig with key 0x"+e.key.toString("hex"));if(34!==e.key.length&&66!==e.key.length||![2,3,4].includes(e.key[1]))throw new Error("Decode Error: partialSig has invalid pubkey in key 0x"+e.key.toString("hex"));return{pubkey:e.key.slice(1),signature:e.value}},Ha.encode=function(e){const t=b.from([Ua.InputTypes.PARTIAL_SIG]);return{key:b.concat([t,e.pubkey]),value:e.signature}},Ha.expected="{ pubkey: Buffer; signature: Buffer; }",Ha.check=function(e){return b.isBuffer(e.pubkey)&&b.isBuffer(e.signature)&&[33,65].includes(e.pubkey.length)&&[2,3,4].includes(e.pubkey[0])&&function(e){if(!b.isBuffer(e)||e.length<9)return!1;if(48!==e[0])return!1;if(e.length!==e[1]+3)return!1;if(2!==e[2])return!1;const t=e[3];if(t>33||t<1)return!1;if(2!==e[3+t+1])return!1;const r=e[3+t+2];return!(r>33||r<1)&&e.length===3+t+2+r+2}(e.signature)},Ha.canAddToArray=function(e,t,r){const o=t.pubkey.toString("hex");return!r.has(o)&&(r.add(o),0===e.filter(e=>e.pubkey.equals(t.pubkey)).length)};var Na={};Object.defineProperty(Na,"__esModule",{value:!0});const La=Sa;Na.decode=function(e){if(e.key[0]!==La.InputTypes.POR_COMMITMENT)throw new Error("Decode Error: could not decode porCommitment with key 0x"+e.key.toString("hex"));return e.value.toString("utf8")},Na.encode=function(e){return{key:b.from([La.InputTypes.POR_COMMITMENT]),value:b.from(e,"utf8")}},Na.expected="string",Na.check=function(e){return"string"==typeof e},Na.canAdd=function(e,t){return!!e&&!!t&&void 0===e.porCommitment};var Ca={};Object.defineProperty(Ca,"__esModule",{value:!0});const Ra=Sa;Ca.decode=function(e){if(e.key[0]!==Ra.InputTypes.SIGHASH_TYPE)throw new Error("Decode Error: could not decode sighashType with key 0x"+e.key.toString("hex"));return e.value.readUInt32LE(0)},Ca.encode=function(e){const t=b.from([Ra.InputTypes.SIGHASH_TYPE]),r=b.allocUnsafe(4);return r.writeUInt32LE(e,0),{key:t,value:r}},Ca.expected="number",Ca.check=function(e){return"number"==typeof e},Ca.canAdd=function(e,t){return!!e&&!!t&&void 0===e.sighashType};var qa={};Object.defineProperty(qa,"__esModule",{value:!0});const Ma=Sa;function Va(e){return b.isBuffer(e)&&(64===e.length||65===e.length)}qa.decode=function(e){if(e.key[0]!==Ma.InputTypes.TAP_KEY_SIG||1!==e.key.length)throw new Error("Decode Error: could not decode tapKeySig with key 0x"+e.key.toString("hex"));if(!Va(e.value))throw new Error("Decode Error: tapKeySig not a valid 64-65-byte BIP340 signature");return e.value},qa.encode=function(e){return{key:b.from([Ma.InputTypes.TAP_KEY_SIG]),value:e}},qa.expected="Buffer",qa.check=Va,qa.canAdd=function(e,t){return!!e&&!!t&&void 0===e.tapKeySig};var Da={};Object.defineProperty(Da,"__esModule",{value:!0});const Fa=Sa;Da.decode=function(e){if(e.key[0]!==Fa.InputTypes.TAP_LEAF_SCRIPT)throw new Error("Decode Error: could not decode tapLeafScript with key 0x"+e.key.toString("hex"));if((e.key.length-2)%32!=0)throw new Error("Decode Error: tapLeafScript has invalid control block in key 0x"+e.key.toString("hex"));const t=e.value[e.value.length-1];if((254&e.key[1])!==t)throw new Error("Decode Error: tapLeafScript bad leaf version in key 0x"+e.key.toString("hex"));const r=e.value.slice(0,-1);return{controlBlock:e.key.slice(1),script:r,leafVersion:t}},Da.encode=function(e){const t=b.from([Fa.InputTypes.TAP_LEAF_SCRIPT]),r=b.from([e.leafVersion]);return{key:b.concat([t,e.controlBlock]),value:b.concat([e.script,r])}},Da.expected="{ controlBlock: Buffer; leafVersion: number, script: Buffer; }",Da.check=function(e){return b.isBuffer(e.controlBlock)&&(e.controlBlock.length-1)%32==0&&(254&e.controlBlock[0])===e.leafVersion&&b.isBuffer(e.script)},Da.canAddToArray=function(e,t,r){const o=t.controlBlock.toString("hex");return!r.has(o)&&(r.add(o),0===e.filter(e=>e.controlBlock.equals(t.controlBlock)).length)};var Ka={};Object.defineProperty(Ka,"__esModule",{value:!0});const Ga=Sa;function Wa(e){return b.isBuffer(e)&&32===e.length}Ka.decode=function(e){if(e.key[0]!==Ga.InputTypes.TAP_MERKLE_ROOT||1!==e.key.length)throw new Error("Decode Error: could not decode tapMerkleRoot with key 0x"+e.key.toString("hex"));if(!Wa(e.value))throw new Error("Decode Error: tapMerkleRoot not a 32-byte hash");return e.value},Ka.encode=function(e){return{key:b.from([Ga.InputTypes.TAP_MERKLE_ROOT]),value:e}},Ka.expected="Buffer",Ka.check=Wa,Ka.canAdd=function(e,t){return!!e&&!!t&&void 0===e.tapMerkleRoot};var Xa={};Object.defineProperty(Xa,"__esModule",{value:!0});const $a=Sa;Xa.decode=function(e){if(e.key[0]!==$a.InputTypes.TAP_SCRIPT_SIG)throw new Error("Decode Error: could not decode tapScriptSig with key 0x"+e.key.toString("hex"));if(65!==e.key.length)throw new Error("Decode Error: tapScriptSig has invalid key 0x"+e.key.toString("hex"));if(64!==e.value.length&&65!==e.value.length)throw new Error("Decode Error: tapScriptSig has invalid signature in key 0x"+e.key.toString("hex"));return{pubkey:e.key.slice(1,33),leafHash:e.key.slice(33),signature:e.value}},Xa.encode=function(e){const t=b.from([$a.InputTypes.TAP_SCRIPT_SIG]);return{key:b.concat([t,e.pubkey,e.leafHash]),value:e.signature}},Xa.expected="{ pubkey: Buffer; leafHash: Buffer; signature: Buffer; }",Xa.check=function(e){return b.isBuffer(e.pubkey)&&b.isBuffer(e.leafHash)&&b.isBuffer(e.signature)&&32===e.pubkey.length&&32===e.leafHash.length&&(64===e.signature.length||65===e.signature.length)},Xa.canAddToArray=function(e,t,r){const o=t.pubkey.toString("hex")+t.leafHash.toString("hex");return!r.has(o)&&(r.add(o),0===e.filter(e=>e.pubkey.equals(t.pubkey)&&e.leafHash.equals(t.leafHash)).length)};var Ya={},Ja={},Qa={};Object.defineProperty(Qa,"__esModule",{value:!0});function Za(e){if(e<0||e>9007199254740991||e%1!=0)throw new RangeError("value out of range")}function en(e){return Za(e),e<253?1:e<=65535?3:e<=4294967295?5:9}Qa.encode=function e(t,r,o){if(Za(t),r||(r=b.allocUnsafe(en(t))),!b.isBuffer(r))throw new TypeError("buffer must be a Buffer instance");return o||(o=0),t<253?(r.writeUInt8(t,o),Object.assign(e,{bytes:1})):t<=65535?(r.writeUInt8(253,o),r.writeUInt16LE(t,o+1),Object.assign(e,{bytes:3})):t<=4294967295?(r.writeUInt8(254,o),r.writeUInt32LE(t,o+1),Object.assign(e,{bytes:5})):(r.writeUInt8(255,o),r.writeUInt32LE(t>>>0,o+1),r.writeUInt32LE(t/4294967296|0,o+5),Object.assign(e,{bytes:9})),r},Qa.decode=function e(t,r){if(!b.isBuffer(t))throw new TypeError("buffer must be a Buffer instance");r||(r=0);const o=t.readUInt8(r);if(o<253)return Object.assign(e,{bytes:1}),o;if(253===o)return Object.assign(e,{bytes:3}),t.readUInt16LE(r+1);if(254===o)return Object.assign(e,{bytes:5}),t.readUInt32LE(r+1);{Object.assign(e,{bytes:9});const o=t.readUInt32LE(r+1),a=4294967296*t.readUInt32LE(r+5)+o;return Za(a),a}},Qa.encodingLength=en,Object.defineProperty(Ja,"__esModule",{value:!0});const tn=Qa;function rn(e){const t=e.key.length,r=e.value.length,o=tn.encodingLength(t),a=tn.encodingLength(r),n=b.allocUnsafe(o+t+a+r);return tn.encode(t,n,0),e.key.copy(n,o),tn.encode(r,n,o+t),e.value.copy(n,o+t+a),n}function on(e,t){if("number"!=typeof e)throw new Error("cannot write a non-number as a number");if(e<0)throw new Error("specified a negative value for writing an unsigned value");if(e>t)throw new Error("RangeError: value out of range");if(Math.floor(e)!==e)throw new Error("value has a fractional component")}Ja.range=e=>[...Array(e).keys()],Ja.reverseBuffer=function(e){if(e.length<1)return e;let t=e.length-1,r=0;for(let o=0;o<e.length/2;o++)r=e[o],e[o]=e[t],e[t]=r,t--;return e},Ja.keyValsToBuffer=function(e){const t=e.map(rn);return t.push(b.from([0])),b.concat(t)},Ja.keyValToBuffer=rn,Ja.readUInt64LE=function(e,t){const r=e.readUInt32LE(t);let o=e.readUInt32LE(t+4);return o*=4294967296,on(o+r,9007199254740991),o+r},Ja.writeUInt64LE=function(e,t,r){return on(t,9007199254740991),e.writeInt32LE(-1&t,r),e.writeUInt32LE(Math.floor(t/4294967296),r+4),r+8},Object.defineProperty(Ya,"__esModule",{value:!0});const an=Sa,nn=Ja,sn=Qa;Ya.decode=function(e){if(e.key[0]!==an.InputTypes.WITNESS_UTXO)throw new Error("Decode Error: could not decode witnessUtxo with key 0x"+e.key.toString("hex"));const t=nn.readUInt64LE(e.value,0);let r=8;const o=sn.decode(e.value,r);r+=sn.encodingLength(o);const a=e.value.slice(r);if(a.length!==o)throw new Error("Decode Error: WITNESS_UTXO script is not proper length");return{script:a,value:t}},Ya.encode=function(e){const{script:t,value:r}=e,o=sn.encodingLength(t.length),a=b.allocUnsafe(8+o+t.length);return nn.writeUInt64LE(a,r,0),sn.encode(t.length,a,8),t.copy(a,8+o),{key:b.from([an.InputTypes.WITNESS_UTXO]),value:a}},Ya.expected="{ script: Buffer; value: number; }",Ya.check=function(e){return b.isBuffer(e.script)&&"number"==typeof e.value},Ya.canAdd=function(e,t){return!!e&&!!t&&void 0===e.witnessUtxo};var un={};Object.defineProperty(un,"__esModule",{value:!0});const cn=Sa,ln=Qa;un.decode=function(e){if(e.key[0]!==cn.OutputTypes.TAP_TREE||1!==e.key.length)throw new Error("Decode Error: could not decode tapTree with key 0x"+e.key.toString("hex"));let t=0;const r=[];for(;t<e.value.length;){const o=e.value[t++],a=e.value[t++],n=ln.decode(e.value,t);t+=ln.encodingLength(n),r.push({depth:o,leafVersion:a,script:e.value.slice(t,t+n)}),t+=n}return{leaves:r}},un.encode=function(e){const t=b.from([cn.OutputTypes.TAP_TREE]),r=[].concat(...e.leaves.map(e=>[b.of(e.depth,e.leafVersion),ln.encode(e.script.length),e.script]));return{key:t,value:b.concat(r)}},un.expected="{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }",un.check=function(e){return Array.isArray(e.leaves)&&e.leaves.every(e=>e.depth>=0&&e.depth<=128&&(254&e.leafVersion)===e.leafVersion&&b.isBuffer(e.script))},un.canAdd=function(e,t){return!!e&&!!t&&void 0===e.tapTree};var pn={};Object.defineProperty(pn,"__esModule",{value:!0});const fn=e=>33===e.length&&[2,3].includes(e[0])||65===e.length&&4===e[0];pn.makeConverter=function(e,t=fn){return{decode:function(r){if(r.key[0]!==e)throw new Error("Decode Error: could not decode bip32Derivation with key 0x"+r.key.toString("hex"));const o=r.key.slice(1);if(!t(o))throw new Error("Decode Error: bip32Derivation has invalid pubkey in key 0x"+r.key.toString("hex"));if(r.value.length/4%1!=0)throw new Error("Decode Error: Input BIP32_DERIVATION value length should be multiple of 4");const a={masterFingerprint:r.value.slice(0,4),pubkey:o,path:"m"};for(const e of(n=r.value.length/4-1,[...Array(n).keys()])){const t=r.value.readUInt32LE(4*e+4),o=!!(2147483648&t),n=2147483647&t;a.path+="/"+n.toString(10)+(o?"'":"")}var n;return a},encode:function(t){const r=b.from([e]),o=b.concat([r,t.pubkey]),a=t.path.split("/"),n=b.allocUnsafe(4*a.length);t.masterFingerprint.copy(n,0);let i=4;return a.slice(1).forEach(e=>{const t="'"===e.slice(-1);let r=2147483647&parseInt(t?e.slice(0,-1):e,10);t&&(r+=2147483648),n.writeUInt32LE(r,i),i+=4}),{key:o,value:n}},check:function(e){return b.isBuffer(e.pubkey)&&b.isBuffer(e.masterFingerprint)&&"string"==typeof e.path&&t(e.pubkey)&&4===e.masterFingerprint.length},expected:"{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }",canAddToArray:function(e,t,r){const o=t.pubkey.toString("hex");return!r.has(o)&&(r.add(o),0===e.filter(e=>e.pubkey.equals(t.pubkey)).length)}}};var dn={};Object.defineProperty(dn,"__esModule",{value:!0}),dn.makeChecker=function(e){return function(t){let r;if(e.includes(t.key[0])&&(r=t.key.slice(1),33!==r.length&&65!==r.length||![2,3,4].includes(r[0])))throw new Error("Format Error: invalid pubkey in key 0x"+t.key.toString("hex"));return r}};var hn={};Object.defineProperty(hn,"__esModule",{value:!0}),hn.makeConverter=function(e){return{decode:function(t){if(t.key[0]!==e)throw new Error("Decode Error: could not decode redeemScript with key 0x"+t.key.toString("hex"));return t.value},encode:function(t){return{key:b.from([e]),value:t}},check:function(e){return b.isBuffer(e)},expected:"Buffer",canAdd:function(e,t){return!!e&&!!t&&void 0===e.redeemScript}}};var mn={};Object.defineProperty(mn,"__esModule",{value:!0});const gn=Qa,bn=pn,yn=e=>32===e.length;mn.makeConverter=function(e){const t=bn.makeConverter(e,yn);return{decode:function(e){const r=gn.decode(e.value),o=gn.encodingLength(r),a=t.decode({key:e.key,value:e.value.slice(o+32*r)}),n=new Array(r);for(let t=0,i=o;t<r;t++,i+=32)n[t]=e.value.slice(i,i+32);return Object.assign({},a,{leafHashes:n})},encode:function(e){const r=t.encode(e),o=gn.encodingLength(e.leafHashes.length),a=b.allocUnsafe(o);gn.encode(e.leafHashes.length,a);const n=b.concat([a,...e.leafHashes,r.value]);return Object.assign({},r,{value:n})},check:function(e){return Array.isArray(e.leafHashes)&&e.leafHashes.every(e=>b.isBuffer(e)&&32===e.length)&&t.check(e)},expected:"{ masterFingerprint: Buffer; pubkey: Buffer; path: string; leafHashes: Buffer[]; }",canAddToArray:t.canAddToArray}};var vn={};Object.defineProperty(vn,"__esModule",{value:!0}),vn.makeConverter=function(e){return{decode:function(t){if(t.key[0]!==e||1!==t.key.length)throw new Error("Decode Error: could not decode tapInternalKey with key 0x"+t.key.toString("hex"));if(32!==t.value.length)throw new Error("Decode Error: tapInternalKey not a 32-byte x-only pubkey");return t.value},encode:function(t){return{key:b.from([e]),value:t}},check:function(e){return b.isBuffer(e)&&32===e.length},expected:"Buffer",canAdd:function(e,t){return!!e&&!!t&&void 0===e.tapInternalKey}}};var wn={};Object.defineProperty(wn,"__esModule",{value:!0}),wn.makeConverter=function(e){return{decode:function(t){if(t.key[0]!==e)throw new Error("Decode Error: could not decode witnessScript with key 0x"+t.key.toString("hex"));return t.value},encode:function(t){return{key:b.from([e]),value:t}},check:function(e){return b.isBuffer(e)},expected:"Buffer",canAdd:function(e,t){return!!e&&!!t&&void 0===e.witnessScript}}},Object.defineProperty(Ea,"__esModule",{value:!0});const kn=Sa,En=za,Sn=xa,_n=ja,In=Ha,Tn=Na,An=Ca,zn=qa,On=Da,xn=Ka,Pn=Xa,jn=Ya,Bn=un,Hn=pn,Un=dn,Nn=hn,Ln=mn,Cn=vn,Rn=wn,qn={unsignedTx:Ta,globalXpub:_a,checkPubkey:Un.makeChecker([])};Ea.globals=qn;const Mn={nonWitnessUtxo:_n,partialSig:In,sighashType:An,finalScriptSig:En,finalScriptWitness:Sn,porCommitment:Tn,witnessUtxo:jn,bip32Derivation:Hn.makeConverter(kn.InputTypes.BIP32_DERIVATION),redeemScript:Nn.makeConverter(kn.InputTypes.REDEEM_SCRIPT),witnessScript:Rn.makeConverter(kn.InputTypes.WITNESS_SCRIPT),checkPubkey:Un.makeChecker([kn.InputTypes.PARTIAL_SIG,kn.InputTypes.BIP32_DERIVATION]),tapKeySig:zn,tapScriptSig:Pn,tapLeafScript:On,tapBip32Derivation:Ln.makeConverter(kn.InputTypes.TAP_BIP32_DERIVATION),tapInternalKey:Cn.makeConverter(kn.InputTypes.TAP_INTERNAL_KEY),tapMerkleRoot:xn};Ea.inputs=Mn;const Vn={bip32Derivation:Hn.makeConverter(kn.OutputTypes.BIP32_DERIVATION),redeemScript:Nn.makeConverter(kn.OutputTypes.REDEEM_SCRIPT),witnessScript:Rn.makeConverter(kn.OutputTypes.WITNESS_SCRIPT),checkPubkey:Un.makeChecker([kn.OutputTypes.BIP32_DERIVATION]),tapBip32Derivation:Ln.makeConverter(kn.OutputTypes.TAP_BIP32_DERIVATION),tapTree:Bn,tapInternalKey:Cn.makeConverter(kn.OutputTypes.TAP_INTERNAL_KEY)};Ea.outputs=Vn,Object.defineProperty(ka,"__esModule",{value:!0});const Dn=Ea,Fn=Ja,Kn=Qa,Gn=Sa;function Wn(e,t,r){if(!t.equals(b.from([r])))throw new Error(`Format Error: Invalid ${e} key: ${t.toString("hex")}`)}function Xn(e,{globalMapKeyVals:t,inputKeyVals:r,outputKeyVals:o}){const a={unsignedTx:e};let n=0;for(const l of t)switch(l.key[0]){case Gn.GlobalTypes.UNSIGNED_TX:if(Wn("global",l.key,Gn.GlobalTypes.UNSIGNED_TX),n>0)throw new Error("Format Error: GlobalMap has multiple UNSIGNED_TX");n++;break;case Gn.GlobalTypes.GLOBAL_XPUB:void 0===a.globalXpub&&(a.globalXpub=[]),a.globalXpub.push(Dn.globals.globalXpub.decode(l));break;default:a.unknownKeyVals||(a.unknownKeyVals=[]),a.unknownKeyVals.push(l)}const i=r.length,s=o.length,u=[],c=[];for(const l of Fn.range(i)){const e={};for(const t of r[l])switch(Dn.inputs.checkPubkey(t),t.key[0]){case Gn.InputTypes.NON_WITNESS_UTXO:if(Wn("input",t.key,Gn.InputTypes.NON_WITNESS_UTXO),void 0!==e.nonWitnessUtxo)throw new Error("Format Error: Input has multiple NON_WITNESS_UTXO");e.nonWitnessUtxo=Dn.inputs.nonWitnessUtxo.decode(t);break;case Gn.InputTypes.WITNESS_UTXO:if(Wn("input",t.key,Gn.InputTypes.WITNESS_UTXO),void 0!==e.witnessUtxo)throw new Error("Format Error: Input has multiple WITNESS_UTXO");e.witnessUtxo=Dn.inputs.witnessUtxo.decode(t);break;case Gn.InputTypes.PARTIAL_SIG:void 0===e.partialSig&&(e.partialSig=[]),e.partialSig.push(Dn.inputs.partialSig.decode(t));break;case Gn.InputTypes.SIGHASH_TYPE:if(Wn("input",t.key,Gn.InputTypes.SIGHASH_TYPE),void 0!==e.sighashType)throw new Error("Format Error: Input has multiple SIGHASH_TYPE");e.sighashType=Dn.inputs.sighashType.decode(t);break;case Gn.InputTypes.REDEEM_SCRIPT:if(Wn("input",t.key,Gn.InputTypes.REDEEM_SCRIPT),void 0!==e.redeemScript)throw new Error("Format Error: Input has multiple REDEEM_SCRIPT");e.redeemScript=Dn.inputs.redeemScript.decode(t);break;case Gn.InputTypes.WITNESS_SCRIPT:if(Wn("input",t.key,Gn.InputTypes.WITNESS_SCRIPT),void 0!==e.witnessScript)throw new Error("Format Error: Input has multiple WITNESS_SCRIPT");e.witnessScript=Dn.inputs.witnessScript.decode(t);break;case Gn.InputTypes.BIP32_DERIVATION:void 0===e.bip32Derivation&&(e.bip32Derivation=[]),e.bip32Derivation.push(Dn.inputs.bip32Derivation.decode(t));break;case Gn.InputTypes.FINAL_SCRIPTSIG:Wn("input",t.key,Gn.InputTypes.FINAL_SCRIPTSIG),e.finalScriptSig=Dn.inputs.finalScriptSig.decode(t);break;case Gn.InputTypes.FINAL_SCRIPTWITNESS:Wn("input",t.key,Gn.InputTypes.FINAL_SCRIPTWITNESS),e.finalScriptWitness=Dn.inputs.finalScriptWitness.decode(t);break;case Gn.InputTypes.POR_COMMITMENT:Wn("input",t.key,Gn.InputTypes.POR_COMMITMENT),e.porCommitment=Dn.inputs.porCommitment.decode(t);break;case Gn.InputTypes.TAP_KEY_SIG:Wn("input",t.key,Gn.InputTypes.TAP_KEY_SIG),e.tapKeySig=Dn.inputs.tapKeySig.decode(t);break;case Gn.InputTypes.TAP_SCRIPT_SIG:void 0===e.tapScriptSig&&(e.tapScriptSig=[]),e.tapScriptSig.push(Dn.inputs.tapScriptSig.decode(t));break;case Gn.InputTypes.TAP_LEAF_SCRIPT:void 0===e.tapLeafScript&&(e.tapLeafScript=[]),e.tapLeafScript.push(Dn.inputs.tapLeafScript.decode(t));break;case Gn.InputTypes.TAP_BIP32_DERIVATION:void 0===e.tapBip32Derivation&&(e.tapBip32Derivation=[]),e.tapBip32Derivation.push(Dn.inputs.tapBip32Derivation.decode(t));break;case Gn.InputTypes.TAP_INTERNAL_KEY:Wn("input",t.key,Gn.InputTypes.TAP_INTERNAL_KEY),e.tapInternalKey=Dn.inputs.tapInternalKey.decode(t);break;case Gn.InputTypes.TAP_MERKLE_ROOT:Wn("input",t.key,Gn.InputTypes.TAP_MERKLE_ROOT),e.tapMerkleRoot=Dn.inputs.tapMerkleRoot.decode(t);break;default:e.unknownKeyVals||(e.unknownKeyVals=[]),e.unknownKeyVals.push(t)}u.push(e)}for(const l of Fn.range(s)){const e={};for(const t of o[l])switch(Dn.outputs.checkPubkey(t),t.key[0]){case Gn.OutputTypes.REDEEM_SCRIPT:if(Wn("output",t.key,Gn.OutputTypes.REDEEM_SCRIPT),void 0!==e.redeemScript)throw new Error("Format Error: Output has multiple REDEEM_SCRIPT");e.redeemScript=Dn.outputs.redeemScript.decode(t);break;case Gn.OutputTypes.WITNESS_SCRIPT:if(Wn("output",t.key,Gn.OutputTypes.WITNESS_SCRIPT),void 0!==e.witnessScript)throw new Error("Format Error: Output has multiple WITNESS_SCRIPT");e.witnessScript=Dn.outputs.witnessScript.decode(t);break;case Gn.OutputTypes.BIP32_DERIVATION:void 0===e.bip32Derivation&&(e.bip32Derivation=[]),e.bip32Derivation.push(Dn.outputs.bip32Derivation.decode(t));break;case Gn.OutputTypes.TAP_INTERNAL_KEY:Wn("output",t.key,Gn.OutputTypes.TAP_INTERNAL_KEY),e.tapInternalKey=Dn.outputs.tapInternalKey.decode(t);break;case Gn.OutputTypes.TAP_TREE:Wn("output",t.key,Gn.OutputTypes.TAP_TREE),e.tapTree=Dn.outputs.tapTree.decode(t);break;case Gn.OutputTypes.TAP_BIP32_DERIVATION:void 0===e.tapBip32Derivation&&(e.tapBip32Derivation=[]),e.tapBip32Derivation.push(Dn.outputs.tapBip32Derivation.decode(t));break;default:e.unknownKeyVals||(e.unknownKeyVals=[]),e.unknownKeyVals.push(t)}c.push(e)}return{globalMap:a,inputs:u,outputs:c}}ka.psbtFromBuffer=function(e,t){let r=0;function o(){const t=Kn.decode(e,r);r+=Kn.encodingLength(t);const o=e.slice(r,r+t);return r+=t,o}function a(){return{key:o(),value:o()}}function n(){if(r>=e.length)throw new Error("Format Error: Unexpected End of PSBT");const t=0===e.readUInt8(r);return t&&r++,t}if(1886610036!==function(){const t=e.readUInt32BE(r);return r+=4,t}())throw new Error("Format Error: Invalid Magic Number");if(255!==function(){const t=e.readUInt8(r);return r+=1,t}())throw new Error("Format Error: Magic Number must be followed by 0xff separator");const i=[],s={};for(;!n();){const e=a(),t=e.key.toString("hex");if(s[t])throw new Error("Format Error: Keys must be unique for global keymap: key "+t);s[t]=1,i.push(e)}const u=i.filter(e=>e.key[0]===Gn.GlobalTypes.UNSIGNED_TX);if(1!==u.length)throw new Error("Format Error: Only one UNSIGNED_TX allowed");const c=t(u[0].value),{inputCount:l,outputCount:p}=c.getInputOutputCounts(),f=[],d=[];for(const h of Fn.range(l)){const e={},t=[];for(;!n();){const r=a(),o=r.key.toString("hex");if(e[o])throw new Error("Format Error: Keys must be unique for each input: input index "+h+" key "+o);e[o]=1,t.push(r)}f.push(t)}for(const h of Fn.range(p)){const e={},t=[];for(;!n();){const r=a(),o=r.key.toString("hex");if(e[o])throw new Error("Format Error: Keys must be unique for each output: output index "+h+" key "+o);e[o]=1,t.push(r)}d.push(t)}return Xn(c,{globalMapKeyVals:i,inputKeyVals:f,outputKeyVals:d})},ka.checkKeyBuffer=Wn,ka.psbtFromKeyVals=Xn;var $n={};Object.defineProperty($n,"__esModule",{value:!0});const Yn=Ea,Jn=Ja;$n.psbtToBuffer=function({globalMap:e,inputs:t,outputs:r}){const{globalKeyVals:o,inputKeyVals:a,outputKeyVals:n}=ei({globalMap:e,inputs:t,outputs:r}),i=Jn.keyValsToBuffer(o),s=e=>0===e.length?[b.from([0])]:e.map(Jn.keyValsToBuffer),u=s(a),c=s(n),l=b.allocUnsafe(5);return l.writeUIntBE(482972169471,0,5),b.concat([l,i].concat(u,c))};const Qn=(e,t)=>e.key.compare(t.key);function Zn(e,t){const r=new Set,o=Object.entries(e).reduce((e,[o,a])=>{if("unknownKeyVals"===o)return e;const n=t[o];if(void 0===n)return e;const i=(Array.isArray(a)?a:[a]).map(n.encode);return i.map(e=>e.key.toString("hex")).forEach(e=>{if(r.has(e))throw new Error("Serialize Error: Duplicate key: "+e);r.add(e)}),e.concat(i)},[]),a=e.unknownKeyVals?e.unknownKeyVals.filter(e=>!r.has(e.key.toString("hex"))):[];return o.concat(a).sort(Qn)}function ei({globalMap:e,inputs:t,outputs:r}){return{globalKeyVals:Zn(e,Yn.globals),inputKeyVals:t.map(e=>Zn(e,Yn.inputs)),outputKeyVals:r.map(e=>Zn(e,Yn.outputs))}}$n.psbtToKeyVals=ei,function(e){function t(t){for(var r in t)e.hasOwnProperty(r)||(e[r]=t[r])}Object.defineProperty(e,"__esModule",{value:!0}),t(ka),t($n)}(wa),Object.defineProperty(va,"__esModule",{value:!0});const ti=wa;function ri(e,t,r){return o=>{if(e.has(o))return;const a=r.filter(e=>e.key.toString("hex")===o)[0];t.push(a),e.add(o)}}function oi(e){return e.globalMap.unsignedTx}function ai(e){const t=new Set;return e.forEach(e=>{const r=e.key.toString("hex");if(t.has(r))throw new Error("Combine: KeyValue Map keys should be unique");t.add(r)}),t}va.combine=function(e){const t=e[0],r=ti.psbtToKeyVals(t),o=e.slice(1);if(0===o.length)throw new Error("Combine: Nothing to combine");const a=oi(t);if(void 0===a)throw new Error("Combine: Self missing transaction");const n=ai(r.globalKeyVals),i=r.inputKeyVals.map(ai),s=r.outputKeyVals.map(ai);for(const u of o){const e=oi(u);if(void 0===e||!e.toBuffer().equals(a.toBuffer()))throw new Error("Combine: One of the Psbts does not have the same transaction.");const t=ti.psbtToKeyVals(u);ai(t.globalKeyVals).forEach(ri(n,r.globalKeyVals,t.globalKeyVals));t.inputKeyVals.map(ai).forEach((e,o)=>e.forEach(ri(i[o],r.inputKeyVals[o],t.inputKeyVals[o])));t.outputKeyVals.map(ai).forEach((e,o)=>e.forEach(ri(s[o],r.outputKeyVals[o],t.outputKeyVals[o])))}return ti.psbtFromKeyVals(a,{globalMapKeyVals:r.globalKeyVals,inputKeyVals:r.inputKeyVals,outputKeyVals:r.outputKeyVals})};var ni={};!function(e){Object.defineProperty(e,"__esModule",{value:!0});const t=Ea;function r(e,t){const r=e[t];if(void 0===r)throw new Error(`No input #${t}`);return r}function o(e,t){const r=e[t];if(void 0===r)throw new Error(`No output #${t}`);return r}function a(e,t,r,o){throw new Error(`Data for ${e} key ${t} is incorrect: Expected ${r} and got ${JSON.stringify(o)}`)}function n(e){return(r,o)=>{for(const n of Object.keys(r)){const i=r[n],{canAdd:s,canAddToArray:u,check:c,expected:l}=t[e+"s"][n]||{};if(c)if(!!u){if(!Array.isArray(i)||o[n]&&!Array.isArray(o[n]))throw new Error(`Key type ${n} must be an array`);i.every(c)||a(e,n,l,i);const t=o[n]||[],r=new Set;if(!i.every(e=>u(t,e,r)))throw new Error("Can not add duplicate data to array");o[n]=t.concat(i)}else{if(c(i)||a(e,n,l,i),!s(o,i))throw new Error(`Can not add duplicate data to ${e}`);o[n]=i}}}}e.checkForInput=r,e.checkForOutput=o,e.checkHasKey=function(e,t,r){if(e.key[0]<r)throw new Error("Use the method for your specific key instead of addUnknownKeyVal*");if(t&&0!==t.filter(t=>t.key.equals(e.key)).length)throw new Error(`Duplicate Key: ${e.key.toString("hex")}`)},e.getEnumLength=function(e){let t=0;return Object.keys(e).forEach(e=>{Number(isNaN(Number(e)))&&t++}),t},e.inputCheckUncleanFinalized=function(e,t){let r=!1;if(t.nonWitnessUtxo||t.witnessUtxo){const e=!!t.redeemScript,o=!!t.witnessScript,a=!e||!!t.finalScriptSig,n=!o||!!t.finalScriptWitness,i=!!t.finalScriptSig||!!t.finalScriptWitness;r=a&&n&&i}if(!1===r)throw new Error(`Input #${e} has too much or too little data to clean`)},e.updateGlobal=n("global"),e.updateInput=n("input"),e.updateOutput=n("output"),e.addInputAttributes=function(t,o){const a=r(t,t.length-1);e.updateInput(o,a)},e.addOutputAttributes=function(t,r){const a=o(t,t.length-1);e.updateOutput(r,a)},e.defaultVersionSetter=function(e,t){if(!b.isBuffer(t)||t.length<4)throw new Error("Set Version: Invalid Transaction");return t.writeUInt32LE(e,0),t},e.defaultLocktimeSetter=function(e,t){if(!b.isBuffer(t)||t.length<4)throw new Error("Set Locktime: Invalid Transaction");return t.writeUInt32LE(e,t.length-4),t}}(ni),Object.defineProperty(ya,"__esModule",{value:!0});const ii=va,si=wa,ui=Sa,ci=ni;ya.Psbt=class{constructor(e){this.inputs=[],this.outputs=[],this.globalMap={unsignedTx:e}}static fromBase64(e,t){const r=b.from(e,"base64");return this.fromBuffer(r,t)}static fromHex(e,t){const r=b.from(e,"hex");return this.fromBuffer(r,t)}static fromBuffer(e,t){const r=si.psbtFromBuffer(e,t),o=new this(r.globalMap.unsignedTx);return Object.assign(o,r),o}toBase64(){return this.toBuffer().toString("base64")}toHex(){return this.toBuffer().toString("hex")}toBuffer(){return si.psbtToBuffer(this)}updateGlobal(e){return ci.updateGlobal(e,this.globalMap),this}updateInput(e,t){const r=ci.checkForInput(this.inputs,e);return ci.updateInput(t,r),this}updateOutput(e,t){const r=ci.checkForOutput(this.outputs,e);return ci.updateOutput(t,r),this}addUnknownKeyValToGlobal(e){return ci.checkHasKey(e,this.globalMap.unknownKeyVals,ci.getEnumLength(ui.GlobalTypes)),this.globalMap.unknownKeyVals||(this.globalMap.unknownKeyVals=[]),this.globalMap.unknownKeyVals.push(e),this}addUnknownKeyValToInput(e,t){const r=ci.checkForInput(this.inputs,e);return ci.checkHasKey(t,r.unknownKeyVals,ci.getEnumLength(ui.InputTypes)),r.unknownKeyVals||(r.unknownKeyVals=[]),r.unknownKeyVals.push(t),this}addUnknownKeyValToOutput(e,t){const r=ci.checkForOutput(this.outputs,e);return ci.checkHasKey(t,r.unknownKeyVals,ci.getEnumLength(ui.OutputTypes)),r.unknownKeyVals||(r.unknownKeyVals=[]),r.unknownKeyVals.push(t),this}addInput(e){this.globalMap.unsignedTx.addInput(e),this.inputs.push({unknownKeyVals:[]});const t=e.unknownKeyVals||[],r=this.inputs.length-1;if(!Array.isArray(t))throw new Error("unknownKeyVals must be an Array");return t.forEach(e=>this.addUnknownKeyValToInput(r,e)),ci.addInputAttributes(this.inputs,e),this}addOutput(e){this.globalMap.unsignedTx.addOutput(e),this.outputs.push({unknownKeyVals:[]});const t=e.unknownKeyVals||[],r=this.outputs.length-1;if(!Array.isArray(t))throw new Error("unknownKeyVals must be an Array");return t.forEach(e=>this.addUnknownKeyValToOutput(r,e)),ci.addOutputAttributes(this.outputs,e),this}clearFinalizedInput(e){const t=ci.checkForInput(this.inputs,e);ci.inputCheckUncleanFinalized(e,t);for(const r of Object.keys(t))["witnessUtxo","nonWitnessUtxo","finalScriptSig","finalScriptWitness","unknownKeyVals"].includes(r)||delete t[r];return this}combine(...e){const t=ii.combine([this].concat(e));return Object.assign(this,t),this}getTransaction(){return this.globalMap.unsignedTx.toBuffer()}};var li={},pi={};Object.defineProperty(pi,"__esModule",{value:!0}),pi.signatureBlocksAction=pi.checkInputForSig=pi.pubkeyInScript=pi.pubkeyPositionInScript=pi.witnessStackToScriptWitness=pi.isP2TR=pi.isP2SHScript=pi.isP2WSHScript=pi.isP2WPKH=pi.isP2PKH=pi.isP2PK=pi.isP2MS=void 0;const fi=Qa,di=Te(),hi=Vo,mi=We,gi=Co();function bi(e){return t=>{try{return e({output:t}),!0}catch(r){return!1}}}function yi(e,t){const r=(0,mi.hash160)(e),o=e.slice(1,33),a=di.decompile(t);if(null===a)throw new Error("Unknown script error");return a.findIndex(t=>"number"!=typeof t&&(t.equals(e)||t.equals(r)||t.equals(o)))}function vi(e,t,r){const{hashType:o}=t(e),a=[];o&hi.Transaction.SIGHASH_ANYONECANPAY&&a.push("addInput");switch(31&o){case hi.Transaction.SIGHASH_ALL:break;case hi.Transaction.SIGHASH_SINGLE:case hi.Transaction.SIGHASH_NONE:a.push("addOutput"),a.push("setInputSequence")}return-1===a.indexOf(r)}pi.isP2MS=bi(gi.p2ms),pi.isP2PK=bi(gi.p2pk),pi.isP2PKH=bi(gi.p2pkh),pi.isP2WPKH=bi(gi.p2wpkh),pi.isP2WSHScript=bi(gi.p2wsh),pi.isP2SHScript=bi(gi.p2sh),pi.isP2TR=bi(gi.p2tr),pi.witnessStackToScriptWitness=function(e){let t=b.allocUnsafe(0);function r(e){const r=t.length,o=fi.encodingLength(e);t=b.concat([t,b.allocUnsafe(o)]),fi.encode(e,t,r)}function o(e){r(e.length),function(e){t=b.concat([t,b.from(e)])}(e)}var a;return r((a=e).length),a.forEach(o),t},pi.pubkeyPositionInScript=yi,pi.pubkeyInScript=function(e,t){return-1!==yi(e,t)},pi.checkInputForSig=function(e,t){return function(e){let t=[];if(0===(e.partialSig||[]).length){if(!e.finalScriptSig&&!e.finalScriptWitness)return[];t=function(e){const t=e.finalScriptSig&&di.decompile(e.finalScriptSig)||[],r=e.finalScriptWitness&&di.decompile(e.finalScriptWitness)||[];return t.concat(r).filter(e=>b.isBuffer(e)&&di.isCanonicalScriptSignature(e)).map(e=>({signature:e}))}(e)}else t=e.partialSig;return t.map(e=>e.signature)}(e).some(e=>vi(e,di.signature.decode,t))},pi.signatureBlocksAction=vi,Object.defineProperty(li,"__esModule",{value:!0}),li.checkTaprootInputForSigs=li.tapTreeFromList=li.tapTreeToList=li.tweakInternalPubKey=li.checkTaprootOutputFields=li.checkTaprootInputFields=li.isTaprootOutput=li.isTaprootInput=li.serializeTaprootSignature=li.tapScriptFinalizer=li.toXOnly=void 0;const wi=Y,ki=Vo,Ei=pi,Si=ko,_i=Co(),Ii=pi;function Ti(e){return e&&!!(e.tapInternalKey||e.tapMerkleRoot||e.tapLeafScript&&e.tapLeafScript.length||e.tapBip32Derivation&&e.tapBip32Derivation.length||e.witnessUtxo&&(0,Ei.isP2TR)(e.witnessUtxo.script))}function Ai(e,t){return e&&!!(e.tapInternalKey||e.tapTree||e.tapBip32Derivation&&e.tapBip32Derivation.length||t&&(0,Ei.isP2TR)(t))}function zi(e=[]){return 1===e.length&&0===e[0].depth?{output:e[0].script,version:e[0].leafVersion}:function(e){let t;for(const r of e)if(t=Pi(r,t),!t)throw new Error("No room left to insert tapleaf in tree");return t}(e)}function Oi(e){return{signature:e.slice(0,64),hashType:e.slice(64)[0]||ki.Transaction.SIGHASH_DEFAULT}}function xi(e,t=[],r=0){if(r>Si.MAX_TAPTREE_DEPTH)throw new Error("Max taptree depth exceeded.");return e?(0,wi.isTapleaf)(e)?(t.push({depth:r,leafVersion:e.version||Si.LEAF_VERSION_TAPSCRIPT,script:e.output}),t):(e[0]&&xi(e[0],t,r+1),e[1]&&xi(e[1],t,r+1),t):[]}function Pi(e,t,r=0){if(r>Si.MAX_TAPTREE_DEPTH)throw new Error("Max taptree depth exceeded.");if(e.depth===r)return t?void 0:{output:e.script,version:e.leafVersion};if((0,wi.isTapleaf)(t))return;const o=Pi(e,t&&t[0],r+1);if(o)return[o,t&&t[1]];const a=Pi(e,t&&t[1],r+1);return a?[t&&t[0],a]:void 0}function ji(e,t){if(!t)return!0;const r=(0,Si.tapleafHash)({output:e.script,version:e.leafVersion});return(0,Si.rootHashFromPath)(e.controlBlock,r).equals(t)}function Bi(e){return e&&!!(e.redeemScript||e.witnessScript||e.bip32Derivation&&e.bip32Derivation.length)}li.toXOnly=e=>32===e.length?e:e.slice(1,33),li.tapScriptFinalizer=function(e,t,r){const o=function(e,t,r){if(!e.tapScriptSig||!e.tapScriptSig.length)throw new Error(`Can not finalize taproot input #${t}. No tapleaf script signature provided.`);const o=(e.tapLeafScript||[]).sort((e,t)=>e.controlBlock.length-t.controlBlock.length).find(t=>function(e,t,r){const o=(0,Si.tapleafHash)({output:e.script,version:e.leafVersion});return(!r||r.equals(o))&&void 0!==t.find(e=>e.leafHash.equals(o))}(t,e.tapScriptSig,r));if(!o)throw new Error(`Can not finalize taproot input #${t}. Signature for tapleaf script not found.`);return o}(t,e,r);try{const e=function(e,t){const r=(0,Si.tapleafHash)({output:t.script,version:t.leafVersion});return(e.tapScriptSig||[]).filter(e=>e.leafHash.equals(r)).map(e=>function(e,t){return Object.assign({positionInScript:(0,Ei.pubkeyPositionInScript)(t.pubkey,e)},t)}(t.script,e)).sort((e,t)=>t.positionInScript-e.positionInScript).map(e=>e.signature)}(t,o),r=e.concat(o.script).concat(o.controlBlock);return{finalScriptWitness:(0,Ei.witnessStackToScriptWitness)(r)}}catch(a){throw new Error(`Can not finalize taproot input #${e}: ${a}`)}},li.serializeTaprootSignature=function(e,t){const r=t?b.from([t]):b.from([]);return b.concat([e,r])},li.isTaprootInput=Ti,li.isTaprootOutput=Ai,li.checkTaprootInputFields=function(e,t,r){!function(e,t,r){const o=Ti(e)&&Bi(t),a=Bi(e)&&Ti(t),n=e===t&&Ti(t)&&Bi(t);if(o||a||n)throw new Error(`Invalid arguments for Psbt.${r}. Cannot use both taproot and non-taproot fields.`)}(e,t,r),function(e,t,r){if(t.tapMerkleRoot){const o=(t.tapLeafScript||[]).every(e=>ji(e,t.tapMerkleRoot)),a=(e.tapLeafScript||[]).every(e=>ji(e,t.tapMerkleRoot));if(!o||!a)throw new Error(`Invalid arguments for Psbt.${r}. Tapleaf not part of taptree.`)}else if(e.tapMerkleRoot){if(!(t.tapLeafScript||[]).every(t=>ji(t,e.tapMerkleRoot)))throw new Error(`Invalid arguments for Psbt.${r}. Tapleaf not part of taptree.`)}}(e,t,r)},li.checkTaprootOutputFields=function(e,t,r){!function(e,t,r){const o=Ai(e)&&Bi(t),a=Bi(e)&&Ai(t),n=e===t&&Ai(t)&&Bi(t);if(o||a||n)throw new Error(`Invalid arguments for Psbt.${r}. Cannot use both taproot and non-taproot fields.`)}(e,t,r),function(e,t){if(!t.tapTree&&!t.tapInternalKey)return;const r=t.tapInternalKey||e.tapInternalKey,o=t.tapTree||e.tapTree;if(r){const{script:t}=e,a=function(e,t){const r=t&&zi(t.leaves),{output:o}=(0,_i.p2tr)({internalPubkey:e,scriptTree:r});return o}(r,o);if(t&&!t.equals(a))throw new Error("Error adding output. Script or address missmatch.")}}(e,t)},li.tweakInternalPubKey=function(e,t){const r=t.tapInternalKey,o=r&&(0,Si.tweakKey)(r,t.tapMerkleRoot);if(!o)throw new Error(`Cannot tweak tap internal key for input #${e}. Public key: ${r&&r.toString("hex")}`);return o.x},li.tapTreeToList=function(e){if(!(0,wi.isTaptree)(e))throw new Error("Cannot convert taptree to tapleaf list. Expecting a tapree structure.");return xi(e)},li.tapTreeFromList=zi,li.checkTaprootInputForSigs=function(e,t){return function(e){const t=[];e.tapKeySig&&t.push(e.tapKeySig);e.tapScriptSig&&t.push(...e.tapScriptSig.map(e=>e.signature));if(!t.length){const r=function(e){if(!e)return;const t=e.slice(2);if(64===t.length||65===t.length)return t}(e.finalScriptWitness);r&&t.push(r)}return t}(e).some(e=>(0,Ii.signatureBlocksAction)(e,Oi,t))},Object.defineProperty(ba,"__esModule",{value:!0}),ba.Psbt=void 0;const Hi=ya,Ui=Qa,Ni=ni,Li=Ro(),Ci=Eo,Ri=L,qi=Co(),Mi=ko,Vi=Te(),Di=Vo,Fi=li,Ki=pi,Gi={network:Ri.bitcoin,maximumFeeRate:5e3};class Wi{static fromBase64(e,t={}){const r=b.from(e,"base64");return this.fromBuffer(r,t)}static fromHex(e,t={}){const r=b.from(e,"hex");return this.fromBuffer(r,t)}static fromBuffer(e,t={}){const r=Hi.Psbt.fromBuffer(e,Xi),o=new Wi(t,r);var a,n;return a=o.__CACHE.__TX,n=o.__CACHE,a.ins.forEach(e=>{os(n,e)}),o}constructor(e={},t=new Hi.Psbt(new $i)){this.data=t,this.opts=Object.assign({},Gi,e),this.__CACHE={__NON_WITNESS_UTXO_TX_CACHE:[],__NON_WITNESS_UTXO_BUF_CACHE:[],__TX_IN_CACHE:{},__TX:this.data.globalMap.unsignedTx.tx,__UNSAFE_SIGN_NONSEGWIT:!1},0===this.data.inputs.length&&this.setVersion(2);const r=(e,t,r,o)=>Object.defineProperty(e,t,{enumerable:r,writable:o});r(this,"__CACHE",!1,!0),r(this,"opts",!1,!0)}get inputCount(){return this.data.inputs.length}get version(){return this.__CACHE.__TX.version}set version(e){this.setVersion(e)}get locktime(){return this.__CACHE.__TX.locktime}set locktime(e){this.setLocktime(e)}get txInputs(){return this.__CACHE.__TX.ins.map(e=>({hash:(0,Ci.cloneBuffer)(e.hash),index:e.index,sequence:e.sequence}))}get txOutputs(){return this.__CACHE.__TX.outs.map(e=>{let t;try{t=(0,Li.fromOutputScript)(e.script,this.opts.network)}catch(r){}return{script:(0,Ci.cloneBuffer)(e.script),value:e.value,address:t}})}combine(...e){return this.data.combine(...e.map(e=>e.data)),this}clone(){const e=Wi.fromBuffer(this.data.toBuffer());return e.opts=JSON.parse(JSON.stringify(this.opts)),e}setMaximumFeeRate(e){es(e),this.opts.maximumFeeRate=e}setVersion(e){es(e),ts(this.data.inputs,"setVersion");const t=this.__CACHE;return t.__TX.version=e,t.__EXTRACTED_TX=void 0,this}setLocktime(e){es(e),ts(this.data.inputs,"setLocktime");const t=this.__CACHE;return t.__TX.locktime=e,t.__EXTRACTED_TX=void 0,this}setInputSequence(e,t){es(t),ts(this.data.inputs,"setInputSequence");const r=this.__CACHE;if(r.__TX.ins.length<=e)throw new Error("Input index too high");return r.__TX.ins[e].sequence=t,r.__EXTRACTED_TX=void 0,this}addInputs(e){return e.forEach(e=>this.addInput(e)),this}addInput(e){if(arguments.length>1||!e||void 0===e.hash||void 0===e.index)throw new Error("Invalid arguments for Psbt.addInput. Requires single object with at least [hash] and [index]");(0,Fi.checkTaprootInputFields)(e,e,"addInput"),ts(this.data.inputs,"addInput"),e.witnessScript&&_s(e.witnessScript);const t=this.__CACHE;this.data.addInput(e);os(t,t.__TX.ins[t.__TX.ins.length-1]);const r=this.data.inputs.length-1,o=this.data.inputs[r];return o.nonWitnessUtxo&&bs(this.__CACHE,o,r),t.__FEE=void 0,t.__FEE_RATE=void 0,t.__EXTRACTED_TX=void 0,this}addOutputs(e){return e.forEach(e=>this.addOutput(e)),this}addOutput(e){if(arguments.length>1||!e||void 0===e.value||void 0===e.address&&void 0===e.script)throw new Error("Invalid arguments for Psbt.addOutput. Requires single object with at least [script or address] and [value]");ts(this.data.inputs,"addOutput");const{address:t}=e;if("string"==typeof t){const{network:r}=this.opts,o=(0,Li.toOutputScript)(t,r);e=Object.assign({},e,{script:o})}(0,Fi.checkTaprootOutputFields)(e,e,"addOutput");const r=this.__CACHE;return this.data.addOutput(e),r.__FEE=void 0,r.__FEE_RATE=void 0,r.__EXTRACTED_TX=void 0,this}extractTransaction(e){if(!this.data.inputs.every(Qi))throw new Error("Not finalized");const t=this.__CACHE;if(e||function(e,t,r){const o=t.__FEE_RATE||e.getFeeRate(),a=t.__EXTRACTED_TX.virtualSize(),n=o*a;if(o>=r.maximumFeeRate)throw new Error(`Warning: You are paying around ${(n/1e8).toFixed(8)} in fees, which is ${o} satoshi per byte for a transaction with a VSize of ${a} bytes (segwit counted as 0.25 byte per byte). Use setMaximumFeeRate method to raise your threshold, or pass true to the first arg of extractTransaction.`)}(this,t,this.opts),t.__EXTRACTED_TX)return t.__EXTRACTED_TX;const r=t.__TX.clone();return ys(this.data.inputs,r,t,!0),r}getFeeRate(){return ss("__FEE_RATE","fee rate",this.data.inputs,this.__CACHE)}getFee(){return ss("__FEE","fee",this.data.inputs,this.__CACHE)}finalizeAllInputs(){return(0,Ni.checkForInput)(this.data.inputs,0),Ts(this.data.inputs.length).forEach(e=>this.finalizeInput(e)),this}finalizeInput(e,t){const r=(0,Ni.checkForInput)(this.data.inputs,e);return(0,Fi.isTaprootInput)(r)?this._finalizeTaprootInput(e,r,void 0,t):this._finalizeInput(e,r,t)}finalizeTaprootInput(e,t,r=Fi.tapScriptFinalizer){const o=(0,Ni.checkForInput)(this.data.inputs,e);if((0,Fi.isTaprootInput)(o))return this._finalizeTaprootInput(e,o,t,r);throw new Error(`Cannot finalize input #${e}. Not Taproot.`)}_finalizeInput(e,t,r=us){const{script:o,isP2SH:a,isP2WSH:n,isSegwit:i}=function(e,t,r){const o=r.__TX,a={script:null,isSegwit:!1,isP2SH:!1,isP2WSH:!1};if(a.isP2SH=!!t.redeemScript,a.isP2WSH=!!t.witnessScript,t.witnessScript)a.script=t.witnessScript;else if(t.redeemScript)a.script=t.redeemScript;else if(t.nonWitnessUtxo){const n=vs(r,t,e),i=o.ins[e].index;a.script=n.outs[i].script}else t.witnessUtxo&&(a.script=t.witnessUtxo.script);(t.witnessScript||(0,Ki.isP2WPKH)(a.script))&&(a.isSegwit=!0);return a}(e,t,this.__CACHE);if(!o)throw new Error(`No script found for input #${e}`);!function(e){if(!e.sighashType||!e.partialSig)return;const{partialSig:t,sighashType:r}=e;t.forEach(e=>{const{hashType:t}=Vi.signature.decode(e.signature);if(r!==t)throw new Error("Signature sighash does not match input sighash type")})}(t);const{finalScriptSig:s,finalScriptWitness:u}=r(e,t,o,i,a,n);if(s&&this.data.updateInput(e,{finalScriptSig:s}),u&&this.data.updateInput(e,{finalScriptWitness:u}),!s&&!u)throw new Error(`Unknown error finalizing input #${e}`);return this.data.clearFinalizedInput(e),this}_finalizeTaprootInput(e,t,r,o=Fi.tapScriptFinalizer){if(!t.witnessUtxo)throw new Error(`Cannot finalize input #${e}. Missing withness utxo.`);if(t.tapKeySig){const r=qi.p2tr({output:t.witnessUtxo.script,signature:t.tapKeySig}),o=(0,Ki.witnessStackToScriptWitness)(r.witness);this.data.updateInput(e,{finalScriptWitness:o})}else{const{finalScriptWitness:a}=o(e,t,r);this.data.updateInput(e,{finalScriptWitness:a})}return this.data.clearFinalizedInput(e),this}getInputType(e){const t=(0,Ni.checkForInput)(this.data.inputs,e),r=Ss(ws(e,t,this.__CACHE),e,"input",t.redeemScript||function(e){if(!e)return;const t=Vi.decompile(e);if(!t)return;const r=t[t.length-1];if(!b.isBuffer(r)||Es(r)||(o=r,Vi.isCanonicalScriptSignature(o)))return;var o;if(!Vi.decompile(r))return;return r}(t.finalScriptSig),t.witnessScript||function(e){if(!e)return;const t=gs(e),r=t[t.length-1];if(Es(r))return;if(!Vi.decompile(r))return;return r}(t.finalScriptWitness));return("raw"===r.type?"":r.type+"-")+Is(r.meaningfulScript)}inputHasPubkey(e,t){return function(e,t,r,o){const a=ws(r,t,o),{meaningfulScript:n}=Ss(a,r,"input",t.redeemScript,t.witnessScript);return(0,Ki.pubkeyInScript)(e,n)}(t,(0,Ni.checkForInput)(this.data.inputs,e),e,this.__CACHE)}inputHasHDKey(e,t){const r=(0,Ni.checkForInput)(this.data.inputs,e),o=Zi(t);return!!r.bip32Derivation&&r.bip32Derivation.some(o)}outputHasPubkey(e,t){return function(e,t,r,o){const a=o.__TX.outs[r].script,{meaningfulScript:n}=Ss(a,r,"output",t.redeemScript,t.witnessScript);return(0,Ki.pubkeyInScript)(e,n)}(t,(0,Ni.checkForOutput)(this.data.outputs,e),e,this.__CACHE)}outputHasHDKey(e,t){const r=(0,Ni.checkForOutput)(this.data.outputs,e),o=Zi(t);return!!r.bip32Derivation&&r.bip32Derivation.some(o)}validateSignaturesOfAllInputs(e){(0,Ni.checkForInput)(this.data.inputs,0);return Ts(this.data.inputs.length).map(t=>this.validateSignaturesOfInput(t,e)).reduce((e,t)=>!0===t&&e,!0)}validateSignaturesOfInput(e,t,r){const o=this.data.inputs[e];return(0,Fi.isTaprootInput)(o)?this.validateSignaturesOfTaprootInput(e,t,r):this._validateSignaturesOfInput(e,t,r)}_validateSignaturesOfInput(e,t,r){const o=this.data.inputs[e],a=(o||{}).partialSig;if(!o||!a||a.length<1)throw new Error("No signatures to validate");if("function"!=typeof t)throw new Error("Need validator function to validate signatures");const n=r?a.filter(e=>e.pubkey.equals(r)):a;if(n.length<1)throw new Error("No signatures for this pubkey");const i=[];let s,u,c;for(const l of n){const r=Vi.signature.decode(l.signature),{hash:a,script:n}=c!==r.hashType?ls(e,Object.assign({},o,{sighashType:r.hashType}),this.__CACHE,!0):{hash:s,script:u};c=r.hashType,s=a,u=n,rs(l.pubkey,n,"verify"),i.push(t(l.pubkey,a,r.signature))}return i.every(e=>!0===e)}validateSignaturesOfTaprootInput(e,t,r){const o=this.data.inputs[e],a=(o||{}).tapKeySig,n=(o||{}).tapScriptSig;if(!o&&!a&&(!n||n.length))throw new Error("No signatures to validate");if("function"!=typeof t)throw new Error("Need validator function to validate signatures");const i=(r=r&&(0,Fi.toXOnly)(r))?ds(e,o,this.data.inputs,r,this.__CACHE):function(e,t,r,o){const a=[];if(t.tapInternalKey){const r=ps(e,t,o);r&&a.push(r)}if(t.tapScriptSig){const e=t.tapScriptSig.map(e=>e.pubkey);a.push(...e)}const n=a.map(a=>ds(e,t,r,a,o));return n.flat()}(e,o,this.data.inputs,this.__CACHE);if(!i.length)throw new Error("No signatures for this pubkey");const s=i.find(e=>!e.leafHash);let u=0;if(a&&s){if(!t(s.pubkey,s.hash,fs(a)))return!1;u++}if(n)for(const c of n){const e=i.find(e=>c.pubkey.equals(e.pubkey));if(e){if(!t(c.pubkey,e.hash,fs(c.signature)))return!1;u++}}return u>0}signAllInputsHD(e,t=[Di.Transaction.SIGHASH_ALL]){if(!e||!e.publicKey||!e.fingerprint)throw new Error("Need HDSigner to sign input");const r=[];for(const a of Ts(this.data.inputs.length))try{this.signInputHD(a,e,t),r.push(!0)}catch(o){r.push(!1)}if(r.every(e=>!1===e))throw new Error("No inputs were signed");return this}signAllInputsHDAsync(e,t=[Di.Transaction.SIGHASH_ALL]){return new Promise((r,o)=>{if(!e||!e.publicKey||!e.fingerprint)return o(new Error("Need HDSigner to sign input"));const a=[],n=[];for(const i of Ts(this.data.inputs.length))n.push(this.signInputHDAsync(i,e,t).then(()=>{a.push(!0)},()=>{a.push(!1)}));return Promise.all(n).then(()=>{if(a.every(e=>!1===e))return o(new Error("No inputs were signed"));r()})})}signInputHD(e,t,r=[Di.Transaction.SIGHASH_ALL]){if(!t||!t.publicKey||!t.fingerprint)throw new Error("Need HDSigner to sign input");return ms(e,this.data.inputs,t).forEach(t=>this.signInput(e,t,r)),this}signInputHDAsync(e,t,r=[Di.Transaction.SIGHASH_ALL]){return new Promise((o,a)=>{if(!t||!t.publicKey||!t.fingerprint)return a(new Error("Need HDSigner to sign input"));const n=ms(e,this.data.inputs,t).map(t=>this.signInputAsync(e,t,r));return Promise.all(n).then(()=>{o()}).catch(a)})}signAllInputs(e,t){if(!e||!e.publicKey)throw new Error("Need Signer to sign input");const r=[];for(const a of Ts(this.data.inputs.length))try{this.signInput(a,e,t),r.push(!0)}catch(o){r.push(!1)}if(r.every(e=>!1===e))throw new Error("No inputs were signed");return this}signAllInputsAsync(e,t){return new Promise((r,o)=>{if(!e||!e.publicKey)return o(new Error("Need Signer to sign input"));const a=[],n=[];for(const[i]of this.data.inputs.entries())n.push(this.signInputAsync(i,e,t).then(()=>{a.push(!0)},()=>{a.push(!1)}));return Promise.all(n).then(()=>{if(a.every(e=>!1===e))return o(new Error("No inputs were signed"));r()})})}signInput(e,t,r){if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const o=(0,Ni.checkForInput)(this.data.inputs,e);return(0,Fi.isTaprootInput)(o)?this._signTaprootInput(e,o,t,void 0,r):this._signInput(e,t,r)}signTaprootInput(e,t,r,o){if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const a=(0,Ni.checkForInput)(this.data.inputs,e);if((0,Fi.isTaprootInput)(a))return this._signTaprootInput(e,a,t,r,o);throw new Error(`Input #${e} is not of type Taproot.`)}_signInput(e,t,r=[Di.Transaction.SIGHASH_ALL]){const{hash:o,sighashType:a}=cs(this.data.inputs,e,t.publicKey,this.__CACHE,r),n=[{pubkey:t.publicKey,signature:Vi.signature.encode(t.sign(o),a)}];return this.data.updateInput(e,{partialSig:n}),this}_signTaprootInput(e,t,r,o,a=[Di.Transaction.SIGHASH_DEFAULT]){const n=this.checkTaprootHashesForSig(e,t,r,o,a),i=n.filter(e=>!e.leafHash).map(e=>(0,Fi.serializeTaprootSignature)(r.signSchnorr(e.hash),t.sighashType))[0],s=n.filter(e=>!!e.leafHash).map(e=>({pubkey:(0,Fi.toXOnly)(r.publicKey),signature:(0,Fi.serializeTaprootSignature)(r.signSchnorr(e.hash),t.sighashType),leafHash:e.leafHash}));return i&&this.data.updateInput(e,{tapKeySig:i}),s.length&&this.data.updateInput(e,{tapScriptSig:s}),this}signInputAsync(e,t,r){return Promise.resolve().then(()=>{if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const o=(0,Ni.checkForInput)(this.data.inputs,e);return(0,Fi.isTaprootInput)(o)?this._signTaprootInputAsync(e,o,t,void 0,r):this._signInputAsync(e,t,r)})}signTaprootInputAsync(e,t,r,o){return Promise.resolve().then(()=>{if(!t||!t.publicKey)throw new Error("Need Signer to sign input");const a=(0,Ni.checkForInput)(this.data.inputs,e);if((0,Fi.isTaprootInput)(a))return this._signTaprootInputAsync(e,a,t,r,o);throw new Error(`Input #${e} is not of type Taproot.`)})}_signInputAsync(e,t,r=[Di.Transaction.SIGHASH_ALL]){const{hash:o,sighashType:a}=cs(this.data.inputs,e,t.publicKey,this.__CACHE,r);return Promise.resolve(t.sign(o)).then(r=>{const o=[{pubkey:t.publicKey,signature:Vi.signature.encode(r,a)}];this.data.updateInput(e,{partialSig:o})})}async _signTaprootInputAsync(e,t,r,o,a=[Di.Transaction.SIGHASH_DEFAULT]){const n=this.checkTaprootHashesForSig(e,t,r,o,a),i=[],s=n.filter(e=>!e.leafHash)[0];if(s){const e=Promise.resolve(r.signSchnorr(s.hash)).then(e=>({tapKeySig:(0,Fi.serializeTaprootSignature)(e,t.sighashType)}));i.push(e)}const u=n.filter(e=>!!e.leafHash);if(u.length){const e=u.map(e=>Promise.resolve(r.signSchnorr(e.hash)).then(o=>({tapScriptSig:[{pubkey:(0,Fi.toXOnly)(r.publicKey),signature:(0,Fi.serializeTaprootSignature)(o,t.sighashType),leafHash:e.leafHash}]})));i.push(...e)}return Promise.all(i).then(t=>{t.forEach(t=>this.data.updateInput(e,t))})}checkTaprootHashesForSig(e,t,r,o,a){if("function"!=typeof r.signSchnorr)throw new Error(`Need Schnorr Signer to sign taproot input #${e}.`);const n=ds(e,t,this.data.inputs,r.publicKey,this.__CACHE,o,a);if(!n||!n.length)throw new Error(`Can not sign for input #${e} with the key ${r.publicKey.toString("hex")}`);return n}toBuffer(){return Yi(this.__CACHE),this.data.toBuffer()}toHex(){return Yi(this.__CACHE),this.data.toHex()}toBase64(){return Yi(this.__CACHE),this.data.toBase64()}updateGlobal(e){return this.data.updateGlobal(e),this}updateInput(e,t){return t.witnessScript&&_s(t.witnessScript),(0,Fi.checkTaprootInputFields)(this.data.inputs[e],t,"updateInput"),this.data.updateInput(e,t),t.nonWitnessUtxo&&bs(this.__CACHE,this.data.inputs[e],e),this}updateOutput(e,t){const r=this.data.outputs[e];return(0,Fi.checkTaprootOutputFields)(r,t,"updateOutput"),this.data.updateOutput(e,t),this}addUnknownKeyValToGlobal(e){return this.data.addUnknownKeyValToGlobal(e),this}addUnknownKeyValToInput(e,t){return this.data.addUnknownKeyValToInput(e,t),this}addUnknownKeyValToOutput(e,t){return this.data.addUnknownKeyValToOutput(e,t),this}clearFinalizedInput(e){return this.data.clearFinalizedInput(e),this}}ba.Psbt=Wi;const Xi=e=>new $i(e);class $i{constructor(e=b.from([2,0,0,0,0,0,0,0,0,0])){this.tx=Di.Transaction.fromBuffer(e),function(e){if(!e.ins.every(e=>e.script&&0===e.script.length&&e.witness&&0===e.witness.length))throw new Error("Format Error: Transaction ScriptSigs are not empty")}(this.tx),Object.defineProperty(this,"tx",{enumerable:!1,writable:!0})}getInputOutputCounts(){return{inputCount:this.tx.ins.length,outputCount:this.tx.outs.length}}addInput(e){if(void 0===e.hash||void 0===e.index||!b.isBuffer(e.hash)&&"string"!=typeof e.hash||"number"!=typeof e.index)throw new Error("Error adding input.");const t="string"==typeof e.hash?(0,Ci.reverseBuffer)(b.from(e.hash,"hex")):e.hash;this.tx.addInput(t,e.index,e.sequence)}addOutput(e){if(void 0===e.script||void 0===e.value||!b.isBuffer(e.script)||"number"!=typeof e.value)throw new Error("Error adding output.");this.tx.addOutput(e.script,e.value)}toBuffer(){return this.tx.toBuffer()}}function Yi(e){if(!1!==e.__UNSAFE_SIGN_NONSEGWIT)throw new Error("Not BIP174 compliant, can not export")}function Ji(e,t,r){if(!t)return!1;let o;if(o=r?r.map(e=>{const r=function(e){if(65===e.length){const t=1&e[64],r=e.slice(0,33);return r[0]=2|t,r}return e.slice()}(e);return t.find(e=>e.pubkey.equals(r))}).filter(e=>!!e):t,o.length>e)throw new Error("Too many signatures");return o.length===e}function Qi(e){return!!e.finalScriptSig||!!e.finalScriptWitness}function Zi(e){return t=>!!t.masterFingerprint.equals(e.fingerprint)&&!!e.derivePath(t.path).publicKey.equals(t.pubkey)}function es(e){if("number"!=typeof e||e!==Math.floor(e)||e>4294967295||e<0)throw new Error("Invalid 32 bit integer")}function ts(e,t){e.forEach(e=>{if((0,Fi.isTaprootInput)(e)?(0,Fi.checkTaprootInputForSigs)(e,t):(0,Ki.checkInputForSig)(e,t))throw new Error("Can not modify transaction, signatures exist.")})}function rs(e,t,r){if(!(0,Ki.pubkeyInScript)(e,t))throw new Error(`Can not ${r} for this input with the key ${e.toString("hex")}`)}function os(e,t){const r=(0,Ci.reverseBuffer)(b.from(t.hash)).toString("hex")+":"+t.index;if(e.__TX_IN_CACHE[r])throw new Error("Duplicate input detected.");e.__TX_IN_CACHE[r]=1}function as(e,t){return(r,o,a,n)=>{const i=e({redeem:{output:a}}).output;if(!o.equals(i))throw new Error(`${t} for ${n} #${r} doesn't match the scriptPubKey in the prevout`)}}const ns=as(qi.p2sh,"Redeem script"),is=as(qi.p2wsh,"Witness script");function ss(e,t,r,o){if(!r.every(Qi))throw new Error(`PSBT must be finalized to calculate ${t}`);if("__FEE_RATE"===e&&o.__FEE_RATE)return o.__FEE_RATE;if("__FEE"===e&&o.__FEE)return o.__FEE;let a,n=!0;return o.__EXTRACTED_TX?(a=o.__EXTRACTED_TX,n=!1):a=o.__TX.clone(),ys(r,a,o,n),"__FEE_RATE"===e?o.__FEE_RATE:"__FEE"===e?o.__FEE:void 0}function us(e,t,r,o,a,n){const i=Is(r);if(!function(e,t,r){switch(r){case"pubkey":case"pubkeyhash":case"witnesspubkeyhash":return Ji(1,e.partialSig);case"multisig":const r=qi.p2ms({output:t});return Ji(r.m,e.partialSig,r.pubkeys);default:return!1}}(t,r,i))throw new Error(`Can not finalize input #${e}`);return function(e,t,r,o,a,n){let i,s;const u=function(e,t,r){let o;switch(t){case"multisig":const t=function(e,t){const r=qi.p2ms({output:e});return r.pubkeys.map(e=>(t.filter(t=>t.pubkey.equals(e))[0]||{}).signature).filter(e=>!!e)}(e,r);o=qi.p2ms({output:e,signatures:t});break;case"pubkey":o=qi.p2pk({output:e,signature:r[0].signature});break;case"pubkeyhash":o=qi.p2pkh({output:e,pubkey:r[0].pubkey,signature:r[0].signature});break;case"witnesspubkeyhash":o=qi.p2wpkh({output:e,pubkey:r[0].pubkey,signature:r[0].signature})}return o}(e,t,r),c=n?qi.p2wsh({redeem:u}):null,l=a?qi.p2sh({redeem:c||u}):null;o?(s=c?(0,Ki.witnessStackToScriptWitness)(c.witness):(0,Ki.witnessStackToScriptWitness)(u.witness),l&&(i=l.input)):i=l?l.input:u.input;return{finalScriptSig:i,finalScriptWitness:s}}(r,i,t.partialSig,o,a,n)}function cs(e,t,r,o,a){const n=(0,Ni.checkForInput)(e,t),{hash:i,sighashType:s,script:u}=ls(t,n,o,!1,a);return rs(r,u,"sign"),{hash:i,sighashType:s}}function ls(e,t,r,o,a){const n=r.__TX,i=t.sighashType||Di.Transaction.SIGHASH_ALL;let s,u;if(hs(i,a),t.nonWitnessUtxo){const o=vs(r,t,e),a=n.ins[e].hash,i=o.getHash();if(!a.equals(i))throw new Error(`Non-witness UTXO hash for input #${e} doesn't match the hash specified in the prevout`);const s=n.ins[e].index;u=o.outs[s]}else{if(!t.witnessUtxo)throw new Error("Need a Utxo input item for signing");u=t.witnessUtxo}const{meaningfulScript:c,type:l}=Ss(u.script,e,"input",t.redeemScript,t.witnessScript);if(["p2sh-p2wsh","p2wsh"].indexOf(l)>=0)s=n.hashForWitnessV0(e,c,u.value,i);else if((0,Ki.isP2WPKH)(c)){const t=qi.p2pkh({hash:c.slice(2)}).output;s=n.hashForWitnessV0(e,t,u.value,i)}else{if(void 0===t.nonWitnessUtxo&&!1===r.__UNSAFE_SIGN_NONSEGWIT)throw new Error(`Input #${e} has witnessUtxo but non-segwit script: ${c.toString("hex")}`);!o&&r.__UNSAFE_SIGN_NONSEGWIT,s=n.hashForSignature(e,c,i)}return{script:c,sighashType:i,hash:s}}function ps(e,t,r){const{script:o}=ks(e,t,r);return(0,Ki.isP2TR)(o)?o.subarray(2,34):null}function fs(e){return 64===e.length?e:e.subarray(0,64)}function ds(e,t,r,o,a,n,i){const s=a.__TX,u=t.sighashType||Di.Transaction.SIGHASH_DEFAULT;hs(u,i);const c=r.map((e,t)=>ks(t,e,a)),l=c.map(e=>e.script),p=c.map(e=>e.value),f=[];if(t.tapInternalKey&&!n){const r=ps(e,t,a)||b.from([]);if((0,Fi.toXOnly)(o).equals(r)){const t=s.hashForWitnessV1(e,l,p,u);f.push({pubkey:o,hash:t})}}const d=(t.tapLeafScript||[]).filter(e=>(0,Ki.pubkeyInScript)(o,e.script)).map(e=>{const t=(0,Mi.tapleafHash)({output:e.script,version:e.leafVersion});return Object.assign({hash:t},e)}).filter(e=>!n||n.equals(e.hash)).map(t=>{const r=s.hashForWitnessV1(e,l,p,u,t.hash);return{pubkey:o,hash:r,leafHash:t.hash}});return f.concat(d)}function hs(e,t){if(t&&t.indexOf(e)<0){const t=function(e){let t=e&Di.Transaction.SIGHASH_ANYONECANPAY?"SIGHASH_ANYONECANPAY | ":"";switch(31&e){case Di.Transaction.SIGHASH_ALL:t+="SIGHASH_ALL";break;case Di.Transaction.SIGHASH_SINGLE:t+="SIGHASH_SINGLE";break;case Di.Transaction.SIGHASH_NONE:t+="SIGHASH_NONE"}return t}(e);throw new Error(`Sighash type is not allowed. Retry the sign method passing the sighashTypes array of whitelisted types. Sighash type: ${t}`)}}function ms(e,t,r){const o=(0,Ni.checkForInput)(t,e);if(!o.bip32Derivation||0===o.bip32Derivation.length)throw new Error("Need bip32Derivation to sign with HD");const a=o.bip32Derivation.map(e=>e.masterFingerprint.equals(r.fingerprint)?e:void 0).filter(e=>!!e);if(0===a.length)throw new Error("Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint");return a.map(e=>{const t=r.derivePath(e.path);if(!e.pubkey.equals(t.publicKey))throw new Error("pubkey did not match bip32Derivation");return t})}function gs(e){let t=0;function r(){const r=Ui.decode(e,t);return t+=Ui.decode.bytes,r}function o(){return o=r(),t+=o,e.slice(t-o,t);var o}return function(){const e=r(),t=[];for(let r=0;r<e;r++)t.push(o());return t}()}function bs(e,t,r){e.__NON_WITNESS_UTXO_BUF_CACHE[r]=t.nonWitnessUtxo;const o=Di.Transaction.fromBuffer(t.nonWitnessUtxo);e.__NON_WITNESS_UTXO_TX_CACHE[r]=o;const a=e,n=r;delete t.nonWitnessUtxo,Object.defineProperty(t,"nonWitnessUtxo",{enumerable:!0,get(){const e=a.__NON_WITNESS_UTXO_BUF_CACHE[n],t=a.__NON_WITNESS_UTXO_TX_CACHE[n];if(void 0!==e)return e;{const e=t.toBuffer();return a.__NON_WITNESS_UTXO_BUF_CACHE[n]=e,e}},set(e){a.__NON_WITNESS_UTXO_BUF_CACHE[n]=e}})}function ys(e,t,r,o){let a=0;e.forEach((e,n)=>{if(o&&e.finalScriptSig&&(t.ins[n].script=e.finalScriptSig),o&&e.finalScriptWitness&&(t.ins[n].witness=gs(e.finalScriptWitness)),e.witnessUtxo)a+=e.witnessUtxo.value;else if(e.nonWitnessUtxo){const o=vs(r,e,n),i=t.ins[n].index,s=o.outs[i];a+=s.value}});const n=t.outs.reduce((e,t)=>e+t.value,0),i=a-n;if(i<0)throw new Error("Outputs are spending more than Inputs");const s=t.virtualSize();r.__FEE=i,r.__EXTRACTED_TX=t,r.__FEE_RATE=Math.floor(i/s)}function vs(e,t,r){const o=e.__NON_WITNESS_UTXO_TX_CACHE;return o[r]||bs(e,t,r),o[r]}function ws(e,t,r){const{script:o}=ks(e,t,r);return o}function ks(e,t,r){if(void 0!==t.witnessUtxo)return{script:t.witnessUtxo.script,value:t.witnessUtxo.value};if(void 0!==t.nonWitnessUtxo){const o=vs(r,t,e).outs[r.__TX.ins[e].index];return{script:o.script,value:o.value}}throw new Error("Can't find pubkey in input without Utxo data")}function Es(e){return 33===e.length&&Vi.isCanonicalPubKey(e)}function Ss(e,t,r,o,a){const n=(0,Ki.isP2SHScript)(e),i=n&&o&&(0,Ki.isP2WSHScript)(o),s=(0,Ki.isP2WSHScript)(e);if(n&&void 0===o)throw new Error("scriptPubkey is P2SH but redeemScript missing");if((s||i)&&void 0===a)throw new Error("scriptPubkey or redeemScript is P2WSH but witnessScript missing");let u;return i?(u=a,ns(t,e,o,r),is(t,o,a,r),_s(u)):s?(u=a,is(t,e,a,r),_s(u)):n?(u=o,ns(t,e,o,r)):u=e,{meaningfulScript:u,type:i?"p2sh-p2wsh":n?"p2sh":s?"p2wsh":"raw"}}function _s(e){if((0,Ki.isP2WPKH)(e)||(0,Ki.isP2SHScript)(e))throw new Error("P2WPKH or P2SH can not be contained within P2WSH")}function Is(e){return(0,Ki.isP2WPKH)(e)?"witnesspubkeyhash":(0,Ki.isP2PKH)(e)?"pubkeyhash":(0,Ki.isP2MS)(e)?"multisig":(0,Ki.isP2PK)(e)?"pubkey":"nonstandard"}function Ts(e){return[...Array(e).keys()]}!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.initEccLib=e.Transaction=e.opcodes=e.Psbt=e.Block=e.script=e.payments=e.networks=e.crypto=e.address=void 0;const t=Ro();e.address=t;const r=We;e.crypto=r;const o=L;e.networks=o;const a=Co();e.payments=a;const n=Te();e.script=n;var i=qo;Object.defineProperty(e,"Block",{enumerable:!0,get:function(){return i.Block}});var s=ba;Object.defineProperty(e,"Psbt",{enumerable:!0,get:function(){return s.Psbt}});var u=V;Object.defineProperty(e,"opcodes",{enumerable:!0,get:function(){return u.OPS}});var c=Vo;Object.defineProperty(e,"Transaction",{enumerable:!0,get:function(){return c.Transaction}});var l=go;Object.defineProperty(e,"initEccLib",{enumerable:!0,get:function(){return l.initEccLib}})}(n);const As=r({__proto__:null,default:o(n)},[n]);var zs={},Os={};Object.defineProperty(Os,"__esModule",{value:!0}),Os.sha512_256=Os.SHA512_256=Os.sha512_224=Os.SHA512_224=Os.sha384=Os.SHA384=Os.sha512=Os.SHA512=void 0;const xs=Ot;Os.SHA512=xs.SHA512,Os.sha512=xs.sha512,Os.SHA384=xs.SHA384,Os.sha384=xs.sha384,Os.SHA512_224=xs.SHA512_224,Os.sha512_224=xs.sha512_224,Os.SHA512_256=xs.SHA512_256,Os.sha512_256=xs.sha512_256;var Ps={},js={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.hmac=e.HMAC=void 0;const t=Je;class r extends t.Hash{constructor(e,r){super(),this.finished=!1,this.destroyed=!1,(0,t.ahash)(e);const o=(0,t.toBytes)(r);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const a=this.blockLen,n=new Uint8Array(a);n.set(o.length>a?e.create().update(o).digest():o);for(let t=0;t<n.length;t++)n[t]^=54;this.iHash.update(n),this.oHash=e.create();for(let t=0;t<n.length;t++)n[t]^=106;this.oHash.update(n),(0,t.clean)(n)}update(e){return(0,t.aexists)(this),this.iHash.update(e),this}digestInto(e){(0,t.aexists)(this),(0,t.abytes)(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:o,destroyed:a,blockLen:n,outputLen:i}=this;return e.finished=o,e.destroyed=a,e.blockLen=n,e.outputLen=i,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}e.HMAC=r;e.hmac=(e,t,o)=>new r(e,t).update(o).digest(),e.hmac.create=(e,t)=>new r(e,t)}(js),Object.defineProperty(Ps,"__esModule",{value:!0}),Ps.pbkdf2=function(e,t,r,o){const{c:a,dkLen:n,DK:i,PRF:s,PRFSalt:u}=Us(e,t,r,o);let c;const l=new Uint8Array(4),p=(0,Hs.createView)(l),f=new Uint8Array(s.outputLen);for(let d=1,h=0;h<n;d++,h+=s.outputLen){const e=i.subarray(h,h+s.outputLen);p.setInt32(0,d,!1),(c=u._cloneInto(c)).update(l).digestInto(f),e.set(f.subarray(0,e.length));for(let t=1;t<a;t++){s._cloneInto(c).update(f).digestInto(f);for(let t=0;t<e.length;t++)e[t]^=f[t]}}return Ns(s,u,i,c,f)},Ps.pbkdf2Async=async function(e,t,r,o){const{c:a,dkLen:n,asyncTick:i,DK:s,PRF:u,PRFSalt:c}=Us(e,t,r,o);let l;const p=new Uint8Array(4),f=(0,Hs.createView)(p),d=new Uint8Array(u.outputLen);for(let h=1,m=0;m<n;h++,m+=u.outputLen){const e=s.subarray(m,m+u.outputLen);f.setInt32(0,h,!1),(l=c._cloneInto(l)).update(p).digestInto(d),e.set(d.subarray(0,e.length)),await(0,Hs.asyncLoop)(a-1,i,()=>{u._cloneInto(l).update(d).digestInto(d);for(let t=0;t<e.length;t++)e[t]^=d[t]})}return Ns(u,c,s,l,d)};const Bs=js,Hs=Je;function Us(e,t,r,o){(0,Hs.ahash)(e);const a=(0,Hs.checkOpts)({dkLen:32,asyncTick:10},o),{c:n,dkLen:i,asyncTick:s}=a;if((0,Hs.anumber)(n),(0,Hs.anumber)(i),(0,Hs.anumber)(s),n<1)throw new Error("iterations (c) should be >= 1");const u=(0,Hs.kdfInputToBytes)(t),c=(0,Hs.kdfInputToBytes)(r),l=new Uint8Array(i),p=Bs.hmac.create(e,u),f=p._cloneInto().update(c);return{c:n,dkLen:i,asyncTick:s,DK:l,PRF:p,PRFSalt:f}}function Ns(e,t,r,o,a){return e.destroy(),t.destroy(),o&&o.destroy(),(0,Hs.clean)(a),r}var Ls={};const Cs=["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"],Rs=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"],qs=["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"],Ms=["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"],Vs=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"],Ds=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"],Fs=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"],Ks=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"],Gs=["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"],Ws=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];Object.defineProperty(Ls,"__esModule",{value:!0});const Xs={};let $s;Ls.wordlists=Xs;Ls._default=$s;try{Ls._default=$s=Cs,Xs.czech=$s}catch(Cc){}try{Ls._default=$s=Rs,Xs.chinese_simplified=$s}catch(Cc){}try{Ls._default=$s=qs,Xs.chinese_traditional=$s}catch(Cc){}try{Ls._default=$s=Ms,Xs.korean=$s}catch(Cc){}try{Ls._default=$s=Vs,Xs.french=$s}catch(Cc){}try{Ls._default=$s=Ds,Xs.italian=$s}catch(Cc){}try{Ls._default=$s=Fs,Xs.spanish=$s}catch(Cc){}try{Ls._default=$s=Ks,Xs.japanese=$s,Xs.JA=$s}catch(Cc){}try{Ls._default=$s=Gs,Xs.portuguese=$s}catch(Cc){}try{Ls._default=$s=Ws,Xs.english=$s,Xs.EN=$s}catch(Cc){}Object.defineProperty(zs,"__esModule",{value:!0});const Ys=zt,Js=Os,Qs=Ps,Zs=Je,eu=Ls;let tu=eu._default;const ru="Invalid mnemonic",ou="Invalid entropy",au="A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.";function nu(e){return(e||"").normalize("NFKD")}function iu(e,t,r){for(;e.length<r;)e=t+e;return e}function su(e){return parseInt(e,2)}function uu(e){return e.map(e=>iu(e.toString(2),"0",8)).join("")}function cu(e){const t=8*e.length/32,r=Ys.sha256(Uint8Array.from(e));return uu(Array.from(r)).slice(0,t)}function lu(e){return"mnemonic"+(e||"")}var pu=zs.mnemonicToSeedSync=function(e,t){const r=Uint8Array.from(b.from(nu(e),"utf8")),o=Uint8Array.from(b.from(lu(nu(t)),"utf8")),a=Qs.pbkdf2(Js.sha512,r,o,{c:2048,dkLen:64});return b.from(a)};var fu=zs.mnemonicToSeed=function(e,t){const r=Uint8Array.from(b.from(nu(e),"utf8")),o=Uint8Array.from(b.from(lu(nu(t)),"utf8"));return Qs.pbkdf2Async(Js.sha512,r,o,{c:2048,dkLen:64}).then(e=>b.from(e))};function du(e,t){if(!(t=t||tu))throw new Error(au);const r=nu(e).split(" ");if(r.length%3!=0)throw new Error(ru);const o=r.map(e=>{const r=t.indexOf(e);if(-1===r)throw new Error(ru);return iu(r.toString(2),"0",11)}).join(""),a=32*Math.floor(o.length/33),n=o.slice(0,a),i=o.slice(a),s=n.match(/(.{1,8})/g).map(su);if(s.length<16)throw new Error(ou);if(s.length>32)throw new Error(ou);if(s.length%4!=0)throw new Error(ou);const u=b.from(s);if(cu(u)!==i)throw new Error("Invalid mnemonic checksum");return u.toString("hex")}var hu=zs.mnemonicToEntropy=du;function mu(e,t){if(b.isBuffer(e)||(e=b.from(e,"hex")),!(t=t||tu))throw new Error(au);if(e.length<16)throw new TypeError(ou);if(e.length>32)throw new TypeError(ou);if(e.length%4!=0)throw new TypeError(ou);const r=(uu(Array.from(e))+cu(e)).match(/(.{1,11})/g).map(e=>{const r=su(e);return t[r]});return"あいこくしん"===t[0]?r.join("　"):r.join(" ")}var gu=zs.entropyToMnemonic=mu;var bu=zs.generateMnemonic=function(e,t,r){if((e=e||128)%32!=0)throw new TypeError(ou);return mu((t=t||(e=>b.from(Zs.randomBytes(e))))(e/8),r)};var yu=zs.validateMnemonic=function(e,t){try{du(e,t)}catch(r){return!1}return!0};var vu=zs.setDefaultWordlist=function(e){const t=eu.wordlists[e];if(!t)throw new Error('Could not find wordlist for language "'+e+'"');tu=t};var wu=zs.getDefaultWordlist=function(){if(!tu)throw new Error("No Default Wordlist set");return Object.keys(eu.wordlists).filter(e=>"JA"!==e&&"EN"!==e&&eu.wordlists[e].every((e,t)=>e===tu[t]))[0]},ku=Ls,Eu=zs.wordlists=ku.wordlists;const Su=r({__proto__:null,default:zs,entropyToMnemonic:gu,generateMnemonic:bu,getDefaultWordlist:wu,mnemonicToEntropy:hu,mnemonicToSeed:fu,mnemonicToSeedSync:pu,setDefaultWordlist:vu,validateMnemonic:yu,wordlists:Eu},[zs]),_u={p:0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2fn,n:0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n,b:7n,Gx:0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798n,Gy:0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8n},{p:Iu,n:Tu,Gx:Au,Gy:zu,b:Ou}=_u,xu=32,Pu=64,ju=(e="")=>{throw new Error(e)},Bu=e=>"bigint"==typeof e,Hu=e=>"string"==typeof e,Uu=(e,t)=>!(e=>e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name)(e)||"number"==typeof t&&t>0&&e.length!==t?ju("Uint8Array expected"):e,Nu=e=>new Uint8Array(e),Lu=(e,t)=>e.toString(16).padStart(t,"0"),Cu=e=>Array.from(Uu(e)).map(e=>Lu(e,2)).join(""),Ru=48,qu=57,Mu=65,Vu=70,Du=97,Fu=102,Ku=e=>e>=Ru&&e<=qu?e-Ru:e>=Mu&&e<=Vu?e-(Mu-10):e>=Du&&e<=Fu?e-(Du-10):void 0,Gu=e=>{const t="hex invalid";if(!Hu(e))return ju(t);const r=e.length,o=r/2;if(r%2)return ju(t);const a=Nu(o);for(let n=0,i=0;n<o;n++,i+=2){const r=Ku(e.charCodeAt(i)),o=Ku(e.charCodeAt(i+1));if(void 0===r||void 0===o)return ju(t);a[n]=16*r+o}return a},Wu=(e,t)=>{return Uu(Hu(e)?Gu(e):(r=Uu(e),Uint8Array.from(r)),t);var r},Xu=()=>null==globalThis?void 0:globalThis.crypto,$u=(...e)=>{const t=Nu(e.reduce((e,t)=>e+Uu(t).length,0));let r=0;return e.forEach(e=>{t.set(e,r),r+=e.length}),t},Yu=(e=xu)=>Xu().getRandomValues(Nu(e)),Ju=BigInt,Qu=(e,t,r,o="bad number: out of range")=>Bu(e)&&t<=e&&e<r?e:ju(o),Zu=(e,t=Iu)=>{const r=e%t;return r>=0n?r:t+r},ec=e=>Zu(e,Tu),tc=(e,t)=>{(0n===e||t<=0n)&&ju("no inverse n="+e+" mod="+t);let r=Zu(e,t),o=t,a=0n,n=1n;for(;0n!==r;){const e=o%r,t=a-n*(o/r);o=r,r=e,a=n,n=t}return 1n===o?Zu(a,t):ju("no inverse")},rc=e=>e instanceof pc?e:ju("Point expected"),oc=e=>Zu(Zu(e*e)*e+Ou),ac=e=>Qu(e,0n,Iu),nc=e=>Qu(e,1n,Iu),ic=e=>Qu(e,1n,Tu),sc=e=>0n==(1n&e),uc=e=>Uint8Array.of(e),cc=e=>uc(sc(e)?2:3),lc=class e{constructor(e,r,o){t(this,"px"),t(this,"py"),t(this,"pz"),this.px=ac(e),this.py=nc(r),this.pz=ac(o),Object.freeze(this)}static fromBytes(t){let r;Uu(t);const o=t[0],a=t.subarray(1),n=gc(a,0,xu),i=t.length;if(33===i&&[2,3].includes(o)){let t=(e=>{const t=oc(nc(e));let r=1n;for(let o=t,a=(Iu+1n)/4n;a>0n;a>>=1n)1n&a&&(r=r*o%Iu),o=o*o%Iu;return Zu(r*r)===t?r:ju("sqrt invalid")})(n);const a=sc(t);sc(Ju(o))!==a&&(t=Zu(-t)),r=new e(n,t,1n)}return 65===i&&4===o&&(r=new e(n,gc(a,xu,Pu),1n)),r?r.assertValidity():ju("bad point: not on curve")}equals(e){const{px:t,py:r,pz:o}=this,{px:a,py:n,pz:i}=rc(e),s=Zu(t*i),u=Zu(a*o),c=Zu(r*i),l=Zu(n*o);return s===u&&c===l}is0(){return this.equals(dc)}negate(){return new e(this.px,Zu(-this.py),this.pz)}double(){return this.add(this)}add(t){const{px:r,py:o,pz:a}=this,{px:n,py:i,pz:s}=rc(t);let u=0n,c=0n,l=0n;const p=Zu(3n*Ou);let f=Zu(r*n),d=Zu(o*i),h=Zu(a*s),m=Zu(r+o),g=Zu(n+i);m=Zu(m*g),g=Zu(f+d),m=Zu(m-g),g=Zu(r+a);let b=Zu(n+s);return g=Zu(g*b),b=Zu(f+h),g=Zu(g-b),b=Zu(o+a),u=Zu(i+s),b=Zu(b*u),u=Zu(d+h),b=Zu(b-u),l=Zu(0n*g),u=Zu(p*h),l=Zu(u+l),u=Zu(d-l),l=Zu(d+l),c=Zu(u*l),d=Zu(f+f),d=Zu(d+f),h=Zu(0n*h),g=Zu(p*g),d=Zu(d+h),h=Zu(f-h),h=Zu(0n*h),g=Zu(g+h),f=Zu(d*g),c=Zu(c+f),f=Zu(b*g),u=Zu(m*u),u=Zu(u-f),f=Zu(m*d),l=Zu(b*l),l=Zu(l+f),new e(u,c,l)}multiply(e,t=!0){if(!t&&0n===e)return dc;if(ic(e),1n===e)return this;if(this.equals(fc))return Uc(e).p;let r=dc,o=fc;for(let a=this;e>0n;a=a.double(),e>>=1n)1n&e?r=r.add(a):t&&(o=o.add(a));return r}toAffine(){const{px:e,py:t,pz:r}=this;if(this.equals(dc))return{x:0n,y:0n};if(1n===r)return{x:e,y:t};const o=tc(r,Iu);return 1n!==Zu(r*o)&&ju("inverse invalid"),{x:Zu(e*o),y:Zu(t*o)}}assertValidity(){const{x:e,y:t}=this.toAffine();return nc(e),nc(t),Zu(t*t)===oc(e)?this:ju("bad point: not on curve")}toBytes(e=!0){const{x:t,y:r}=this.assertValidity().toAffine(),o=yc(t);return e?$u(cc(r),o):$u(uc(4),o,yc(r))}static fromAffine(t){const{x:r,y:o}=t;return 0n===r&&0n===o?dc:new e(r,o,1n)}toHex(e){return Cu(this.toBytes(e))}static fromPrivateKey(e){return fc.multiply(vc(e))}static fromHex(t){return e.fromBytes(Wu(t))}get x(){return this.toAffine().x}get y(){return this.toAffine().y}toRawBytes(e){return this.toBytes(e)}};
/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */t(lc,"BASE"),t(lc,"ZERO");let pc=lc;const fc=new pc(Au,zu,1n),dc=new pc(0n,1n,0n);pc.BASE=fc,pc.ZERO=dc;const hc=(e,t,r)=>fc.multiply(t,!1).add(e.multiply(r,!1)).assertValidity(),mc=e=>Ju("0x"+(Cu(e)||"0")),gc=(e,t,r)=>mc(e.subarray(t,r)),bc=2n**256n,yc=e=>Gu(Lu(Qu(e,0n,bc),Pu)),vc=e=>{const t=Bu(e)?e:mc(Wu(e,xu));return Qu(t,1n,Tu,"private key invalid 3")},wc=e=>e>Tu>>1n;class kc{constructor(e,r,o){t(this,"r"),t(this,"s"),t(this,"recovery"),this.r=ic(e),this.s=ic(r),null!=o&&(this.recovery=o),Object.freeze(this)}static fromBytes(e){Uu(e,Pu);const t=gc(e,0,xu),r=gc(e,xu,Pu);return new kc(t,r)}toBytes(){const{r:e,s:t}=this;return $u(yc(e),yc(t))}addRecoveryBit(e){return new kc(this.r,this.s,e)}hasHighS(){return wc(this.s)}toCompactRawBytes(){return this.toBytes()}toCompactHex(){return Cu(this.toBytes())}recoverPublicKey(e){return zc(this,e)}static fromCompact(e){return kc.fromBytes(Wu(e,Pu))}assertValidity(){return this}normalizeS(){const{r:e,s:t,recovery:r}=this;return wc(t)?new kc(e,ec(-t),r):this}}const Ec=e=>{const t=8*e.length-256;t>1024&&ju("msg invalid");const r=mc(e);return t>0?r>>Ju(t):r},Sc=e=>ec(Ec(Uu(e))),_c={lowS:!0},Ic={lowS:!0},Tc=e=>{let t=Nu(xu),r=Nu(xu),o=0;const a=Nu(0),n=()=>{t.fill(1),r.fill(0),o=0};{const e=(...e)=>(e=>{const t=xc[e];return"function"!=typeof t&&ju("hashes."+e+" not set"),t})("hmacSha256Sync")(r,t,...e),i=(o=a)=>{r=e(uc(0),o),t=e(),0!==o.length&&(r=e(uc(1),o),t=e())},s=()=>(o++>=1e3&&ju("drbg: tried 1000 values"),t=e(),t);return(e,t)=>{let r;for(n(),i(e);!(r=t(s()));)i();return n(),r}}},Ac=(e,t,r=_c)=>{const{seed:o,k2sig:a}=((e,t,r=_c)=>{["der","recovered","canonical"].some(e=>e in r)&&ju("option not supported");let{lowS:o,extraEntropy:a}=r;null==o&&(o=!0);const n=yc,i=Sc(Wu(e)),s=n(i),u=vc(t),c=[n(u),s];a&&c.push(!0===a?Yu(xu):Wu(a));const l=i;return{seed:$u(...c),k2sig:e=>{const t=Ec(e);if(!(1n<=t&&t<Tu))return;const r=fc.multiply(t).toAffine(),a=ec(r.x);if(0n===a)return;const n=tc(t,Tu),i=ec(n*ec(l+ec(u*a)));if(0n===i)return;let s=i,c=(r.x===a?0:2)|Number(1n&r.y);return o&&wc(i)&&(s=ec(-i),c^=1),new kc(a,s,c)}}})(e,t,r);return Tc()(o,a)},zc=(e,t)=>{const{r:r,s:o,recovery:a}=e;[0,1,2,3].includes(a)||ju("recovery id invalid");const n=Sc(Wu(t,xu)),i=2===a||3===a?r+Tu:r;nc(i);const s=cc(Ju(a)),u=$u(s,yc(i)),c=pc.fromBytes(u),l=tc(i,Tu),p=ec(-n*l),f=ec(o*l);return hc(c,p,f)},Oc=e=>{((e=Wu(e)).length<40||e.length>1024)&&ju("expected 40-1024b");const t=Zu(mc(e),Tu-1n);return yc(t+1n)},xc={hexToBytes:Gu,bytesToHex:Cu,concatBytes:$u,bytesToNumberBE:mc,numberToBytesBE:yc,mod:Zu,invert:tc,hmacSha256Async:async(e,...t)=>{const r=(null==(o=Xu())?void 0:o.subtle)??ju("crypto.subtle must be defined");var o;const a="HMAC",n=await r.importKey("raw",e,{name:a,hash:{name:"SHA-256"}},!1,["sign"]);return Nu(await r.sign(a,n,$u(...t)))},hmacSha256Sync:void 0,hashToPrivateKey:Oc,randomBytes:Yu},Pc={normPrivateKeyToScalar:vc,isValidPrivateKey:e=>{try{return!!vc(e)}catch(t){return!1}},randomPrivateKey:()=>Oc(Yu(48)),precompute:(e=8,t=fc)=>(t.multiply(3n),t)},jc=Math.ceil(32)+1;let Bc;const Hc=(e,t)=>{const r=t.negate();return e?r:t},Uc=e=>{const t=Bc||(Bc=(()=>{const e=[];let t=fc,r=t;for(let o=0;o<jc;o++){r=t,e.push(r);for(let o=1;o<128;o++)r=r.add(t),e.push(r);t=r.double()}return e})());let r=dc,o=fc;const a=Ju(255),n=Ju(8);for(let i=0;i<jc;i++){let s=Number(e&a);e>>=n,s>128&&(s-=256,e+=1n);const u=128*i,c=u,l=u+Math.abs(s)-1,p=i%2!=0,f=s<0;0===s?o=o.add(Hc(p,t[c])):r=r.add(Hc(f,t[l]))}return{p:r,f:o}},Nc={isPoint(e){try{return pc.fromHex(e),!0}catch(t){return!1}},isPrivate(e){try{return Pc.normalizePrivateKey(e),!0}catch(t){return!1}},pointFromScalar:(e,t)=>pc.fromPrivateKey(e).toRawBytes(t),pointCompress:(e,t)=>pc.fromHex(e).toRawBytes(t),pointMultiply(e,t,r){const o=pc.fromHex(e),a=BigInt("0x"+w.from(t).toString("hex"));return o.multiply(a).toRawBytes(r)},pointAdd(e,t,r){const o=pc.fromHex(e),a=pc.fromHex(t);return o.add(a).toRawBytes(r)},privateAdd(e,t){const r=BigInt("0x"+w.from(e).toString("hex")),o=BigInt("0x"+w.from(t).toString("hex")),a=Pc.mod(r+o,_u.n);return w.from(a.toString(16).padStart(64,"0"),"hex")},sign(e,t){const r=Ac(e,t),o=w.from(r.r.toString(16).padStart(64,"0"),"hex"),a=w.from(r.s.toString(16).padStart(64,"0"),"hex");return w.concat([o,a])},signRecoverable(e,t){const r=Ac(e,t),o=w.from(r.r.toString(16).padStart(64,"0"),"hex"),a=w.from(r.s.toString(16).padStart(64,"0"),"hex");return{signature:w.concat([o,a]),recovery:r.recovery}},verify(e,t,r){const o=r.slice(0,32),a=r.slice(32,64);return((e,t,r,o=Ic)=>{let a,{lowS:n}=o;null==n&&(n=!0),"strict"in o&&ju("option not supported");const i=e&&"object"==typeof e&&"r"in e;i||Wu(e).length===Pu||ju("signature must be 64 bytes");try{a=i?new kc(e.r,e.s):kc.fromCompact(e);const o=Sc(Wu(t)),s=pc.fromBytes(Wu(r)),{r:u,s:c}=a;if(n&&wc(c))return!1;const l=tc(c,Tu),p=ec(o*l),f=ec(u*l),d=hc(s,p,f).toAffine();return ec(d.x)===u}catch(s){return!1}})(new kc(BigInt("0x"+o.toString("hex")),BigInt("0x"+a.toString("hex"))),e,t)}};n.initEccLib(Nc),"undefined"!=typeof window&&(window.Buffer=w);const Lc={...As,bip39:Su,hdWalletFromMnemonic:(e,t=n.networks.bitcoin)=>{const r=pu(e);return n.bip32.fromSeed(r,t)},generateAddress:(e,t=0,r=n.networks.bitcoin)=>{const o=`m/84'/${r===n.networks.testnet?1:0}'/0'/0/${t}`,a=e.derivePath(o),{address:i}=n.payments.p2wpkh({pubkey:a.publicKey,network:r});return{address:i,privateKey:a.toWIF(),publicKey:a.publicKey}},generateMnemonic:(e=128)=>bu(e),validateMnemonic:e=>yu(e),Buffer:w};return"undefined"!=typeof window&&(window.BitcoinJS=Lc,window.bitcoin=Lc,window.Bitcoin=Lc,window.bitcoinjs=Lc),Lc});
