var suiSDK=function(e){"use strict";var t=Object.defineProperty,r=(e,r,a)=>((e,r,a)=>r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[r]=a)(e,"symbol"!=typeof r?r+"":r,a);function a(e,t){for(var r=0;r<t.length;r++){const a=t[r];if("string"!=typeof a&&!Array.isArray(a))for(const t in a)if("default"!==t&&!(t in e)){const r=Object.getOwnPropertyDescriptor(a,t);r&&Object.defineProperty(e,t,r.get?r:{enumerable:!0,get:()=>a[t]})}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}const o=globalThis||self,n="1.38.0",i={"-32700":"ParseError","-32701":"OversizedRequest","-32702":"OversizedResponse","-32600":"InvalidRequest","-32601":"MethodNotFound","-32602":"InvalidParams","-32603":"InternalError","-32604":"ServerBusy","-32000":"CallExecutionFailed","-32001":"UnknownError","-32003":"SubscriptionClosed","-32004":"SubscriptionClosedWithError","-32005":"BatchesNotSupported","-32006":"TooManySubscriptions","-32050":"TransientError","-32002":"TransactionExecutionClientError"};class s extends Error{}class c extends s{constructor(e,t){super(e),this.code=t,this.type=i[t]??"ServerError"}}class l extends s{constructor(e,t,r){super(e),this.status=t,this.statusText=r}}var u,d,p,h,f,m,g,b,v,y=e=>{throw TypeError(e)},w=(e,t,r)=>t.has(e)||y("Cannot "+r),k=(e,t,r)=>(w(e,t,"read from private field"),r?r.call(e):t.get(e)),x=(e,t,r)=>t.has(e)?y("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),j=(e,t,r,a)=>(w(e,t,"write to private field"),t.set(e,r),r),z=(e,t,r)=>(w(e,t,"access private method"),r);const E={WebSocketConstructor:"undefined"!=typeof WebSocket?WebSocket:void 0,callTimeout:3e4,reconnectTimeout:3e3,maxReconnects:5};class S{constructor(e,t={}){if(x(this,g),x(this,u,0),x(this,d,0),x(this,p,null),x(this,h,null),x(this,f,new Set),x(this,m,new Map),this.endpoint=e,this.options={...E,...t},!this.options.WebSocketConstructor)throw new Error("Missing WebSocket constructor");this.endpoint.startsWith("http")&&(this.endpoint=function(e){const t=new URL(e);return t.protocol=t.protocol.replace("http","ws"),t.toString()}(this.endpoint))}async makeRequest(e,t,r){const a=await z(this,g,b).call(this);return new Promise((o,n)=>{j(this,u,k(this,u)+1),k(this,m).set(k(this,u),{resolve:o,reject:n,timeout:setTimeout(()=>{k(this,m).delete(k(this,u)),n(new Error(`Request timeout: ${e}`))},this.options.callTimeout)}),null==r||r.addEventListener("abort",()=>{k(this,m).delete(k(this,u)),n(r.reason)}),a.send(JSON.stringify({jsonrpc:"2.0",id:k(this,u),method:e,params:t}))}).then(({error:e,result:t})=>{if(e)throw new c(e.message,e.code);return t})}async subscribe(e){const t=new I(e);return k(this,f).add(t),await t.subscribe(this),()=>t.unsubscribe(this)}}u=new WeakMap,d=new WeakMap,p=new WeakMap,h=new WeakMap,f=new WeakMap,m=new WeakMap,g=new WeakSet,b=function(){return k(this,h)||j(this,h,new Promise(e=>{var t;null==(t=k(this,p))||t.close(),j(this,p,new this.options.WebSocketConstructor(this.endpoint)),k(this,p).addEventListener("open",()=>{j(this,d,0),e(k(this,p))}),k(this,p).addEventListener("close",()=>{var e,t,r;(e=this,t=d,{set _(r){j(e,t,r)},get _(){return k(e,t,r)}})._++,k(this,d)<=this.options.maxReconnects&&setTimeout(()=>{z(this,g,v).call(this)},this.options.reconnectTimeout)}),k(this,p).addEventListener("message",({data:e})=>{let t;try{t=JSON.parse(e)}catch(r){return void console.error(new Error(`Failed to parse RPC message: ${e}`,{cause:r}))}if("id"in t&&null!=t.id&&k(this,m).has(t.id)){const{resolve:e,timeout:r}=k(this,m).get(t.id);clearTimeout(r),e(t)}else if("params"in t){const{params:e}=t;k(this,f).forEach(t=>{t.subscriptionId===e.subscription&&e.subscription===t.subscriptionId&&t.onMessage(e.result)})}})})),k(this,h)},v=async function(){var e;return null==(e=k(this,p))||e.close(),j(this,h,null),Promise.allSettled([...k(this,f)].map(e=>e.subscribe(this)))};class I{constructor(e){this.subscriptionId=null,this.subscribed=!1,this.input=e}onMessage(e){this.subscribed&&this.input.onMessage(e)}async unsubscribe(e){const{subscriptionId:t}=this;return this.subscribed=!1,null!=t&&(this.subscriptionId=null,e.makeRequest(this.input.unsubscribe,[t]))}async subscribe(e){this.subscriptionId=null,this.subscribed=!0;const t=await e.makeRequest(this.input.method,this.input.params,this.input.signal);this.subscribed&&(this.subscriptionId=t)}}var A,O,T,B,U,C=e=>{throw TypeError(e)},M=(e,t,r)=>t.has(e)||C("Cannot "+r),$=(e,t,r)=>(M(e,t,"read from private field"),r?r.call(e):t.get(e)),P=(e,t,r)=>t.has(e)?C("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),R=(e,t,r,a)=>(M(e,t,"write to private field"),t.set(e,r),r);class _{constructor(e){P(this,B),P(this,A,0),P(this,O),P(this,T),R(this,O,e)}fetch(e,t){const r=$(this,O).fetch??fetch;if(!r)throw new Error("The current environment does not support fetch, you can provide a fetch implementation in the options for SuiHTTPTransport.");return r(e,t)}async request(e){var t,r;R(this,A,$(this,A)+1);const a=await this.fetch((null==(t=$(this,O).rpc)?void 0:t.url)??$(this,O).url,{method:"POST",signal:e.signal,headers:{"Content-Type":"application/json","Client-Sdk-Type":"typescript","Client-Sdk-Version":n,"Client-Target-Api-Version":"1.57.0","Client-Request-Method":e.method,...null==(r=$(this,O).rpc)?void 0:r.headers},body:JSON.stringify({jsonrpc:"2.0",id:$(this,A),method:e.method,params:e.params})});if(!a.ok)throw new l(`Unexpected status code: ${a.status}`,a.status,a.statusText);const o=await a.json();if("error"in o&&null!=o.error)throw new c(o.error.message,o.error.code);return o.result}async subscribe(e){const t=await(r=this,a=B,o=U,M(r,a,"access private method"),o).call(this).subscribe(e);var r,a,o;return e.signal&&(e.signal.throwIfAborted(),e.signal.addEventListener("abort",()=>{t()})),async()=>!!(await t())}}
/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function V(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function N(e,t){return!!Array.isArray(t)&&(0===t.length||(e?t.every(e=>"string"==typeof e):t.every(e=>Number.isSafeInteger(e))))}function q(e,t){if("string"!=typeof t)throw new Error(`${e}: string expected`);return!0}function L(e){if(!Number.isSafeInteger(e))throw new Error(`invalid integer: ${e}`)}function D(e){if(!Array.isArray(e))throw new Error("array expected")}function H(e,t){if(!N(!0,t))throw new Error(`${e}: array of strings expected`)}function F(e,t){if(!N(!1,t))throw new Error(`${e}: array of numbers expected`)}function K(...e){const t=e=>e,r=(e,t)=>r=>e(t(r));return{encode:e.map(e=>e.encode).reduceRight(r,t),decode:e.map(e=>e.decode).reduce(r,t)}}function W(e){const t="string"==typeof e?e.split(""):e,r=t.length;H("alphabet",t);const a=new Map(t.map((e,t)=>[e,t]));return{encode:a=>(D(a),a.map(a=>{if(!Number.isSafeInteger(a)||a<0||a>=r)throw new Error(`alphabet.encode: digit index outside alphabet "${a}". Allowed: ${e}`);return t[a]})),decode:t=>(D(t),t.map(t=>{q("alphabet.decode",t);const r=a.get(t);if(void 0===r)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return r}))}}function G(e=""){return q("join",e),{encode:t=>(H("join.decode",t),t.join(e)),decode:t=>(q("join.decode",t),t.split(e))}}function Z(e,t,r){if(t<2)throw new Error(`convertRadix: invalid from=${t}, base cannot be less than 2`);if(r<2)throw new Error(`convertRadix: invalid to=${r}, base cannot be less than 2`);if(D(e),!e.length)return[];let a=0;const o=[],n=Array.from(e,e=>{if(L(e),e<0||e>=t)throw new Error(`invalid integer: ${e}`);return e}),i=n.length;for(;;){let e=0,s=!0;for(let o=a;o<i;o++){const i=n[o],c=t*e,l=c+i;if(!Number.isSafeInteger(l)||c/t!==e||l-i!==c)throw new Error("convertRadix: carry overflow");const u=l/r;e=l%r;const d=Math.floor(u);if(n[o]=d,!Number.isSafeInteger(d)||d*r+e!==l)throw new Error("convertRadix: carry overflow");s&&(d?s=!1:a=o)}if(o.push(e),s)break}for(let s=0;s<e.length-1&&0===e[s];s++)o.push(0);return o.reverse()}A=new WeakMap,O=new WeakMap,T=new WeakMap,B=new WeakSet,U=function(){var e;if(!$(this,T)){const t=$(this,O).WebSocketConstructor??WebSocket;if(!t)throw new Error("The current environment does not support WebSocket, you can provide a WebSocketConstructor in the options for SuiHTTPTransport.");R(this,T,new S((null==(e=$(this,O).websocket)?void 0:e.url)??$(this,O).url,{WebSocketConstructor:t,...$(this,O).websocket}))}return $(this,T)};const J=(e,t)=>0===t?e:J(t,e%t),Y=(e,t)=>e+(t-J(e,t)),X=(()=>{let e=[];for(let t=0;t<40;t++)e.push(2**t);return e})();function Q(e,t,r,a){if(D(e),t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(r<=0||r>32)throw new Error(`convertRadix2: wrong to=${r}`);if(Y(t,r)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${r} carryBits=${Y(t,r)}`);let o=0,n=0;const i=X[t],s=X[r]-1,c=[];for(const l of e){if(L(l),l>=i)throw new Error(`convertRadix2: invalid data word=${l} from=${t}`);if(o=o<<t|l,n+t>32)throw new Error(`convertRadix2: carry overflow pos=${n} from=${t}`);for(n+=t;n>=r;n-=r)c.push((o>>n-r&s)>>>0);const e=X[n];if(void 0===e)throw new Error("invalid carry");o&=e-1}if(o=o<<r-n&s,!a&&n>=t)throw new Error("Excess padding");if(!a&&o>0)throw new Error(`Non-zero padding: ${o}`);return a&&n>0&&c.push(o>>>0),c}function ee(e){L(e);return{encode:t=>{if(!V(t))throw new Error("radix.encode input should be Uint8Array");return Z(Array.from(t),256,e)},decode:t=>(F("radix.decode",t),Uint8Array.from(Z(t,e,256)))}}function te(e,t=!1){if(L(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(Y(8,e)>32||Y(e,8)>32)throw new Error("radix2: carry overflow");return{encode:r=>{if(!V(r))throw new Error("radix2.encode input should be Uint8Array");return Q(Array.from(r),8,e,!t)},decode:r=>(F("radix2.decode",r),Uint8Array.from(Q(r,e,8,t)))}}function re(e){return function(e){if("function"!=typeof e)throw new Error("function expected")}(e),function(...t){try{return e.apply(null,t)}catch(r){}}}const ae=(e=>K(ee(58),W(e),G("")))("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),oe=K(W("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),G("")),ne=[996825010,642813549,513874426,1027748829,705979059];function ie(e){const t=e>>25;let r=(33554431&e)<<5;for(let a=0;a<ne.length;a++)1==(t>>a&1)&&(r^=ne[a]);return r}function se(e,t,r=1){const a=e.length;let o=1;for(let n=0;n<a;n++){const t=e.charCodeAt(n);if(t<33||t>126)throw new Error(`Invalid prefix (${e})`);o=ie(o)^t>>5}o=ie(o);for(let n=0;n<a;n++)o=ie(o)^31&e.charCodeAt(n);for(let n of t)o=ie(o)^n;for(let n=0;n<6;n++)o=ie(o);return o^=r,oe.encode(Q([o%X[30]],30,5,!1))}function ce(e){const t="bech32"===e?1:734539939,r=te(5),a=r.decode,o=r.encode,n=re(a);function i(e,r,a=90){q("bech32.encode prefix",e),V(r)&&(r=Array.from(r)),F("bech32.encode",r);const o=e.length;if(0===o)throw new TypeError(`Invalid prefix length ${o}`);const n=o+7+r.length;if(!1!==a&&n>a)throw new TypeError(`Length ${n} exceeds limit ${a}`);const i=e.toLowerCase(),s=se(i,r,t);return`${i}1${oe.encode(r)}${s}`}function s(e,r=90){q("bech32.decode input",e);const a=e.length;if(a<8||!1!==r&&a>r)throw new TypeError(`invalid string length: ${a} (${e}). Expected (8..${r})`);const o=e.toLowerCase();if(e!==o&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const n=o.lastIndexOf("1");if(0===n||-1===n)throw new Error('Letter "1" must be present between prefix and data only');const i=o.slice(0,n),s=o.slice(n+1);if(s.length<6)throw new Error("Data must be at least 6 characters long");const c=oe.decode(s).slice(0,-6),l=se(i,c,t);if(!s.endsWith(l))throw new Error(`Invalid checksum in ${e}: expected "${l}"`);return{prefix:i,words:c}}return{encode:i,decode:s,encodeFromBytes:function(e,t){return i(e,o(t))},decodeToBytes:function(e){const{prefix:t,words:r}=s(e,!1);return{prefix:t,words:r,bytes:a(r)}},decodeUnsafe:re(s),fromWords:a,fromWordsUnsafe:n,toWords:o}}const le=ce("bech32"),ue=e=>ae.encode(e),de=e=>ae.decode(e);function pe(e){return Uint8Array.from(atob(e),e=>e.charCodeAt(0))}const he=8192;function fe(e){if(e.length<he)return btoa(String.fromCharCode(...e));let t="";for(var r=0;r<e.length;r+=he){const a=e.slice(r,r+he);t+=String.fromCharCode(...a)}return btoa(t)}function me(e){var t;const r=e.startsWith("0x")?e.slice(2):e,a=r.length%2==0?r:`0${r}`,o=(null==(t=a.match(/[0-9a-fA-F]{2}/g))?void 0:t.map(e=>parseInt(e,16)))??[];if(o.length!==a.length/2)throw new Error(`Invalid hex string ${e}`);return Uint8Array.from(o)}function ge(e){return e.reduce((e,t)=>e+t.toString(16).padStart(2,"0"),"")}function be(e,t){return Array.from({length:Math.ceil(e.length/t)},(r,a)=>e.slice(a*t,(a+1)*t))}function ve(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var ye,we,ke={exports:{}},xe=ke.exports={};function je(){throw new Error("setTimeout has not been defined")}function ze(){throw new Error("clearTimeout has not been defined")}function Ee(e){if(ye===setTimeout)return setTimeout(e,0);if((ye===je||!ye)&&setTimeout)return ye=setTimeout,setTimeout(e,0);try{return ye(e,0)}catch(t){try{return ye.call(null,e,0)}catch(r){return ye.call(this,e,0)}}}!function(){try{ye="function"==typeof setTimeout?setTimeout:je}catch(e){ye=je}try{we="function"==typeof clearTimeout?clearTimeout:ze}catch(e){we=ze}}();var Se,Ie=[],Ae=!1,Oe=-1;function Te(){Ae&&Se&&(Ae=!1,Se.length?Ie=Se.concat(Ie):Oe=-1,Ie.length&&Be())}function Be(){if(!Ae){var e=Ee(Te);Ae=!0;for(var t=Ie.length;t;){for(Se=Ie,Ie=[];++Oe<t;)Se&&Se[Oe].run();Oe=-1,t=Ie.length}Se=null,Ae=!1,function(e){if(we===clearTimeout)return clearTimeout(e);if((we===ze||!we)&&clearTimeout)return we=clearTimeout,clearTimeout(e);try{return we(e)}catch(t){try{return we.call(null,e)}catch(r){return we.call(this,e)}}}(e)}}function Ue(e,t){this.fun=e,this.array=t}function Ce(){}xe.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];Ie.push(new Ue(e,t)),1!==Ie.length||Ae||Ee(Be)},Ue.prototype.run=function(){this.fun.apply(null,this.array)},xe.title="browser",xe.browser=!0,xe.env={},xe.argv=[],xe.version="",xe.versions={},xe.on=Ce,xe.addListener=Ce,xe.once=Ce,xe.off=Ce,xe.removeListener=Ce,xe.removeAllListeners=Ce,xe.emit=Ce,xe.prependListener=Ce,xe.prependOnceListener=Ce,xe.listeners=function(e){return[]},xe.binding=function(e){throw new Error("process.binding is not supported")},xe.cwd=function(){return"/"},xe.chdir=function(e){throw new Error("process.chdir is not supported")},xe.umask=function(){return 0};const Me=ve(ke.exports);class $e{constructor(e,t){if("function"!=typeof e)throw new TypeError(`DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but got: ${e}.`);this._batchLoadFn=e,this._maxBatchSize=function(e){const t=!e||!1!==e.batch;if(!t)return 1;const r=e&&e.maxBatchSize;if(void 0===r)return 1/0;if("number"!=typeof r||r<1)throw new TypeError(`maxBatchSize must be a positive number: ${r}`);return r}(t),this._batchScheduleFn=function(e){const t=e&&e.batchScheduleFn;if(void 0===t)return Pe;if("function"!=typeof t)throw new TypeError(`batchScheduleFn must be a function: ${t}`);return t}(t),this._cacheKeyFn=function(e){const t=e&&e.cacheKeyFn;if(void 0===t)return e=>e;if("function"!=typeof t)throw new TypeError(`cacheKeyFn must be a function: ${t}`);return t}(t),this._cacheMap=function(e){const t=!e||!1!==e.cache;if(!t)return null;const r=e&&e.cacheMap;if(void 0===r)return new Map;if(null!==r){const e=["get","set","delete","clear"].filter(e=>r&&"function"!=typeof r[e]);if(0!==e.length)throw new TypeError("Custom cacheMap missing methods: "+e.join(", "))}return r}(t),this._batch=null,this.name=function(e){if(e&&e.name)return e.name;return null}(t)}load(e){if(null==e)throw new TypeError(`The loader.load() function must be called with a value, but got: ${String(e)}.`);const t=function(e){const t=e._batch;if(null!==t&&!t.hasDispatched&&t.keys.length<e._maxBatchSize)return t;const r={hasDispatched:!1,keys:[],callbacks:[]};return e._batch=r,e._batchScheduleFn(()=>{!function(e,t){if(t.hasDispatched=!0,0===t.keys.length)return void Ve(t);let r;try{r=e._batchLoadFn(t.keys)}catch(a){return _e(e,t,new TypeError(`DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function errored synchronously: ${String(a)}.`))}if(!r||"function"!=typeof r.then)return _e(e,t,new TypeError(`DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise: ${String(r)}.`));Promise.resolve(r).then(e=>{if(!Ne(e))throw new TypeError(`DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise of an Array: ${String(e)}.`);if(e.length!==t.keys.length)throw new TypeError(`DataLoader must be constructed with a function which accepts Array<key> and returns Promise<Array<value>>, but the function did not return a Promise of an Array of the same length as the Array of keys.\n\nKeys:\n${String(t.keys)}\n\nValues:\n${String(e)}`);Ve(t);for(let r=0;r<t.callbacks.length;r++){const a=e[r];a instanceof Error?t.callbacks[r].reject(a):t.callbacks[r].resolve(a)}}).catch(r=>{_e(e,t,r)})}(e,r)}),r}(this),r=this._cacheMap;let a;if(r){a=this._cacheKeyFn(e);const o=r.get(a);if(o){const e=t.cacheHits||(t.cacheHits=[]);return new Promise(t=>{e.push(()=>{t(o)})})}}t.keys.push(e);const o=new Promise((e,r)=>{t.callbacks.push({resolve:e,reject:r})});return r&&r.set(a,o),o}loadMany(e){if(!Ne(e))throw new TypeError(`The loader.loadMany() function must be called with Array<key>, but got: ${e}.`);const t=[];for(let r=0;r<e.length;r++)t.push(this.load(e[r]).catch(e=>e));return Promise.all(t)}clear(e){const t=this._cacheMap;if(t){const r=this._cacheKeyFn(e);t.delete(r)}return this}clearAll(){const e=this._cacheMap;return e&&e.clear(),this}prime(e,t){const r=this._cacheMap;if(r){const a=this._cacheKeyFn(e);if(void 0===r.get(a)){let e;t instanceof Error?(e=Promise.reject(t),e.catch(()=>{})):e=Promise.resolve(t),r.set(a,e)}}return this}}const Pe="object"==typeof Me&&"function"==typeof Me.nextTick?function(e){Re||(Re=Promise.resolve()),Re.then(()=>{Me.nextTick(e)})}:"function"==typeof setImmediate?function(e){setImmediate(e)}:function(e){setTimeout(e)};let Re;function _e(e,t,r){Ve(t);for(let a=0;a<t.keys.length;a++)e.clear(t.keys[a]),t.callbacks[a].reject(r)}function Ve(e){if(e.cacheHits)for(let t=0;t<e.cacheHits.length;t++)e.cacheHits[t]()}function Ne(e){return"object"==typeof e&&null!==e&&"length"in e&&"number"==typeof e.length&&(0===e.length||e.length>0&&Object.prototype.hasOwnProperty.call(e,e.length-1))}function qe(e){const t=[];let r=0;if(0===e)return[0];for(;e>0;)t[r]=127&e,(e>>=7)&&(t[r]|=128),r+=1;return t}let Le=class{constructor(e){this.bytePosition=0,this.dataView=new DataView(e.buffer,e.byteOffset,e.byteLength)}shift(e){return this.bytePosition+=e,this}read8(){const e=this.dataView.getUint8(this.bytePosition);return this.shift(1),e}read16(){const e=this.dataView.getUint16(this.bytePosition,!0);return this.shift(2),e}read32(){const e=this.dataView.getUint32(this.bytePosition,!0);return this.shift(4),e}read64(){const e=this.read32(),t=this.read32().toString(16)+e.toString(16).padStart(8,"0");return BigInt("0x"+t).toString(10)}read128(){const e=BigInt(this.read64()),t=BigInt(this.read64()).toString(16)+e.toString(16).padStart(16,"0");return BigInt("0x"+t).toString(10)}read256(){const e=BigInt(this.read128()),t=BigInt(this.read128()).toString(16)+e.toString(16).padStart(32,"0");return BigInt("0x"+t).toString(10)}readBytes(e){const t=this.bytePosition+this.dataView.byteOffset,r=new Uint8Array(this.dataView.buffer,t,e);return this.shift(e),r}readULEB(){const e=this.bytePosition+this.dataView.byteOffset,t=new Uint8Array(this.dataView.buffer,e),{value:r,length:a}=function(e){let t=0,r=0,a=0;for(;;){const o=e[a];if(a+=1,t|=(127&o)<<r,!(128&o))break;r+=7}return{value:t,length:a}}(t);return this.shift(a),r}readVec(e){const t=this.readULEB(),r=[];for(let a=0;a<t;a++)r.push(e(this,a,t));return r}};function De(e,t=["<",">"]){const[r,a]=t,o=[];let n="",i=0;for(let s=0;s<e.length;s++){const t=e[s];t===r&&i++,t===a&&i--,0!==i||","!==t?n+=t:(o.push(n.trim()),n="")}return o.push(n.trim()),o}let He=class{constructor({initialSize:e=1024,maxSize:t=1/0,allocateSize:r=1024}={}){this.bytePosition=0,this.size=e,this.maxSize=t,this.allocateSize=r,this.dataView=new DataView(new ArrayBuffer(e))}ensureSizeOrGrow(e){const t=this.bytePosition+e;if(t>this.size){const e=Math.min(this.maxSize,this.size+this.allocateSize);if(t>e)throw new Error(`Attempting to serialize to BCS, but buffer does not have enough size. Allocated size: ${this.size}, Max size: ${this.maxSize}, Required size: ${t}`);this.size=e;const r=new ArrayBuffer(this.size);new Uint8Array(r).set(new Uint8Array(this.dataView.buffer)),this.dataView=new DataView(r)}}shift(e){return this.bytePosition+=e,this}write8(e){return this.ensureSizeOrGrow(1),this.dataView.setUint8(this.bytePosition,Number(e)),this.shift(1)}write16(e){return this.ensureSizeOrGrow(2),this.dataView.setUint16(this.bytePosition,Number(e),!0),this.shift(2)}write32(e){return this.ensureSizeOrGrow(4),this.dataView.setUint32(this.bytePosition,Number(e),!0),this.shift(4)}write64(e){return Fe(BigInt(e),8).forEach(e=>this.write8(e)),this}write128(e){return Fe(BigInt(e),16).forEach(e=>this.write8(e)),this}write256(e){return Fe(BigInt(e),32).forEach(e=>this.write8(e)),this}writeULEB(e){return qe(e).forEach(e=>this.write8(e)),this}writeVec(e,t){return this.writeULEB(e.length),Array.from(e).forEach((r,a)=>t(this,r,a,e.length)),this}*[Symbol.iterator](){for(let e=0;e<this.bytePosition;e++)yield this.dataView.getUint8(e);return this.toBytes()}toBytes(){return new Uint8Array(this.dataView.buffer.slice(0,this.bytePosition))}toString(e){return function(e,t){switch(t){case"base58":return ue(e);case"base64":return fe(e);case"hex":return ge(e);default:throw new Error("Unsupported encoding, supported values are: base64, hex")}}(this.toBytes(),e)}};function Fe(e,t){const r=new Uint8Array(t);let a=0;for(;e>0;)r[a]=Number(e%BigInt(256)),e/=BigInt(256),a+=1;return r}var Ke,We,Ge,Ze,Je=e=>{throw TypeError(e)},Ye=(e,t,r)=>t.has(e)||Je("Cannot "+r),Xe=(e,t,r)=>(Ye(e,t,"read from private field"),r?r.call(e):t.get(e)),Qe=(e,t,r)=>t.has(e)?Je("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),et=(e,t,r,a)=>(Ye(e,t,"write to private field"),t.set(e,r),r);Ke=new WeakMap,We=new WeakMap;let tt=class e{constructor(e){Qe(this,Ke),Qe(this,We),this.name=e.name,this.read=e.read,this.serializedSize=e.serializedSize??(()=>null),et(this,Ke,e.write),et(this,We,e.serialize??((e,t)=>{const r=new He({initialSize:this.serializedSize(e)??void 0,...t});return Xe(this,Ke).call(this,e,r),r.toBytes()})),this.validate=e.validate??(()=>{})}write(e,t){this.validate(e),Xe(this,Ke).call(this,e,t)}serialize(e,t){return this.validate(e),new ot(this,Xe(this,We).call(this,e,t))}parse(e){const t=new Le(e);return this.read(t)}fromHex(e){return this.parse(me(e))}fromBase58(e){return this.parse(de(e))}fromBase64(e){return this.parse(pe(e))}transform({name:t,input:r,output:a,validate:o}){return new e({name:t??this.name,read:e=>a?a(this.read(e)):this.read(e),write:(e,t)=>Xe(this,Ke).call(this,r?r(e):e,t),serializedSize:e=>this.serializedSize(r?r(e):e),serialize:(e,t)=>Xe(this,We).call(this,r?r(e):e,t),validate:e=>{null==o||o(e),this.validate(r?r(e):e)}})}};const rt=Symbol.for("@mysten/serialized-bcs");function at(e){return!!e&&"object"==typeof e&&!0===e[rt]}let ot=class{constructor(e,t){Qe(this,Ge),Qe(this,Ze),et(this,Ge,e),et(this,Ze,t)}get[rt](){return!0}toBytes(){return Xe(this,Ze)}toHex(){return ge(Xe(this,Ze))}toBase64(){return fe(Xe(this,Ze))}toBase58(){return ue(Xe(this,Ze))}parse(){return Xe(this,Ge).parse(Xe(this,Ze))}};function nt({size:e,...t}){return new tt({...t,serializedSize:()=>e})}function it({readMethod:e,writeMethod:t,...r}){return nt({...r,read:t=>t[e](),write:(e,r)=>r[t](e),validate:e=>{var t;if(e<0||e>r.maxValue)throw new TypeError(`Invalid ${r.name} value: ${e}. Expected value in range 0-${r.maxValue}`);null==(t=r.validate)||t.call(r,e)}})}function st({readMethod:e,writeMethod:t,...r}){return nt({...r,read:t=>t[e](),write:(e,r)=>r[t](BigInt(e)),validate:e=>{var t;const a=BigInt(e);if(a<0||a>r.maxValue)throw new TypeError(`Invalid ${r.name} value: ${a}. Expected value in range 0-${r.maxValue}`);null==(t=r.validate)||t.call(r,a)}})}Ge=new WeakMap,Ze=new WeakMap;class ct extends tt{constructor({name:e,fields:t,...r}){const a=Object.entries(t);super({name:e,serializedSize:e=>{let t=0;for(const[r,o]of a){const a=o.serializedSize(e[r]);if(null==a)return null;t+=a}return t},read:e=>{const t={};for(const[r,o]of a)t[r]=o.read(e);return t},write:(e,t)=>{for(const[r,o]of a)o.write(e[r],t)},...r,validate:e=>{var t;if(null==(t=null==r?void 0:r.validate)||t.call(r,e),"object"!=typeof e||null==e)throw new TypeError("Expected object, found "+typeof e)}})}}class lt extends tt{constructor({fields:e,...t}){const r=Object.entries(e);super({read:e=>{const t=e.readULEB(),a=r[t];if(!a)throw new TypeError(`Unknown value ${t} for enum ${name}`);const[o,n]=a;return{[o]:(null==n?void 0:n.read(e))??!0,$kind:o}},write:(t,a)=>{const[o,n]=Object.entries(t).filter(([t])=>Object.hasOwn(e,t))[0];for(let e=0;e<r.length;e++){const[t,i]=r[e];if(t===o)return a.writeULEB(e),void(null==i||i.write(n,a))}},...t,validate:r=>{var a;if(null==(a=null==t?void 0:t.validate)||a.call(t,r),"object"!=typeof r||null==r)throw new TypeError("Expected object, found "+typeof r);const o=Object.keys(r).filter(t=>void 0!==r[t]&&Object.hasOwn(e,t));if(1!==o.length)throw new TypeError(`Expected object with one key, but found ${o.length} for type ${name}}`);const[n]=o;if(!Object.hasOwn(e,n))throw new TypeError(`Invalid enum variant ${n}`)}})}}class ut extends tt{constructor({fields:e,name:t,...r}){super({name:t??`(${e.map(e=>e.name).join(", ")})`,serializedSize:t=>{let r=0;for(let a=0;a<e.length;a++){const o=e[a].serializedSize(t[a]);if(null==o)return null;r+=o}return r},read:t=>{const r=[];for(const a of e)r.push(a.read(t));return r},write:(t,r)=>{for(let a=0;a<e.length;a++)e[a].write(t[a],r)},...r,validate:t=>{var a;if(null==(a=null==r?void 0:r.validate)||a.call(r,t),!Array.isArray(t))throw new TypeError("Expected array, found "+typeof t);if(t.length!==e.length)throw new TypeError(`Expected array of length ${e.length}, found ${t.length}`)}})}}const dt={u8:e=>it({readMethod:"read8",writeMethod:"write8",size:1,maxValue:255,...e,name:(null==e?void 0:e.name)??"u8"}),u16:e=>it({readMethod:"read16",writeMethod:"write16",size:2,maxValue:65535,...e,name:(null==e?void 0:e.name)??"u16"}),u32:e=>it({readMethod:"read32",writeMethod:"write32",size:4,maxValue:2**32-1,...e,name:(null==e?void 0:e.name)??"u32"}),u64:e=>st({readMethod:"read64",writeMethod:"write64",size:8,maxValue:2n**64n-1n,...e,name:(null==e?void 0:e.name)??"u64"}),u128:e=>st({readMethod:"read128",writeMethod:"write128",size:16,maxValue:2n**128n-1n,...e,name:(null==e?void 0:e.name)??"u128"}),u256:e=>st({readMethod:"read256",writeMethod:"write256",size:32,maxValue:2n**256n-1n,...e,name:(null==e?void 0:e.name)??"u256"}),bool:e=>nt({size:1,read:e=>1===e.read8(),write:(e,t)=>t.write8(e?1:0),...e,name:(null==e?void 0:e.name)??"bool",validate:t=>{var r;if(null==(r=null==e?void 0:e.validate)||r.call(e,t),"boolean"!=typeof t)throw new TypeError("Expected boolean, found "+typeof t)}}),uleb128:e=>function({serialize:e,...t}){const r=new tt({...t,serialize:e,write:(e,t)=>{for(const a of r.serialize(e).toBytes())t.write8(a)}});return r}({read:e=>e.readULEB(),serialize:e=>Uint8Array.from(qe(e)),...e,name:(null==e?void 0:e.name)??"uleb128"}),bytes:(e,t)=>nt({size:e,read:t=>t.readBytes(e),write:(t,r)=>{const a=new Uint8Array(t);for(let o=0;o<e;o++)r.write8(a[o]??0)},...t,name:(null==t?void 0:t.name)??`bytes[${e}]`,validate:r=>{var a;if(null==(a=null==t?void 0:t.validate)||a.call(t,r),!r||"object"!=typeof r||!("length"in r))throw new TypeError("Expected array, found "+typeof r);if(r.length!==e)throw new TypeError(`Expected array of length ${e}, found ${r.length}`)}}),byteVector:e=>new tt({read:e=>{const t=e.readULEB();return e.readBytes(t)},write:(e,t)=>{const r=new Uint8Array(e);t.writeULEB(r.length);for(let a=0;a<r.length;a++)t.write8(r[a]??0)},...e,name:(null==e?void 0:e.name)??"vector<u8>",serializedSize:e=>{const t="length"in e?e.length:null;return null==t?null:qe(t).length+t},validate:t=>{var r;if(null==(r=null==e?void 0:e.validate)||r.call(e,t),!t||"object"!=typeof t||!("length"in t))throw new TypeError("Expected array, found "+typeof t)}}),string:e=>function({toBytes:e,fromBytes:t,...r}){return new tt({...r,read:e=>{const r=e.readULEB(),a=e.readBytes(r);return t(a)},write:(t,r)=>{const a=e(t);r.writeULEB(a.length);for(let e=0;e<a.length;e++)r.write8(a[e])},serialize:t=>{const r=e(t),a=qe(r.length),o=new Uint8Array(a.length+r.length);return o.set(a,0),o.set(r,a.length),o},validate:e=>{var t;if("string"!=typeof e)throw new TypeError(`Invalid ${r.name} value: ${e}. Expected string`);null==(t=r.validate)||t.call(r,e)}})}({toBytes:e=>(new TextEncoder).encode(e),fromBytes:e=>(new TextDecoder).decode(e),...e,name:(null==e?void 0:e.name)??"string"}),fixedArray:function(e,t,r){return new tt({read:r=>{const a=new Array(e);for(let o=0;o<e;o++)a[o]=t.read(r);return a},write:(e,r)=>{for(const a of e)t.write(a,r)},...r,name:(null==r?void 0:r.name)??`${t.name}[${e}]`,validate:t=>{var a;if(null==(a=null==r?void 0:r.validate)||a.call(r,t),!t||"object"!=typeof t||!("length"in t))throw new TypeError("Expected array, found "+typeof t);if(t.length!==e)throw new TypeError(`Expected array of length ${e}, found ${t.length}`)}})},option:function(e){return dt.enum(`Option<${e.name}>`,{None:null,Some:e}).transform({input:e=>null==e?{None:!0}:{Some:e},output:e=>"Some"===e.$kind?e.Some:null})},vector:function(e,t){return new tt({read:t=>{const r=t.readULEB(),a=new Array(r);for(let o=0;o<r;o++)a[o]=e.read(t);return a},write:(t,r)=>{r.writeULEB(t.length);for(const a of t)e.write(a,r)},...t,name:(null==t?void 0:t.name)??`vector<${e.name}>`,validate:e=>{var r;if(null==(r=null==t?void 0:t.validate)||r.call(t,e),!e||"object"!=typeof e||!("length"in e))throw new TypeError("Expected array, found "+typeof e)}})},tuple:(e,t)=>new ut({fields:e,...t}),struct:(e,t,r)=>new ct({name:e,fields:t,...r}),enum:(e,t,r)=>new lt({name:e,fields:t,...r}),map:function(e,t){return dt.vector(dt.tuple([e,t])).transform({name:`Map<${e.name}, ${t.name}>`,input:e=>[...e.entries()],output:e=>{const t=new Map;for(const[r,a]of e)t.set(r,a);return t}})},lazy:e=>function(e){let t=null;function r(){return t||(t=e()),t}return new tt({name:"lazy",read:e=>r().read(e),serializedSize:e=>r().serializedSize(e),write:(e,t)=>r().write(e,t),serialize:(e,t)=>r().serialize(e,t).toBytes()})}(e)};var pt,ht,ft=e=>{throw TypeError(e)},mt=(e,t,r)=>t.has(e)||ft("Cannot "+r),gt=(e,t,r)=>(mt(e,t,"read from private field"),t.get(e)),bt=(e,t,r)=>t.has(e)?ft("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),vt=(e,t,r,a)=>(mt(e,t,"write to private field"),t.set(e,r),r);pt=new WeakMap,ht=new WeakMap;let yt=class e{constructor({prefix:e,cache:t}={}){bt(this,pt),bt(this,ht),vt(this,pt,e??[]),vt(this,ht,t??new Map)}read(e,t){const r=[gt(this,pt),...e].join(":");if(gt(this,ht).has(r))return gt(this,ht).get(r);const a=t();return gt(this,ht).set(r,a),"object"==typeof a&&null!==a&&"then"in a?Promise.resolve(a).then(e=>(gt(this,ht).set(r,e),e)).catch(e=>{throw gt(this,ht).delete(r),e}):a}readSync(e,t){const r=[gt(this,pt),...e].join(":");if(gt(this,ht).has(r))return gt(this,ht).get(r);const a=t();return gt(this,ht).set(r,a),a}clear(e){const t=[...gt(this,pt),...e??[]].join(":");if(t)for(const r of gt(this,ht).keys())r.startsWith(t)&&gt(this,ht).delete(r);else gt(this,ht).clear()}scope(t){return new e({prefix:[...gt(this,pt),...Array.isArray(t)?t:[t]],cache:gt(this,ht)})}};class wt{constructor({network:e,base:t,cache:r=(null==t?void 0:t.cache)??new yt}){this.network=e,this.base=t??this,this.cache=r}$extend(...e){return Object.create(this,Object.fromEntries(e.map(e=>{if("experimental_asClientExtension"in e){const{name:t,register:r}=e.experimental_asClientExtension();return[t,{value:r(this)}]}return[e.name,{value:e.register(this)}]})))}}const kt=/^(?!.*(^(?!@)|[-.@])($|[-.@]))(?:[a-z0-9-]{0,63}(?:\.[a-z0-9-]{0,63})*)?@[a-z0-9-]{0,63}$/i,xt=/^(?!.*(^|[-.])($|[-.]))(?:[a-z0-9-]{0,63}\.)+sui$/i;const jt=/^([a-z0-9]+(?:-[a-z0-9]+)*)$/,zt=/^\d+$/,Et=e=>{const t=e.split("/");if(t.length<2||t.length>3)return!1;const[r,a,o]=t;return!(void 0!==o&&!zt.test(o))&&(!!function(e){return!(e.length>235)&&(e.includes("@")?kt.test(e):xt.test(e))}(r)&&(jt.test(a)&&a.length<64))},St=e=>{const t=e.split(/::|<|>|,/);for(const r of t)if(r.includes("/")&&!Et(r))return!1;return!0};function It(e){try{return 32===de(e).length}catch(t){return!1}}function At(e){return function(e){return/^(0x|0X)?[a-fA-F0-9]+$/.test(e)&&e.length%2==0}(e)&&32===function(e){return/^(0x|0X)/.test(e)?(e.length-2)/2:e.length/2}(e)}function Ot(e){return At(e)}function Tt(e){const[t,r]=e.split("::"),a=Et(t),o=e.slice(t.length+r.length+4),n=o.includes("<")?o.slice(0,o.indexOf("<")):o,i=o.includes("<")?De(o.slice(o.indexOf("<")+1,o.lastIndexOf(">"))).map(e=>function(e){return e.includes("::")?Tt(e):e}(e.trim())):[];return{address:a?t:Ut(t),module:r,name:n,typeParams:i}}function Bt(e){const{address:t,module:r,name:a,typeParams:o}="string"==typeof e?Tt(e):e;return`${t}::${r}::${a}${(null==o?void 0:o.length)>0?`<${o.map(e=>"string"==typeof e?e:Bt(e)).join(",")}>`:""}`}function Ut(e,t=!1){let r=e.toLowerCase();return!t&&r.startsWith("0x")&&(r=r.slice(2)),`0x${r.padStart(64,"0")}`}function Ct(e,t=!1){return Ut(e,t)}const Mt=/^vector<(.+)>$/,$t=/^([^:]+)::([^:]+)::([^<]+)(<(.+)>)?/;let Pt=class e{static parseFromStr(t,r=!1){if("address"===t)return{address:null};if("bool"===t)return{bool:null};if("u8"===t)return{u8:null};if("u16"===t)return{u16:null};if("u32"===t)return{u32:null};if("u64"===t)return{u64:null};if("u128"===t)return{u128:null};if("u256"===t)return{u256:null};if("signer"===t)return{signer:null};const a=t.match(Mt);if(a)return{vector:e.parseFromStr(a[1],r)};const o=t.match($t);if(o){return{struct:{address:r?Ut(o[1]):o[1],module:o[2],name:o[3],typeParams:void 0===o[5]?[]:e.parseStructTypeArgs(o[5],r)}}}throw new Error(`Encountered unexpected token when parsing type args for ${t}`)}static parseStructTypeArgs(t,r=!1){return De(t).map(t=>e.parseFromStr(t,r))}static tagToString(t){if("bool"in t)return"bool";if("u8"in t)return"u8";if("u16"in t)return"u16";if("u32"in t)return"u32";if("u64"in t)return"u64";if("u128"in t)return"u128";if("u256"in t)return"u256";if("address"in t)return"address";if("signer"in t)return"signer";if("vector"in t)return`vector<${e.tagToString(t.vector)}>`;if("struct"in t){const r=t.struct,a=r.typeParams.map(e.tagToString).join(", ");return`${r.address}::${r.module}::${r.name}${a?`<${a}>`:""}`}throw new Error("Invalid TypeTag")}};const Rt=dt.bytes(32).transform({validate:e=>{const t="string"==typeof e?e:ge(e);if(!t||!At(Ut(t)))throw new Error(`Invalid Sui address ${t}`)},input:e=>"string"==typeof e?me(Ut(e)):e,output:e=>Ut(ge(e))}),_t=dt.vector(dt.u8()).transform({name:"ObjectDigest",input:e=>de(e),output:e=>ue(new Uint8Array(e)),validate:e=>{if(32!==de(e).length)throw new Error("ObjectDigest must be 32 bytes")}}),Vt=dt.struct("SuiObjectRef",{objectId:Rt,version:dt.u64(),digest:_t}),Nt=dt.struct("SharedObjectRef",{objectId:Rt,initialSharedVersion:dt.u64(),mutable:dt.bool()}),qt=dt.enum("ObjectArg",{ImmOrOwnedObject:Vt,SharedObject:Nt,Receiving:Vt}),Lt=dt.enum("Owner",{AddressOwner:Rt,ObjectOwner:Rt,Shared:dt.struct("Shared",{initialSharedVersion:dt.u64()}),Immutable:null,ConsensusAddressOwner:dt.struct("ConsensusAddressOwner",{owner:Rt,startVersion:dt.u64()})}),Dt=dt.enum("CallArg",{Pure:dt.struct("Pure",{bytes:dt.vector(dt.u8()).transform({input:e=>"string"==typeof e?pe(e):e,output:e=>fe(new Uint8Array(e))})}),Object:qt}),Ht=dt.enum("TypeTag",{bool:null,u8:null,u64:null,u128:null,address:null,signer:null,vector:dt.lazy(()=>Ht),struct:dt.lazy(()=>er),u16:null,u32:null,u256:null}),Ft=Ht.transform({input:e=>"string"==typeof e?Pt.parseFromStr(e,!0):e,output:e=>Pt.tagToString(e)}),Kt=dt.enum("Argument",{GasCoin:null,Input:dt.u16(),Result:dt.u16(),NestedResult:dt.tuple([dt.u16(),dt.u16()])}),Wt=dt.struct("ProgrammableMoveCall",{package:Rt,module:dt.string(),function:dt.string(),typeArguments:dt.vector(Ft),arguments:dt.vector(Kt)}),Gt=dt.enum("Command",{MoveCall:Wt,TransferObjects:dt.struct("TransferObjects",{objects:dt.vector(Kt),address:Kt}),SplitCoins:dt.struct("SplitCoins",{coin:Kt,amounts:dt.vector(Kt)}),MergeCoins:dt.struct("MergeCoins",{destination:Kt,sources:dt.vector(Kt)}),Publish:dt.struct("Publish",{modules:dt.vector(dt.vector(dt.u8()).transform({input:e=>"string"==typeof e?pe(e):e,output:e=>fe(new Uint8Array(e))})),dependencies:dt.vector(Rt)}),MakeMoveVec:dt.struct("MakeMoveVec",{type:(Zt=Ft,dt.enum("Option",{None:null,Some:Zt})).transform({input:e=>null===e?{None:!0}:{Some:e},output:e=>e.Some??null}),elements:dt.vector(Kt)}),Upgrade:dt.struct("Upgrade",{modules:dt.vector(dt.vector(dt.u8()).transform({input:e=>"string"==typeof e?pe(e):e,output:e=>fe(new Uint8Array(e))})),dependencies:dt.vector(Rt),package:Rt,ticket:Kt})});var Zt;const Jt=dt.struct("ProgrammableTransaction",{inputs:dt.vector(Dt),commands:dt.vector(Gt)}),Yt=dt.enum("TransactionKind",{ProgrammableTransaction:Jt,ChangeEpoch:null,Genesis:null,ConsensusCommitPrologue:null}),Xt=dt.enum("TransactionExpiration",{None:null,Epoch:dt.u64({name:"unsafe_u64",...Qt}).transform({input:e=>e,output:e=>Number(e)})});var Qt;const er=dt.struct("StructTag",{address:Rt,module:dt.string(),name:dt.string(),typeParams:dt.vector(Ht)}),tr=dt.struct("GasData",{payment:dt.vector(Vt),owner:Rt,price:dt.u64(),budget:dt.u64()}),rr=dt.struct("TransactionDataV1",{kind:Yt,sender:Rt,gasData:tr,expiration:Xt}),ar=dt.enum("TransactionData",{V1:rr}),or=dt.enum("IntentScope",{TransactionData:null,TransactionEffects:null,CheckpointSummary:null,PersonalMessage:null}),nr=dt.enum("IntentVersion",{V0:null}),ir=dt.enum("AppId",{Sui:null}),sr=dt.struct("Intent",{scope:or,version:nr,appId:ir});function cr(e){return dt.struct(`IntentMessage<${e.name}>`,{intent:sr,value:e})}const lr=dt.enum("CompressedSignature",{ED25519:dt.fixedArray(64,dt.u8()),Secp256k1:dt.fixedArray(64,dt.u8()),Secp256r1:dt.fixedArray(64,dt.u8()),ZkLogin:dt.vector(dt.u8()),Passkey:dt.vector(dt.u8())}),ur=dt.enum("PublicKey",{ED25519:dt.fixedArray(32,dt.u8()),Secp256k1:dt.fixedArray(33,dt.u8()),Secp256r1:dt.fixedArray(33,dt.u8()),ZkLogin:dt.vector(dt.u8()),Passkey:dt.fixedArray(33,dt.u8())}),dr=dt.struct("MultiSigPkMap",{pubKey:ur,weight:dt.u8()}),pr=dt.struct("MultiSigPublicKey",{pk_map:dt.vector(dr),threshold:dt.u16()}),hr=dt.struct("MultiSig",{sigs:dt.vector(lr),bitmap:dt.u16(),multisig_pk:pr}),fr=dt.vector(dt.u8()).transform({input:e=>"string"==typeof e?pe(e):e,output:e=>fe(new Uint8Array(e))}),mr=dt.struct("SenderSignedTransaction",{intentMessage:cr(ar),txSignatures:dt.vector(fr)}),gr=dt.vector(mr,{name:"SenderSignedData"}),br=dt.struct("PasskeyAuthenticator",{authenticatorData:dt.vector(dt.u8()),clientDataJson:dt.string(),userSignature:dt.vector(dt.u8())}),vr=dt.enum("PackageUpgradeError",{UnableToFetchPackage:dt.struct("UnableToFetchPackage",{packageId:Rt}),NotAPackage:dt.struct("NotAPackage",{objectId:Rt}),IncompatibleUpgrade:null,DigestDoesNotMatch:dt.struct("DigestDoesNotMatch",{digest:dt.vector(dt.u8())}),UnknownUpgradePolicy:dt.struct("UnknownUpgradePolicy",{policy:dt.u8()}),PackageIDDoesNotMatch:dt.struct("PackageIDDoesNotMatch",{packageId:Rt,ticketId:Rt})}),yr=dt.struct("ModuleId",{address:Rt,name:dt.string()}),wr=dt.struct("MoveLocation",{module:yr,function:dt.u16(),instruction:dt.u16(),functionName:dt.option(dt.string())}),kr=dt.enum("CommandArgumentError",{TypeMismatch:null,InvalidBCSBytes:null,InvalidUsageOfPureArg:null,InvalidArgumentToPrivateEntryFunction:null,IndexOutOfBounds:dt.struct("IndexOutOfBounds",{idx:dt.u16()}),SecondaryIndexOutOfBounds:dt.struct("SecondaryIndexOutOfBounds",{resultIdx:dt.u16(),secondaryIdx:dt.u16()}),InvalidResultArity:dt.struct("InvalidResultArity",{resultIdx:dt.u16()}),InvalidGasCoinUsage:null,InvalidValueUsage:null,InvalidObjectByValue:null,InvalidObjectByMutRef:null,SharedObjectOperationNotAllowed:null}),xr=dt.enum("TypeArgumentError",{TypeNotFound:null,ConstraintNotSatisfied:null}),jr=dt.enum("ExecutionFailureStatus",{InsufficientGas:null,InvalidGasObject:null,InvariantViolation:null,FeatureNotYetSupported:null,MoveObjectTooBig:dt.struct("MoveObjectTooBig",{objectSize:dt.u64(),maxObjectSize:dt.u64()}),MovePackageTooBig:dt.struct("MovePackageTooBig",{objectSize:dt.u64(),maxObjectSize:dt.u64()}),CircularObjectOwnership:dt.struct("CircularObjectOwnership",{object:Rt}),InsufficientCoinBalance:null,CoinBalanceOverflow:null,PublishErrorNonZeroAddress:null,SuiMoveVerificationError:null,MovePrimitiveRuntimeError:dt.option(wr),MoveAbort:dt.tuple([wr,dt.u64()]),VMVerificationOrDeserializationError:null,VMInvariantViolation:null,FunctionNotFound:null,ArityMismatch:null,TypeArityMismatch:null,NonEntryFunctionInvoked:null,CommandArgumentError:dt.struct("CommandArgumentError",{argIdx:dt.u16(),kind:kr}),TypeArgumentError:dt.struct("TypeArgumentError",{argumentIdx:dt.u16(),kind:xr}),UnusedValueWithoutDrop:dt.struct("UnusedValueWithoutDrop",{resultIdx:dt.u16(),secondaryIdx:dt.u16()}),InvalidPublicFunctionReturnType:dt.struct("InvalidPublicFunctionReturnType",{idx:dt.u16()}),InvalidTransferObject:null,EffectsTooLarge:dt.struct("EffectsTooLarge",{currentSize:dt.u64(),maxSize:dt.u64()}),PublishUpgradeMissingDependency:null,PublishUpgradeDependencyDowngrade:null,PackageUpgradeError:dt.struct("PackageUpgradeError",{upgradeError:vr}),WrittenObjectsTooLarge:dt.struct("WrittenObjectsTooLarge",{currentSize:dt.u64(),maxSize:dt.u64()}),CertificateDenied:null,SuiMoveVerificationTimedout:null,SharedObjectOperationNotAllowed:null,InputObjectDeleted:null,ExecutionCancelledDueToSharedObjectCongestion:dt.struct("ExecutionCancelledDueToSharedObjectCongestion",{congestedObjects:dt.vector(Rt)}),AddressDeniedForCoin:dt.struct("AddressDeniedForCoin",{address:Rt,coinType:dt.string()}),CoinTypeGlobalPause:dt.struct("CoinTypeGlobalPause",{coinType:dt.string()}),ExecutionCancelledDueToRandomnessUnavailable:null}),zr=dt.enum("ExecutionStatus",{Success:null,Failed:dt.struct("ExecutionFailed",{error:jr,command:dt.option(dt.u64())})}),Er=dt.struct("GasCostSummary",{computationCost:dt.u64(),storageCost:dt.u64(),storageRebate:dt.u64(),nonRefundableStorageFee:dt.u64()}),Sr=dt.struct("TransactionEffectsV1",{status:zr,executedEpoch:dt.u64(),gasUsed:Er,modifiedAtVersions:dt.vector(dt.tuple([Rt,dt.u64()])),sharedObjects:dt.vector(Vt),transactionDigest:_t,created:dt.vector(dt.tuple([Vt,Lt])),mutated:dt.vector(dt.tuple([Vt,Lt])),unwrapped:dt.vector(dt.tuple([Vt,Lt])),deleted:dt.vector(Vt),unwrappedThenDeleted:dt.vector(Vt),wrapped:dt.vector(Vt),gasObject:dt.tuple([Vt,Lt]),eventsDigest:dt.option(_t),dependencies:dt.vector(_t)}),Ir=dt.tuple([dt.u64(),_t]),Ar=dt.enum("ObjectIn",{NotExist:null,Exist:dt.tuple([Ir,Lt])}),Or=dt.enum("ObjectOut",{NotExist:null,ObjectWrite:dt.tuple([_t,Lt]),PackageWrite:Ir}),Tr=dt.enum("IDOperation",{None:null,Created:null,Deleted:null}),Br=dt.struct("EffectsObjectChange",{inputState:Ar,outputState:Or,idOperation:Tr}),Ur=dt.enum("UnchangedSharedKind",{ReadOnlyRoot:Ir,MutateDeleted:dt.u64(),ReadDeleted:dt.u64(),Cancelled:dt.u64(),PerEpochConfig:null}),Cr=dt.struct("TransactionEffectsV2",{status:zr,executedEpoch:dt.u64(),gasUsed:Er,transactionDigest:_t,gasObjectIndex:dt.option(dt.u32()),eventsDigest:dt.option(_t),dependencies:dt.vector(_t),lamportVersion:dt.u64(),changedObjects:dt.vector(dt.tuple([Rt,Br])),unchangedSharedObjects:dt.vector(dt.tuple([Rt,Ur])),auxDataDigest:dt.option(_t)}),Mr=dt.enum("TransactionEffects",{V1:Sr,V2:Cr});function $r(e){switch(e){case"u8":return dt.u8();case"u16":return dt.u16();case"u32":return dt.u32();case"u64":return dt.u64();case"u128":return dt.u128();case"u256":return dt.u256();case"bool":return dt.bool();case"string":return dt.string();case"id":case"address":return Rt}const t=e.match(/^(vector|option)<(.+)>$/);if(t){const[e,r]=t.slice(1);return"vector"===e?dt.vector($r(r)):dt.option($r(r))}throw new Error(`Invalid Pure type name: ${e}`)}const Pr={...dt,U8:dt.u8(),U16:dt.u16(),U32:dt.u32(),U64:dt.u64(),U128:dt.u128(),U256:dt.u256(),ULEB128:dt.uleb128(),Bool:dt.bool(),String:dt.string(),Address:Rt,AppId:ir,Argument:Kt,CallArg:Dt,Command:Gt,CompressedSignature:lr,GasData:tr,Intent:sr,IntentMessage:cr,IntentScope:or,IntentVersion:nr,MultiSig:hr,MultiSigPkMap:dr,MultiSigPublicKey:pr,ObjectArg:qt,ObjectDigest:_t,Owner:Lt,PasskeyAuthenticator:br,ProgrammableMoveCall:Wt,ProgrammableTransaction:Jt,PublicKey:ur,SenderSignedData:gr,SenderSignedTransaction:mr,SharedObjectRef:Nt,StructTag:er,SuiObjectRef:Vt,TransactionData:ar,TransactionDataV1:rr,TransactionEffects:Mr,TransactionExpiration:Xt,TransactionKind:Yt,TypeTag:Ft};function Rr(e){var t,r;const a=typeof e;return"string"===a?`"${e}"`:"number"===a||"bigint"===a||"boolean"===a?`${e}`:"object"===a||"function"===a?(e&&(null==(r=null==(t=Object.getPrototypeOf(e))?void 0:t.constructor)?void 0:r.name))??"null":a}function _r(e,t,r,a,o){const n=o&&"input"in o?o.input:r.value,i=(null==o?void 0:o.expected)??e.expects??null,s=(null==o?void 0:o.received)??Rr(n),c={kind:e.kind,type:e.type,input:n,expected:i,received:s,message:`Invalid ${t}: ${i?`Expected ${i} but r`:"R"}eceived ${s}`,requirement:e.requirement,path:null==o?void 0:o.path,issues:null==o?void 0:o.issues,lang:a.lang,abortEarly:a.abortEarly,abortPipeEarly:a.abortPipeEarly},l="schema"===e.kind,u=(null==o?void 0:o.message)??e.message??(e.reference,d=c.lang,null==(p=void 0)?void 0:p.get(d))??(l?void c.lang:null)??a.message??void c.lang;var d,p;u&&(c.message="function"==typeof u?u(c):u),l&&(r.typed=!1),r.issues?r.issues.push(c):r.issues=[c]}function Vr(e,t){return Object.hasOwn(e,t)&&"__proto__"!==t&&"prototype"!==t&&"constructor"!==t}var Nr=class extends Error{constructor(e){super(e[0].message),r(this,"issues"),this.name="ValiError",this.issues=e}};function qr(e,t){return{kind:"validation",type:"check",reference:qr,async:!1,expects:null,requirement:e,message:t,_run(e,t){return e.typed&&!this.requirement(e.value)&&_r(this,"input",e,t),e}}}function Lr(e){return{kind:"validation",type:"integer",reference:Lr,async:!1,expects:null,requirement:Number.isInteger,message:e,_run(e,t){return e.typed&&!this.requirement(e.value)&&_r(this,"integer",e,t),e}}}function Dr(e){return{kind:"transformation",type:"transform",reference:Dr,async:!1,operation:e,_run(e){return e.value=this.operation(e.value),e}}}function Hr(e,t,r){return"function"==typeof e.default?e.default(t,r):e.default}function Fr(e,t){return!e._run({typed:!1,value:t},{abortEarly:!0}).issues}function Kr(e,t){return{kind:"schema",type:"array",reference:Kr,expects:"Array",async:!1,item:e,message:t,_run(e,t){var r;const a=e.value;if(Array.isArray(a)){e.typed=!0,e.value=[];for(let o=0;o<a.length;o++){const n=a[o],i=this.item._run({typed:!1,value:n},t);if(i.issues){const s={type:"array",origin:"value",input:a,key:o,value:n};for(const t of i.issues)t.path?t.path.unshift(s):t.path=[s],null==(r=e.issues)||r.push(t);if(e.issues||(e.issues=i.issues),t.abortEarly){e.typed=!1;break}}i.typed||(e.typed=!1),e.value.push(i.value)}}else _r(this,"type",e,t);return e}}}function Wr(e){return{kind:"schema",type:"bigint",reference:Wr,expects:"bigint",async:!1,message:e,_run(e,t){return"bigint"==typeof e.value?e.typed=!0:_r(this,"type",e,t),e}}}function Gr(e){return{kind:"schema",type:"boolean",reference:Gr,expects:"boolean",async:!1,message:e,_run(e,t){return"boolean"==typeof e.value?e.typed=!0:_r(this,"type",e,t),e}}}function Zr(e){return{kind:"schema",type:"lazy",reference:Zr,expects:"unknown",async:!1,getter:e,_run(e,t){return this.getter(e.value)._run(e,t)}}}function Jr(e,t){return{kind:"schema",type:"literal",reference:Jr,expects:Rr(e),async:!1,literal:e,message:t,_run(e,t){return e.value===this.literal?e.typed=!0:_r(this,"type",e,t),e}}}function Yr(e,...t){const r={kind:"schema",type:"nullable",reference:Yr,expects:`${e.expects} | null`,async:!1,wrapped:e,_run(e,t){return null===e.value&&("default"in this&&(e.value=Hr(this,e,t)),null===e.value)?(e.typed=!0,e):this.wrapped._run(e,t)}};return 0 in t&&(r.default=t[0]),r}function Xr(e,...t){const r={kind:"schema",type:"nullish",reference:Xr,expects:`${e.expects} | null | undefined`,async:!1,wrapped:e,_run(e,t){return null!==e.value&&void 0!==e.value||("default"in this&&(e.value=Hr(this,e,t)),null!==e.value&&void 0!==e.value)?this.wrapped._run(e,t):(e.typed=!0,e)}};return 0 in t&&(r.default=t[0]),r}function Qr(e){return{kind:"schema",type:"number",reference:Qr,expects:"number",async:!1,message:e,_run(e,t){return"number"!=typeof e.value||isNaN(e.value)?_r(this,"type",e,t):e.typed=!0,e}}}function ea(e,t){return{kind:"schema",type:"object",reference:ea,expects:"Object",async:!1,entries:e,message:t,_run(e,t){var r;const a=e.value;if(a&&"object"==typeof a){e.typed=!0,e.value={};for(const o in this.entries){const n=a[o],i=this.entries[o]._run({typed:!1,value:n},t);if(i.issues){const s={type:"object",origin:"value",input:a,key:o,value:n};for(const t of i.issues)t.path?t.path.unshift(s):t.path=[s],null==(r=e.issues)||r.push(t);if(e.issues||(e.issues=i.issues),t.abortEarly){e.typed=!1;break}}i.typed||(e.typed=!1),(void 0!==i.value||o in a)&&(e.value[o]=i.value)}}else _r(this,"type",e,t);return e}}}function ta(e,...t){const r={kind:"schema",type:"optional",reference:ta,expects:`${e.expects} | undefined`,async:!1,wrapped:e,_run(e,t){return void 0===e.value&&("default"in this&&(e.value=Hr(this,e,t)),void 0===e.value)?(e.typed=!0,e):this.wrapped._run(e,t)}};return 0 in t&&(r.default=t[0]),r}function ra(e,t,r){return{kind:"schema",type:"record",reference:ra,expects:"Object",async:!1,key:e,value:t,message:r,_run(e,t){var r,a;const o=e.value;if(o&&"object"==typeof o){e.typed=!0,e.value={};for(const n in o)if(Vr(o,n)){const i=o[n],s=this.key._run({typed:!1,value:n},t);if(s.issues){const a={type:"object",origin:"key",input:o,key:n,value:i};for(const t of s.issues)t.path=[a],null==(r=e.issues)||r.push(t);if(e.issues||(e.issues=s.issues),t.abortEarly){e.typed=!1;break}}const c=this.value._run({typed:!1,value:i},t);if(c.issues){const r={type:"object",origin:"value",input:o,key:n,value:i};for(const t of c.issues)t.path?t.path.unshift(r):t.path=[r],null==(a=e.issues)||a.push(t);if(e.issues||(e.issues=c.issues),t.abortEarly){e.typed=!1;break}}s.typed&&c.typed||(e.typed=!1),s.typed&&(e.value[s.value]=c.value)}}else _r(this,"type",e,t);return e}}}function aa(e){return{kind:"schema",type:"string",reference:aa,expects:"string",async:!1,message:e,_run(e,t){return"string"==typeof e.value?e.typed=!0:_r(this,"type",e,t),e}}}function oa(e,t){return{kind:"schema",type:"tuple",reference:oa,expects:"Array",async:!1,items:e,message:t,_run(e,t){var r;const a=e.value;if(Array.isArray(a)){e.typed=!0,e.value=[];for(let o=0;o<this.items.length;o++){const n=a[o],i=this.items[o]._run({typed:!1,value:n},t);if(i.issues){const s={type:"array",origin:"value",input:a,key:o,value:n};for(const t of i.issues)t.path?t.path.unshift(s):t.path=[s],null==(r=e.issues)||r.push(t);if(e.issues||(e.issues=i.issues),t.abortEarly){e.typed=!1;break}}i.typed||(e.typed=!1),e.value.push(i.value)}}else _r(this,"type",e,t);return e}}}function na(e){let t;if(e)for(const r of e)t?t.push(...r.issues):t=r.issues;return t}function ia(e,t){return{kind:"schema",type:"union",reference:ia,expects:[...new Set(e.map(e=>e.expects))].join(" | ")||"never",async:!1,options:e,message:t,_run(e,t){let r,a,o;for(const n of this.options){const i=n._run({typed:!1,value:e.value},t);if(i.typed){if(!i.issues){r=i;break}a?a.push(i):a=[i]}else o?o.push(i):o=[i]}if(r)return r;if(a){if(1===a.length)return a[0];_r(this,"type",e,t,{issues:na(a)}),e.typed=!0}else{if(1===(null==o?void 0:o.length))return o[0];_r(this,"type",e,t,{issues:na(o)})}return e}}}function sa(){return{kind:"schema",type:"unknown",reference:sa,expects:"unknown",async:!1,_run:e=>(e.typed=!0,e)}}function ca(e,t,r){const a=e._run({typed:!1,value:t},function(e){return{lang:(null==e?void 0:e.lang)??void 0,message:null==e?void 0:e.message,abortEarly:(null==e?void 0:e.abortEarly)??void 0,abortPipeEarly:(null==e?void 0:e.abortPipeEarly)??void 0}}(r));if(a.issues)throw new Nr(a.issues);return a.value}function la(...e){return{...e[0],pipe:e,_run(t,r){for(let a=0;a<e.length;a++){if(t.issues&&("schema"===e[a].kind||"transformation"===e[a].kind)){t.typed=!1;break}t.issues&&(r.abortEarly||r.abortPipeEarly)||(t=e[a]._run(t,r))}return t}}}function ua(e){return la(ia(Object.entries(e).map(([e,t])=>ea({[e]:t}))),Dr(e=>({...e,$kind:Object.keys(e)[0]})))}const da=la(aa(),Dr(e=>Ut(e)),qr(At)),pa=da,ha=aa(),fa=la(ia([aa(),la(Qr(),Lr())]),qr(e=>{try{return BigInt(e),BigInt(e)>=0&&BigInt(e)<=18446744073709551615n}catch{return!1}},"Invalid u64")),ma=ea({objectId:da,version:fa,digest:aa()}),ga=la(ia([ea({GasCoin:Jr(!0)}),ea({Input:la(Qr(),Lr()),type:ta(Jr("pure"))}),ea({Input:la(Qr(),Lr()),type:ta(Jr("object"))}),ea({Result:la(Qr(),Lr())}),ea({NestedResult:oa([la(Qr(),Lr()),la(Qr(),Lr())])})]),Dr(e=>({...e,$kind:Object.keys(e)[0]}))),ba=ea({budget:Yr(fa),price:Yr(fa),owner:Yr(da),payment:Yr(Kr(ma))}),va=ia([Jr("address"),Jr("bool"),Jr("u8"),Jr("u16"),Jr("u32"),Jr("u64"),Jr("u128"),Jr("u256"),ea({vector:Zr(()=>va)}),ea({datatype:ea({package:aa(),module:aa(),type:aa(),typeParameters:Kr(Zr(()=>va))})}),ea({typeParameter:la(Qr(),Lr())})]),ya=ea({ref:Yr(ia([Jr("&"),Jr("&mut")])),body:va}),wa=ea({package:pa,module:aa(),function:aa(),typeArguments:Kr(aa()),arguments:Kr(ga),_argumentTypes:ta(Yr(Kr(ya)))}),ka=ea({name:aa(),inputs:ra(aa(),ia([ga,Kr(ga)])),data:ra(aa(),sa())}),xa=ua({MoveCall:wa,TransferObjects:ea({objects:Kr(ga),address:ga}),SplitCoins:ea({coin:ga,amounts:Kr(ga)}),MergeCoins:ea({destination:ga,sources:Kr(ga)}),Publish:ea({modules:Kr(ha),dependencies:Kr(pa)}),MakeMoveVec:ea({type:Yr(aa()),elements:Kr(ga)}),Upgrade:ea({modules:Kr(ha),dependencies:Kr(pa),package:pa,ticket:ga}),$Intent:ka}),ja=ua({ImmOrOwnedObject:ma,SharedObject:ea({objectId:pa,initialSharedVersion:fa,mutable:Gr()}),Receiving:ma}),za=ua({Object:ja,Pure:ea({bytes:ha}),UnresolvedPure:ea({value:sa()}),UnresolvedObject:ea({objectId:pa,version:ta(Yr(fa)),digest:ta(Yr(aa())),initialSharedVersion:ta(Yr(fa)),mutable:ta(Yr(Gr()))})}),Ea=ua({Object:ja,Pure:ea({bytes:ha})}),Sa=ua({None:Jr(!0),Epoch:fa}),Ia=ea({version:Jr(2),sender:Xr(da),expiration:Xr(Sa),gasData:ba,inputs:Kr(za),commands:Kr(xa)}),Aa={MoveCall(e){const[t,r="",a=""]="target"in e?e.target.split("::"):[e.package,e.module,e.function];return{$kind:"MoveCall",MoveCall:{package:t,module:r,function:a,typeArguments:e.typeArguments??[],arguments:e.arguments??[]}}},TransferObjects:(e,t)=>({$kind:"TransferObjects",TransferObjects:{objects:e.map(e=>ca(ga,e)),address:ca(ga,t)}}),SplitCoins:(e,t)=>({$kind:"SplitCoins",SplitCoins:{coin:ca(ga,e),amounts:t.map(e=>ca(ga,e))}}),MergeCoins:(e,t)=>({$kind:"MergeCoins",MergeCoins:{destination:ca(ga,e),sources:t.map(e=>ca(ga,e))}}),Publish:({modules:e,dependencies:t})=>({$kind:"Publish",Publish:{modules:e.map(e=>"string"==typeof e?e:fe(new Uint8Array(e))),dependencies:t.map(e=>Ct(e))}}),Upgrade:({modules:e,dependencies:t,package:r,ticket:a})=>({$kind:"Upgrade",Upgrade:{modules:e.map(e=>"string"==typeof e?e:fe(new Uint8Array(e))),dependencies:t.map(e=>Ct(e)),package:r,ticket:ca(ga,a)}}),MakeMoveVec:({type:e,elements:t})=>({$kind:"MakeMoveVec",MakeMoveVec:{type:e??null,elements:t.map(e=>ca(ga,e))}}),Intent:({name:e,inputs:t={},data:r={}})=>({$kind:"$Intent",$Intent:{name:e,inputs:Object.fromEntries(Object.entries(t).map(([e,t])=>[e,Array.isArray(t)?t.map(e=>ca(ga,e)):ca(ga,t)])),data:r}})},Oa=ea({digest:aa(),objectId:aa(),version:ia([la(Qr(),Lr()),aa(),Wr()])}),Ta=ua({ImmOrOwned:Oa,Shared:ea({objectId:pa,initialSharedVersion:fa,mutable:Gr()}),Receiving:Oa}),Ba=ua({Object:Ta,Pure:Kr(la(Qr(),Lr()))}),Ua=ia([ea({kind:Jr("Input"),index:la(Qr(),Lr()),value:sa(),type:ta(Jr("object"))}),ea({kind:Jr("Input"),index:la(Qr(),Lr()),value:sa(),type:Jr("pure")})]),Ca=ia([ea({Epoch:la(Qr(),Lr())}),ea({None:Yr(Jr(!0))})]),Ma=la(ia([Qr(),aa(),Wr()]),qr(e=>{if(!["string","number","bigint"].includes(typeof e))return!1;try{return BigInt(e),!0}catch{return!1}})),$a=ia([ea({bool:Yr(Jr(!0))}),ea({u8:Yr(Jr(!0))}),ea({u64:Yr(Jr(!0))}),ea({u128:Yr(Jr(!0))}),ea({address:Yr(Jr(!0))}),ea({signer:Yr(Jr(!0))}),ea({vector:Zr(()=>$a)}),ea({struct:Zr(()=>Pa)}),ea({u16:Yr(Jr(!0))}),ea({u32:Yr(Jr(!0))}),ea({u256:Yr(Jr(!0))})]),Pa=ea({address:aa(),module:aa(),name:aa(),typeParams:Kr($a)}),Ra=ea({budget:ta(Ma),price:ta(Ma),payment:ta(Kr(Oa)),owner:ta(aa())}),_a=ia([...[Ua,ea({kind:Jr("GasCoin")}),ea({kind:Jr("Result"),index:la(Qr(),Lr())}),ea({kind:Jr("NestedResult"),index:la(Qr(),Lr()),resultIndex:la(Qr(),Lr())})]]),Va=ea({kind:Jr("MoveCall"),target:la(aa(),qr(e=>3===e.split("::").length)),typeArguments:Kr(aa()),arguments:Kr(_a)}),Na=ea({kind:Jr("TransferObjects"),objects:Kr(_a),address:_a}),qa=ea({kind:Jr("SplitCoins"),coin:_a,amounts:Kr(_a)}),La=ea({kind:Jr("MergeCoins"),destination:_a,sources:Kr(_a)}),Da=ea({kind:Jr("MakeMoveVec"),type:ia([ea({Some:$a}),ea({None:Yr(Jr(!0))})]),objects:Kr(_a)}),Ha=ia([...[Va,Na,qa,La,ea({kind:Jr("Publish"),modules:Kr(Kr(la(Qr(),Lr()))),dependencies:Kr(aa())}),ea({kind:Jr("Upgrade"),modules:Kr(Kr(la(Qr(),Lr()))),dependencies:Kr(aa()),packageId:aa(),ticket:_a}),Da]]);function Fa(e){var t;const r=e.inputs.map((e,t)=>{if(e.Object)return{kind:"Input",index:t,value:{Object:e.Object.ImmOrOwnedObject?{ImmOrOwned:e.Object.ImmOrOwnedObject}:e.Object.Receiving?{Receiving:{digest:e.Object.Receiving.digest,version:e.Object.Receiving.version,objectId:e.Object.Receiving.objectId}}:{Shared:{mutable:e.Object.SharedObject.mutable,initialSharedVersion:e.Object.SharedObject.initialSharedVersion,objectId:e.Object.SharedObject.objectId}}},type:"object"};if(e.Pure)return{kind:"Input",index:t,value:{Pure:Array.from(pe(e.Pure.bytes))},type:"pure"};if(e.UnresolvedPure)return{kind:"Input",type:"pure",index:t,value:e.UnresolvedPure.value};if(e.UnresolvedObject)return{kind:"Input",type:"object",index:t,value:e.UnresolvedObject.objectId};throw new Error("Invalid input")});return{version:1,sender:e.sender??void 0,expiration:"Epoch"===(null==(t=e.expiration)?void 0:t.$kind)?{Epoch:Number(e.expiration.Epoch)}:e.expiration?{None:!0}:null,gasConfig:{owner:e.gasData.owner??void 0,budget:e.gasData.budget??void 0,price:e.gasData.price??void 0,payment:e.gasData.payment??void 0},inputs:r,transactions:e.commands.map(e=>{if(e.MakeMoveVec)return{kind:"MakeMoveVec",type:null===e.MakeMoveVec.type?{None:!0}:{Some:Pt.parseFromStr(e.MakeMoveVec.type)},objects:e.MakeMoveVec.elements.map(e=>Ka(e,r))};if(e.MergeCoins)return{kind:"MergeCoins",destination:Ka(e.MergeCoins.destination,r),sources:e.MergeCoins.sources.map(e=>Ka(e,r))};if(e.MoveCall)return{kind:"MoveCall",target:`${e.MoveCall.package}::${e.MoveCall.module}::${e.MoveCall.function}`,typeArguments:e.MoveCall.typeArguments,arguments:e.MoveCall.arguments.map(e=>Ka(e,r))};if(e.Publish)return{kind:"Publish",modules:e.Publish.modules.map(e=>Array.from(pe(e))),dependencies:e.Publish.dependencies};if(e.SplitCoins)return{kind:"SplitCoins",coin:Ka(e.SplitCoins.coin,r),amounts:e.SplitCoins.amounts.map(e=>Ka(e,r))};if(e.TransferObjects)return{kind:"TransferObjects",objects:e.TransferObjects.objects.map(e=>Ka(e,r)),address:Ka(e.TransferObjects.address,r)};if(e.Upgrade)return{kind:"Upgrade",modules:e.Upgrade.modules.map(e=>Array.from(pe(e))),dependencies:e.Upgrade.dependencies,packageId:e.Upgrade.package,ticket:Ka(e.Upgrade.ticket,r)};throw new Error(`Unknown transaction ${Object.keys(e)}`)})}}function Ka(e,t){if("GasCoin"===e.$kind)return{kind:"GasCoin"};if("Result"===e.$kind)return{kind:"Result",index:e.Result};if("NestedResult"===e.$kind)return{kind:"NestedResult",index:e.NestedResult[0],resultIndex:e.NestedResult[1]};if("Input"===e.$kind)return t[e.Input];throw new Error(`Invalid argument ${Object.keys(e)}`)}function Wa(e){switch(e.kind){case"GasCoin":return{GasCoin:!0};case"Result":return{Result:e.index};case"NestedResult":return{NestedResult:[e.index,e.resultIndex]};case"Input":return{Input:e.index}}}function Ga(e){return ia(Object.entries(e).map(([e,t])=>ea({[e]:t})))}ea({version:Jr(1),sender:ta(aa()),expiration:Xr(Ca),gasConfig:Ra,inputs:Kr(Ua),transactions:Kr(Ha)});const Za=Ga({GasCoin:Jr(!0),Input:la(Qr(),Lr()),Result:la(Qr(),Lr()),NestedResult:oa([la(Qr(),Lr()),la(Qr(),Lr())])}),Ja=ea({budget:Yr(fa),price:Yr(fa),owner:Yr(da),payment:Yr(Kr(ma))}),Ya=ea({package:pa,module:aa(),function:aa(),typeArguments:Kr(aa()),arguments:Kr(Za)}),Xa=ea({name:aa(),inputs:ra(aa(),ia([Za,Kr(Za)])),data:ra(aa(),sa())}),Qa=Ga({MoveCall:Ya,TransferObjects:ea({objects:Kr(Za),address:Za}),SplitCoins:ea({coin:Za,amounts:Kr(Za)}),MergeCoins:ea({destination:Za,sources:Kr(Za)}),Publish:ea({modules:Kr(ha),dependencies:Kr(pa)}),MakeMoveVec:ea({type:Yr(aa()),elements:Kr(Za)}),Upgrade:ea({modules:Kr(ha),dependencies:Kr(pa),package:pa,ticket:Za}),$Intent:Xa}),eo=Ga({ImmOrOwnedObject:ma,SharedObject:ea({objectId:pa,initialSharedVersion:fa,mutable:Gr()}),Receiving:ma}),to=Ga({Object:eo,Pure:ea({bytes:ha}),UnresolvedPure:ea({value:sa()}),UnresolvedObject:ea({objectId:pa,version:ta(Yr(fa)),digest:ta(Yr(aa())),initialSharedVersion:ta(Yr(fa)),mutable:ta(Yr(Gr()))})}),ro=Ga({None:Jr(!0),Epoch:fa}),ao=ea({version:Jr(2),sender:Xr(da),expiration:Xr(ro),gasData:Ja,inputs:Kr(to),commands:Kr(Qa),digest:ta(Yr(aa()))});const oo={Pure:function(e){return{$kind:"Pure",Pure:{bytes:e instanceof Uint8Array?fe(e):e.toBase64()}}},ObjectRef:({objectId:e,digest:t,version:r})=>({$kind:"Object",Object:{$kind:"ImmOrOwnedObject",ImmOrOwnedObject:{digest:t,version:r,objectId:Ut(e)}}}),SharedObjectRef:({objectId:e,mutable:t,initialSharedVersion:r})=>({$kind:"Object",Object:{$kind:"SharedObject",SharedObject:{mutable:t,initialSharedVersion:r,objectId:Ut(e)}}}),ReceivingRef:({objectId:e,digest:t,version:r})=>({$kind:"Object",Object:{$kind:"Receiving",Receiving:{digest:t,version:r,objectId:Ut(e)}}})};BigInt(1e9);Ct("0x6");const no="0x2::sui::SUI";Ct("0x5");const io="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0;
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */function so(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function co(e){if(!Number.isSafeInteger(e)||e<0)throw new Error("positive integer expected, got "+e)}function lo(e,...t){if(!so(e))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(e.length))throw new Error("Uint8Array expected of length "+t+", got length="+e.length)}function uo(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function po(e,t){lo(e);const r=t.outputLen;if(e.length<r)throw new Error("digestInto() expects output buffer of length at least "+r)}function ho(e){return new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4))}function fo(...e){for(let t=0;t<e.length;t++)e[t].fill(0)}function mo(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)}const go=(()=>68===new Uint8Array(new Uint32Array([287454020]).buffer)[0])();function bo(e){return e<<24&4278190080|e<<8&16711680|e>>>8&65280|e>>>24&255}const vo=go?e=>e:e=>bo(e);const yo=go?e=>e:function(e){for(let t=0;t<e.length;t++)e[t]=bo(e[t]);return e},wo=(()=>"function"==typeof Uint8Array.from([]).toHex&&"function"==typeof Uint8Array.fromHex)(),ko=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));function xo(e){if(lo(e),wo)return e.toHex();let t="";for(let r=0;r<e.length;r++)t+=ko[e[r]];return t}const jo=48,zo=57,Eo=65,So=70,Io=97,Ao=102;function Oo(e){return e>=jo&&e<=zo?e-jo:e>=Eo&&e<=So?e-(Eo-10):e>=Io&&e<=Ao?e-(Io-10):void 0}function To(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);if(wo)return Uint8Array.fromHex(e);const t=e.length,r=t/2;if(t%2)throw new Error("hex string expected, got unpadded hex of length "+t);const a=new Uint8Array(r);for(let o=0,n=0;o<r;o++,n+=2){const t=Oo(e.charCodeAt(n)),r=Oo(e.charCodeAt(n+1));if(void 0===t||void 0===r){const t=e[n]+e[n+1];throw new Error('hex string expected, got non-hex character "'+t+'" at index '+n)}a[o]=16*t+r}return a}function Bo(e){return"string"==typeof e&&(e=function(e){if("string"!=typeof e)throw new Error("string expected");return new Uint8Array((new TextEncoder).encode(e))}(e)),lo(e),e}function Uo(...e){let t=0;for(let a=0;a<e.length;a++){const r=e[a];lo(r),t+=r.length}const r=new Uint8Array(t);for(let a=0,o=0;a<e.length;a++){const t=e[a];r.set(t,o),o+=t.length}return r}class Co{}function Mo(e){const t=t=>e().update(Bo(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function $o(e){const t=(t,r)=>e(r).update(Bo(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t}function Po(e=32){if(io&&"function"==typeof io.getRandomValues)return io.getRandomValues(new Uint8Array(e));if(io&&"function"==typeof io.randomBytes)return Uint8Array.from(io.randomBytes(e));throw new Error("crypto.getRandomValues must be defined")}const Ro=Uint8Array.from([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9]);let _o=class extends Co{constructor(e,t,r,a){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=a,this.buffer=new Uint8Array(e),this.view=mo(this.buffer)}update(e){uo(this),lo(e=Bo(e));const{view:t,buffer:r,blockLen:a}=this,o=e.length;for(let n=0;n<o;){const i=Math.min(a-this.pos,o-n);if(i===a){const t=mo(e);for(;a<=o-n;n+=a)this.process(t,n);continue}r.set(e.subarray(n,n+i),this.pos),this.pos+=i,n+=i,this.pos===a&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){uo(this),po(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:a,isLE:o}=this;let{pos:n}=this;t[n++]=128,fo(this.buffer.subarray(n)),this.padOffset>a-n&&(this.process(r,0),n=0);for(let u=n;u<a;u++)t[u]=0;!function(e,t,r,a){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,r,a);const o=BigInt(32),n=BigInt(4294967295),i=Number(r>>o&n),s=Number(r&n),c=a?4:0,l=a?0:4;e.setUint32(t+c,i,a),e.setUint32(t+l,s,a)}(r,a-8,BigInt(8*this.length),o),this.process(r,0);const i=mo(e),s=this.outputLen;if(s%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const c=s/4,l=this.get();if(c>l.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<c;u++)i.setUint32(4*u,l[u],o)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:a,finished:o,destroyed:n,pos:i}=this;return e.destroyed=n,e.finished=o,e.length=a,e.pos=i,a%t&&e.buffer.set(r),e}clone(){return this._cloneInto()}};const Vo=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]),No=BigInt(2**32-1),qo=BigInt(32);function Lo(e,t=!1){return t?{h:Number(e&No),l:Number(e>>qo&No)}:{h:0|Number(e>>qo&No),l:0|Number(e&No)}}const Do=(e,t,r)=>e>>>r,Ho=(e,t,r)=>e<<32-r|t>>>r,Fo=(e,t,r)=>e>>>r|t<<32-r,Ko=(e,t,r)=>e<<32-r|t>>>r,Wo=(e,t,r)=>e<<64-r|t>>>r-32,Go=(e,t,r)=>e>>>r-32|t<<64-r;function Zo(e,t,r,a){const o=(t>>>0)+(a>>>0);return{h:e+r+(o/2**32|0)|0,l:0|o}}const Jo=(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0),Yo=(e,t,r,a)=>t+r+a+(e/2**32|0)|0,Xo=(e,t,r,a)=>(e>>>0)+(t>>>0)+(r>>>0)+(a>>>0),Qo=(e,t,r,a,o)=>t+r+a+o+(e/2**32|0)|0,en=(e,t,r,a,o)=>(e>>>0)+(t>>>0)+(r>>>0)+(a>>>0)+(o>>>0),tn=(e,t,r,a,o,n)=>t+r+a+o+n+(e/2**32|0)|0,rn=Uint32Array.from([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),an=new Uint32Array(32);function on(e,t,r,a,o,n){const i=o[n],s=o[n+1];let c=an[2*e],l=an[2*e+1],u=an[2*t],d=an[2*t+1],p=an[2*r],h=an[2*r+1],f=an[2*a],m=an[2*a+1],g=Jo(c,u,i);var b,v;l=Yo(g,l,d,s),c=0|g,({Dh:m,Dl:f}={Dh:m^l,Dl:f^c}),({Dh:m,Dl:f}={Dh:(v=f,v),Dl:(b=m,b)}),({h:h,l:p}=Zo(h,p,m,f)),({Bh:d,Bl:u}={Bh:d^h,Bl:u^p}),({Bh:d,Bl:u}={Bh:Fo(d,u,24),Bl:Ko(d,u,24)}),an[2*e]=c,an[2*e+1]=l,an[2*t]=u,an[2*t+1]=d,an[2*r]=p,an[2*r+1]=h,an[2*a]=f,an[2*a+1]=m}function nn(e,t,r,a,o,n){const i=o[n],s=o[n+1];let c=an[2*e],l=an[2*e+1],u=an[2*t],d=an[2*t+1],p=an[2*r],h=an[2*r+1],f=an[2*a],m=an[2*a+1],g=Jo(c,u,i);l=Yo(g,l,d,s),c=0|g,({Dh:m,Dl:f}={Dh:m^l,Dl:f^c}),({Dh:m,Dl:f}={Dh:Fo(m,f,16),Dl:Ko(m,f,16)}),({h:h,l:p}=Zo(h,p,m,f)),({Bh:d,Bl:u}={Bh:d^h,Bl:u^p}),({Bh:d,Bl:u}={Bh:Wo(d,u,63),Bl:Go(d,u,63)}),an[2*e]=c,an[2*e+1]=l,an[2*t]=u,an[2*t+1]=d,an[2*r]=p,an[2*r+1]=h,an[2*a]=f,an[2*a+1]=m}class sn extends Co{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,this.length=0,this.pos=0,co(e),co(t),this.blockLen=e,this.outputLen=t,this.buffer=new Uint8Array(e),this.buffer32=ho(this.buffer)}update(e){uo(this),lo(e=Bo(e));const{blockLen:t,buffer:r,buffer32:a}=this,o=e.length,n=e.byteOffset,i=e.buffer;for(let s=0;s<o;){this.pos===t&&(yo(a),this.compress(a,0,!1),yo(a),this.pos=0);const c=Math.min(t-this.pos,o-s),l=n+s;if(c===t&&!(l%4)&&s+c<o){const e=new Uint32Array(i,l,Math.floor((o-s)/4));yo(e);for(let r=0;s+t<o;r+=a.length,s+=t)this.length+=t,this.compress(e,r,!1);yo(e);continue}r.set(e.subarray(s,s+c),this.pos),this.pos+=c,this.length+=c,s+=c}return this}digestInto(e){uo(this),po(e,this);const{pos:t,buffer32:r}=this;this.finished=!0,fo(this.buffer.subarray(t)),yo(r),this.compress(r,0,!0),yo(r);const a=ho(e);this.get().forEach((e,t)=>a[t]=vo(e))}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){const{buffer:t,length:r,finished:a,destroyed:o,outputLen:n,pos:i}=this;return e||(e=new this.constructor({dkLen:n})),e.set(...this.get()),e.buffer.set(t),e.destroyed=o,e.finished=a,e.length=r,e.pos=i,e.outputLen=n,e}clone(){return this._cloneInto()}}class cn extends sn{constructor(e={}){const t=void 0===e.dkLen?64:e.dkLen;super(128,t),this.v0l=0|rn[0],this.v0h=0|rn[1],this.v1l=0|rn[2],this.v1h=0|rn[3],this.v2l=0|rn[4],this.v2h=0|rn[5],this.v3l=0|rn[6],this.v3h=0|rn[7],this.v4l=0|rn[8],this.v4h=0|rn[9],this.v5l=0|rn[10],this.v5h=0|rn[11],this.v6l=0|rn[12],this.v6h=0|rn[13],this.v7l=0|rn[14],this.v7h=0|rn[15],function(e,t={},r,a,o){if(co(r),e<0||e>r)throw new Error("outputLen bigger than keyLen");const{key:n,salt:i,personalization:s}=t;if(void 0!==n&&(n.length<1||n.length>r))throw new Error("key length must be undefined or 1.."+r);if(void 0!==i&&i.length!==a)throw new Error("salt must be undefined or "+a);if(void 0!==s&&s.length!==o)throw new Error("personalization must be undefined or "+o)}(t,e,64,16,16);let{key:r,personalization:a,salt:o}=e,n=0;if(void 0!==r&&(r=Bo(r),n=r.length),this.v0l^=this.outputLen|n<<8|65536|1<<24,void 0!==o){o=Bo(o);const e=ho(o);this.v4l^=vo(e[0]),this.v4h^=vo(e[1]),this.v5l^=vo(e[2]),this.v5h^=vo(e[3])}if(void 0!==a){a=Bo(a);const e=ho(a);this.v6l^=vo(e[0]),this.v6h^=vo(e[1]),this.v7l^=vo(e[2]),this.v7h^=vo(e[3])}if(void 0!==r){const e=new Uint8Array(this.blockLen);e.set(r),this.update(e)}}get(){let{v0l:e,v0h:t,v1l:r,v1h:a,v2l:o,v2h:n,v3l:i,v3h:s,v4l:c,v4h:l,v5l:u,v5h:d,v6l:p,v6h:h,v7l:f,v7h:m}=this;return[e,t,r,a,o,n,i,s,c,l,u,d,p,h,f,m]}set(e,t,r,a,o,n,i,s,c,l,u,d,p,h,f,m){this.v0l=0|e,this.v0h=0|t,this.v1l=0|r,this.v1h=0|a,this.v2l=0|o,this.v2h=0|n,this.v3l=0|i,this.v3h=0|s,this.v4l=0|c,this.v4h=0|l,this.v5l=0|u,this.v5h=0|d,this.v6l=0|p,this.v6h=0|h,this.v7l=0|f,this.v7h=0|m}compress(e,t,r){this.get().forEach((e,t)=>an[t]=e),an.set(rn,16);let{h:a,l:o}=Lo(BigInt(this.length));an[24]=rn[8]^o,an[25]=rn[9]^a,r&&(an[28]=~an[28],an[29]=~an[29]);let n=0;const i=Ro;for(let s=0;s<12;s++)on(0,4,8,12,e,t+2*i[n++]),nn(0,4,8,12,e,t+2*i[n++]),on(1,5,9,13,e,t+2*i[n++]),nn(1,5,9,13,e,t+2*i[n++]),on(2,6,10,14,e,t+2*i[n++]),nn(2,6,10,14,e,t+2*i[n++]),on(3,7,11,15,e,t+2*i[n++]),nn(3,7,11,15,e,t+2*i[n++]),on(0,5,10,15,e,t+2*i[n++]),nn(0,5,10,15,e,t+2*i[n++]),on(1,6,11,12,e,t+2*i[n++]),nn(1,6,11,12,e,t+2*i[n++]),on(2,7,8,13,e,t+2*i[n++]),nn(2,7,8,13,e,t+2*i[n++]),on(3,4,9,14,e,t+2*i[n++]),nn(3,4,9,14,e,t+2*i[n++]);this.v0l^=an[0]^an[16],this.v0h^=an[1]^an[17],this.v1l^=an[2]^an[18],this.v1h^=an[3]^an[19],this.v2l^=an[4]^an[20],this.v2h^=an[5]^an[21],this.v3l^=an[6]^an[22],this.v3h^=an[7]^an[23],this.v4l^=an[8]^an[24],this.v4h^=an[9]^an[25],this.v5l^=an[10]^an[26],this.v5h^=an[11]^an[27],this.v6l^=an[12]^an[28],this.v6h^=an[13]^an[29],this.v7l^=an[14]^an[30],this.v7h^=an[15]^an[31],fo(an)}destroy(){this.destroyed=!0,fo(this.buffer32),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}const ln=$o(e=>new cn(e));function un(e){if("string"==typeof e)switch(e){case"address":return Pr.Address;case"bool":return Pr.Bool;case"u8":return Pr.U8;case"u16":return Pr.U16;case"u32":return Pr.U32;case"u64":return Pr.U64;case"u128":return Pr.U128;case"u256":return Pr.U256;default:throw new Error(`Unknown type signature ${e}`)}if("vector"in e){if("u8"===e.vector)return Pr.vector(Pr.U8).transform({input:e=>"string"==typeof e?(new TextEncoder).encode(e):e,output:e=>e});const t=un(e.vector);return t?Pr.vector(t):null}if("datatype"in e){const t=Ut(e.datatype.package);if(t===Ut("0x1")){if("ascii"===e.datatype.module&&"String"===e.datatype.type)return Pr.String;if("string"===e.datatype.module&&"String"===e.datatype.type)return Pr.String;if("option"===e.datatype.module&&"Option"===e.datatype.type){const t=un(e.datatype.typeParameters[0]);return t?Pr.vector(t):null}}if(t===Ut("0x2")&&"object"===e.datatype.module&&"ID"===e.datatype.type)return Pr.Address}return null}function dn(e){if("string"==typeof e)switch(e){case"Address":return"address";case"Bool":return"bool";case"U8":return"u8";case"U16":return"u16";case"U32":return"u32";case"U64":return"u64";case"U128":return"u128";case"U256":return"u256";default:throw new Error(`Unexpected type ${e}`)}if("Vector"in e)return{vector:dn(e.Vector)};if("Struct"in e)return{datatype:{package:e.Struct.address,module:e.Struct.module,type:e.Struct.name,typeParameters:e.Struct.typeArguments.map(dn)}};if("TypeParameter"in e)return{typeParameter:e.TypeParameter};throw new Error(`Unexpected type ${JSON.stringify(e)}`)}const pn=5e10;function hn(e){return async function(t,r,a){return await async function(e,t){const{inputs:r,commands:a}=e,o=[],n=new Set;a.forEach(t=>{if(t.MoveCall){if(t.MoveCall._argumentTypes)return;if(t.MoveCall.arguments.map(t=>"Input"===t.$kind?e.inputs[t.Input]:null).some(e=>(null==e?void 0:e.UnresolvedPure)||(null==e?void 0:e.UnresolvedObject)&&"boolean"!=typeof(null==e?void 0:e.UnresolvedObject.mutable))){const e=`${t.MoveCall.package}::${t.MoveCall.module}::${t.MoveCall.function}`;n.add(e),o.push(t.MoveCall)}}});const i=new Map;n.size>0&&await Promise.all([...n].map(async e=>{const[r,a,o]=e.split("::"),n=await t.getNormalizedMoveFunction({package:r,module:a,function:o});i.set(e,n.parameters.map(e=>function(e){return"object"==typeof e&&"Reference"in e?{ref:"&",body:dn(e.Reference)}:"object"==typeof e&&"MutableReference"in e?{ref:"&mut",body:dn(e.MutableReference)}:{ref:null,body:dn(e)}}(e)))}));o.length&&await Promise.all(o.map(async e=>{const t=i.get(`${e.package}::${e.module}::${e.function}`);if(!t)return;const r=t.length>0&&function(e){const t="object"==typeof e.body&&"datatype"in e.body?e.body.datatype:null;return!!t&&Ut(t.package)===Ut("0x2")&&"tx_context"===t.module&&"TxContext"===t.type}(t.at(-1))?t.slice(0,t.length-1):t;e._argumentTypes=r}));a.forEach(e=>{if(!e.MoveCall)return;const t=e.MoveCall,a=`${t.package}::${t.module}::${t.function}`,o=t._argumentTypes;if(o){if(o.length!==e.MoveCall.arguments.length)throw new Error(`Incorrect number of arguments for ${a}`);o.forEach((e,a)=>{var o,n;const i=t.arguments[a];if("Input"!==i.$kind)return;const s=r[i.Input];if(!s.UnresolvedPure&&!s.UnresolvedObject)return;const c=(null==(o=s.UnresolvedPure)?void 0:o.value)??(null==(n=s.UnresolvedObject)?void 0:n.objectId),l=un(e.body);if(l)return i.type="pure",void(r[r.indexOf(s)]=oo.Pure(l.serialize(c)));if("string"!=typeof c)throw new Error(`Expect the argument to be an object id string, got ${JSON.stringify(c,null,2)}`);i.type="object";const u=s.UnresolvedPure?{$kind:"UnresolvedObject",UnresolvedObject:{objectId:c}}:s;r[i.Input]=u})}})}(t,e),await async function(e,t){const r=e.inputs.filter(e=>{var t;return e.UnresolvedObject&&!(e.UnresolvedObject.version||(null==(t=e.UnresolvedObject)?void 0:t.initialSharedVersion))}),a=[...new Set(r.map(e=>Ct(e.UnresolvedObject.objectId)))],o=a.length?be(a,50):[],n=(await Promise.all(o.map(e=>t.multiGetObjects({ids:e,options:{showOwner:!0}})))).flat(),i=new Map(a.map((e,t)=>[e,n[t]])),s=Array.from(i).filter(([e,t])=>t.error).map(([e,t])=>JSON.stringify(t.error));if(s.length)throw new Error(`The following input objects are invalid: ${s.join(", ")}`);const c=n.map(e=>{if(e.error||!e.data)throw new Error(`Failed to fetch object: ${e.error}`);const t=e.data.owner,r=t&&"object"==typeof t?"Shared"in t?t.Shared.initial_shared_version:"ConsensusAddressOwner"in t?t.ConsensusAddressOwner.start_version:null:null;return{objectId:e.data.objectId,digest:e.data.digest,version:e.data.version,initialSharedVersion:r}}),l=new Map(a.map((e,t)=>[e,c[t]]));for(const[u,d]of e.inputs.entries()){if(!d.UnresolvedObject)continue;let t;const r=Ut(d.UnresolvedObject.objectId),a=l.get(r);d.UnresolvedObject.initialSharedVersion??(null==a?void 0:a.initialSharedVersion)?t=oo.SharedObjectRef({objectId:r,initialSharedVersion:d.UnresolvedObject.initialSharedVersion||(null==a?void 0:a.initialSharedVersion),mutable:d.UnresolvedObject.mutable||fn(e,u)}):mn(e,u)&&(t=oo.ReceivingRef({objectId:r,digest:d.UnresolvedObject.digest??(null==a?void 0:a.digest),version:d.UnresolvedObject.version??(null==a?void 0:a.version)})),e.inputs[e.inputs.indexOf(d)]=t??oo.ObjectRef({objectId:r,digest:d.UnresolvedObject.digest??(null==a?void 0:a.digest),version:d.UnresolvedObject.version??(null==a?void 0:a.version)})}}(t,e),r.onlyTransactionKind||(await async function(e,t){e.gasConfig.price||(e.gasConfig.price=String(await t.getReferenceGasPrice()))}(t,e),await async function(e,t){if(e.gasConfig.budget)return;const r=await t.dryRunTransactionBlock({transactionBlock:e.build({overrides:{gasData:{budget:String(pn),payment:[]}}})});if("success"!==r.effects.status.status)throw new Error(`Dry run failed, could not automatically determine a budget: ${r.effects.status.error}`,{cause:r});const a=1000n*BigInt(e.gasConfig.price||1n),o=BigInt(r.effects.gasUsed.computationCost)+a,n=o+BigInt(r.effects.gasUsed.storageCost)-BigInt(r.effects.gasUsed.storageRebate);e.gasConfig.budget=String(n>o?n:o)}(t,e),await async function(e,t){if(!e.gasConfig.payment){const r=(await t.getCoins({owner:e.gasConfig.owner||e.sender,coinType:no})).data.filter(t=>!e.inputs.find(e=>{var r;return!!(null==(r=e.Object)?void 0:r.ImmOrOwnedObject)&&t.coinObjectId===e.Object.ImmOrOwnedObject.objectId})).map(e=>({objectId:e.coinObjectId,digest:e.digest,version:e.version}));if(!r.length)throw new Error("No valid gas coins found for the transaction.");e.gasConfig.payment=r.map(e=>ca(ma,e))}}(t,e)),await a()}}function fn(e,t){let r=!1;return e.getInputUses(t,(e,t)=>{if(t.MoveCall&&t.MoveCall._argumentTypes){const a=t.MoveCall.arguments.indexOf(e);r="&"!==t.MoveCall._argumentTypes[a].ref||r}"MakeMoveVec"!==t.$kind&&"MergeCoins"!==t.$kind&&"SplitCoins"!==t.$kind&&"TransferObjects"!==t.$kind||(r=!0)}),r}function mn(e,t){let r=!1;return e.getInputUses(t,(e,t)=>{if(t.MoveCall&&t.MoveCall._argumentTypes){const a=t.MoveCall.arguments.indexOf(e);r=function(e){if("object"!=typeof e.body||!("datatype"in e.body))return!1;return"0x2"===e.body.datatype.package&&"transfer"===e.body.datatype.module&&"Receiving"===e.body.datatype.type}(t.MoveCall._argumentTypes[a])||r}}),r}function gn(e,t){return!!e.inputs.some(e=>e.UnresolvedObject||e.UnresolvedPure)||!(t.onlyTransactionKind||e.gasConfig.price&&e.gasConfig.budget&&e.gasConfig.payment)}async function bn(e,t,r){var a;if(function(e){for(const t of e.commands)switch(t.$kind){case"SplitCoins":t.SplitCoins.amounts.forEach(t=>{yn(t,Pr.U64,e)});break;case"TransferObjects":yn(t.TransferObjects.address,Pr.Address,e)}}(e),!gn(e,t))return await vn(e),r();const o=function(e){if(!e.client)throw new Error("No sui client passed to Transaction#build, but transaction data was not sufficient to build offline.");return e.client}(t);return((null==(a=o.core)?void 0:a.resolveTransactionPlugin())??hn(o))(e,t,async()=>{await vn(e),await r()})}function vn(e){e.inputs.forEach((e,t)=>{if("Object"!==e.$kind&&"Pure"!==e.$kind)throw new Error(`Input at index ${t} has not been resolved.  Expected a Pure or Object input, but found ${JSON.stringify(e)}`)})}function yn(e,t,r){if("Input"!==e.$kind)return;const a=r.inputs[e.Input];"UnresolvedPure"===a.$kind&&(r.inputs[e.Input]=oo.Pure(t.serialize(a.UnresolvedPure.value)))}function wn(e){function t(t,r){if("string"==typeof t)return e($r(t).serialize(r));if(t instanceof Uint8Array||at(t))return e(t);throw new Error("tx.pure must be called either a bcs type name, or a serialized bcs value")}return t.u8=t=>e(Pr.U8.serialize(t)),t.u16=t=>e(Pr.U16.serialize(t)),t.u32=t=>e(Pr.U32.serialize(t)),t.u64=t=>e(Pr.U64.serialize(t)),t.u128=t=>e(Pr.U128.serialize(t)),t.u256=t=>e(Pr.U256.serialize(t)),t.bool=t=>e(Pr.Bool.serialize(t)),t.string=t=>e(Pr.String.serialize(t)),t.address=t=>e(Pr.Address.serialize(t)),t.id=t.address,t.vector=(t,r)=>e(Pr.vector($r(t)).serialize(r)),t.option=(t,r)=>e(Pr.option($r(t)).serialize(r)),t}function kn(e){return Ut(e).replace("0x","")}class xn{constructor(e){this.version=2,this.sender=(null==e?void 0:e.sender)??null,this.expiration=(null==e?void 0:e.expiration)??null,this.inputs=(null==e?void 0:e.inputs)??[],this.commands=(null==e?void 0:e.commands)??[],this.gasData=(null==e?void 0:e.gasData)??{budget:null,price:null,owner:null,payment:null}}static fromKindBytes(e){const t=Pr.TransactionKind.parse(e).ProgrammableTransaction;if(!t)throw new Error("Unable to deserialize from bytes.");return xn.restore({version:2,sender:null,expiration:null,gasData:{budget:null,owner:null,payment:null,price:null},inputs:t.inputs,commands:t.commands})}static fromBytes(e){const t=Pr.TransactionData.parse(e),r=null==t?void 0:t.V1,a=r.kind.ProgrammableTransaction;if(!r||!a)throw new Error("Unable to deserialize from bytes.");return xn.restore({version:2,sender:r.sender,expiration:r.expiration,gasData:r.gasData,inputs:a.inputs,commands:a.commands})}static restore(e){return 2===e.version?new xn(ca(Ia,e)):new xn(ca(Ia,function(e){var t,r,a;return ca(Ia,{version:2,sender:e.sender??null,expiration:e.expiration?"Epoch"in e.expiration?{Epoch:e.expiration.Epoch}:{None:!0}:null,gasData:{owner:e.gasConfig.owner??null,budget:(null==(t=e.gasConfig.budget)?void 0:t.toString())??null,price:(null==(r=e.gasConfig.price)?void 0:r.toString())??null,payment:(null==(a=e.gasConfig.payment)?void 0:a.map(e=>({digest:e.digest,objectId:e.objectId,version:e.version.toString()})))??null},inputs:e.inputs.map(e=>{if("Input"===e.kind){if(Fr(Ba,e.value)){const t=ca(Ba,e.value);if(t.Object){if(t.Object.ImmOrOwned)return{Object:{ImmOrOwnedObject:{objectId:t.Object.ImmOrOwned.objectId,version:String(t.Object.ImmOrOwned.version),digest:t.Object.ImmOrOwned.digest}}};if(t.Object.Shared)return{Object:{SharedObject:{mutable:t.Object.Shared.mutable??null,initialSharedVersion:t.Object.Shared.initialSharedVersion,objectId:t.Object.Shared.objectId}}};if(t.Object.Receiving)return{Object:{Receiving:{digest:t.Object.Receiving.digest,version:String(t.Object.Receiving.version),objectId:t.Object.Receiving.objectId}}};throw new Error("Invalid object input")}return{Pure:{bytes:fe(new Uint8Array(t.Pure))}}}return"object"===e.type?{UnresolvedObject:{objectId:e.value}}:{UnresolvedPure:{value:e.value}}}throw new Error("Invalid input")}),commands:e.transactions.map(e=>{switch(e.kind){case"MakeMoveVec":return{MakeMoveVec:{type:"Some"in e.type?Pt.tagToString(e.type.Some):null,elements:e.objects.map(e=>Wa(e))}};case"MergeCoins":return{MergeCoins:{destination:Wa(e.destination),sources:e.sources.map(e=>Wa(e))}};case"MoveCall":{const[t,r,a]=e.target.split("::");return{MoveCall:{package:t,module:r,function:a,typeArguments:e.typeArguments,arguments:e.arguments.map(e=>Wa(e))}}}case"Publish":return{Publish:{modules:e.modules.map(e=>fe(Uint8Array.from(e))),dependencies:e.dependencies}};case"SplitCoins":return{SplitCoins:{coin:Wa(e.coin),amounts:e.amounts.map(e=>Wa(e))}};case"TransferObjects":return{TransferObjects:{objects:e.objects.map(e=>Wa(e)),address:Wa(e.address)}};case"Upgrade":return{Upgrade:{modules:e.modules.map(e=>fe(Uint8Array.from(e))),dependencies:e.dependencies,package:e.packageId,ticket:Wa(e.ticket)}}}throw new Error(`Unknown transaction ${Object.keys(e)}`)})})}(e)))}static getDigestFromBytes(e){const t=function(e,t){const r=Array.from(`${e}::`).map(e=>e.charCodeAt(0)),a=new Uint8Array(r.length+t.length);return a.set(r),a.set(t,r.length),ln(a,{dkLen:32})}("TransactionData",e);return ue(t)}get gasConfig(){return this.gasData}set gasConfig(e){this.gasData=e}build({maxSizeBytes:e=1/0,overrides:t,onlyTransactionKind:r}={}){const a=this.inputs,o=this.commands,n={ProgrammableTransaction:{inputs:a,commands:o}};if(r)return Pr.TransactionKind.serialize(n,{maxSize:e}).toBytes();const i=(null==t?void 0:t.expiration)??this.expiration,s=(null==t?void 0:t.sender)??this.sender,c={...this.gasData,...null==t?void 0:t.gasConfig,...null==t?void 0:t.gasData};if(!s)throw new Error("Missing transaction sender");if(!c.budget)throw new Error("Missing gas budget");if(!c.payment)throw new Error("Missing gas payment");if(!c.price)throw new Error("Missing gas price");const l={sender:kn(s),expiration:i||{None:!0},gasData:{payment:c.payment,owner:kn(this.gasData.owner??s),price:BigInt(c.price),budget:BigInt(c.budget)},kind:{ProgrammableTransaction:{inputs:a,commands:o}}};return Pr.TransactionData.serialize({V1:l},{maxSize:e}).toBytes()}addInput(e,t){const r=this.inputs.length;return this.inputs.push(t),{Input:r,type:e,$kind:"Input"}}getInputUses(e,t){this.mapArguments((r,a)=>("Input"===r.$kind&&r.Input===e&&t(r,a),r))}mapCommandArguments(e,t){const r=this.commands[e];switch(r.$kind){case"MoveCall":r.MoveCall.arguments=r.MoveCall.arguments.map(a=>t(a,r,e));break;case"TransferObjects":r.TransferObjects.objects=r.TransferObjects.objects.map(a=>t(a,r,e)),r.TransferObjects.address=t(r.TransferObjects.address,r,e);break;case"SplitCoins":r.SplitCoins.coin=t(r.SplitCoins.coin,r,e),r.SplitCoins.amounts=r.SplitCoins.amounts.map(a=>t(a,r,e));break;case"MergeCoins":r.MergeCoins.destination=t(r.MergeCoins.destination,r,e),r.MergeCoins.sources=r.MergeCoins.sources.map(a=>t(a,r,e));break;case"MakeMoveVec":r.MakeMoveVec.elements=r.MakeMoveVec.elements.map(a=>t(a,r,e));break;case"Upgrade":r.Upgrade.ticket=t(r.Upgrade.ticket,r,e);break;case"$Intent":const a=r.$Intent.inputs;r.$Intent.inputs={};for(const[o,n]of Object.entries(a))r.$Intent.inputs[o]=Array.isArray(n)?n.map(a=>t(a,r,e)):t(n,r,e);break;case"Publish":break;default:throw new Error(`Unexpected transaction kind: ${r.$kind}`)}}mapArguments(e){for(const t of this.commands.keys())this.mapCommandArguments(t,e)}replaceCommand(e,t,r=e){if(!Array.isArray(t))return void(this.commands[e]=t);const a=t.length-1;this.commands.splice(e,1,...t),0!==a&&this.mapArguments((o,n,i)=>{if(i<e+t.length)return o;switch(o.$kind){case"Result":o.Result===e&&(o.Result=r),o.Result>e&&(o.Result+=a);break;case"NestedResult":o.NestedResult[0]===e&&(o.NestedResult[0]=r),o.NestedResult[0]>e&&(o.NestedResult[0]+=a)}return o})}getDigest(){const e=this.build({onlyTransactionKind:!1});return xn.getDigestFromBytes(e)}snapshot(){return ca(Ia,this)}shallowClone(){return new xn({version:this.version,sender:this.sender,expiration:this.expiration,gasData:{...this.gasData},inputs:[...this.inputs],commands:[...this.commands]})}}function jn(e){return"string"==typeof e?Ut(e):e.Object?e.Object.ImmOrOwnedObject?Ut(e.Object.ImmOrOwnedObject.objectId):e.Object.Receiving?Ut(e.Object.Receiving.objectId):Ut(e.Object.SharedObject.objectId):e.UnresolvedObject?Ut(e.UnresolvedObject.objectId):void 0}var zn,En,Sn,In,An,On,Tn,Bn,Un,Cn,Mn=e=>{throw TypeError(e)},$n=(e,t,r)=>t.has(e)||Mn("Cannot "+r),Pn=(e,t,r)=>($n(e,t,"read from private field"),r?r.call(e):t.get(e)),Rn=(e,t,r)=>t.has(e)?Mn("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),_n=(e,t,r,a)=>($n(e,t,"write to private field"),t.set(e,r),r),Vn=(e,t,r)=>($n(e,t,"access private method"),r);const Nn={"Mvr-Source":`@mysten/sui@${n}`};class qn{constructor({cache:e,url:t,pageSize:r=50,overrides:a}){Rn(this,An),Rn(this,zn),Rn(this,En),Rn(this,Sn),Rn(this,In),_n(this,zn,e),_n(this,En,t),_n(this,Sn,r),_n(this,In,{packages:null==a?void 0:a.packages,types:null==a?void 0:a.types}),function(e){if(null==e?void 0:e.packages)for(const[t,r]of Object.entries(e.packages)){if(!Et(t))throw new Error(`Invalid package name: ${t}`);if(!At(Ut(r)))throw new Error(`Invalid package ID: ${r}`)}if(null==e?void 0:e.types)for(const[t,r]of Object.entries(e.types)){if(Tt(t).typeParams.length>0)throw new Error("Type overrides must be first-level only. If you want to supply generic types, just pass each type individually.");if(!At(Tt(r).address))throw new Error(`Invalid type: ${r}`)}}(Pn(this,In))}async resolvePackage({package:e}){return{package:await Pn(this,An,On).load(e)}}async resolveType({type:e}){const t=[...Ln(e)],r=await Pn(this,An,Tn).loadMany(t),a={};for(let o=0;o<t.length;o++){const e=r[o];if(e instanceof Error)throw e;a[t[o]]=e}return{type:Dn(e,a)}}async resolve({types:e=[],packages:t=[]}){var r,a,o;const n=new Set;for(const p of e??[])Ln(p,n);const i=[...n],[s,c]=await Promise.all([i.length>0?Pn(this,An,Tn).loadMany(i):[],t.length>0?Pn(this,An,On).loadMany(t):[]]),l={...null==(r=Pn(this,In))?void 0:r.types};for(const[p,h]of i.entries()){const e=s[p];if(e instanceof Error)throw e;l[h]=e}const u={};for(const p of e??[]){const e=Dn(p,l);u[p]={type:e}}const d={};for(const[p,h]of(t??[]).entries()){const e=(null==(o=null==(a=Pn(this,In))?void 0:a.packages)?void 0:o[h])??c[p];if(e instanceof Error)throw e;d[h]={package:e}}return{types:u,packages:d}}}function Ln(e,t=new Set){if("string"==typeof e&&!Hn(e))return t;const r=Fn(e)?e:Tt(e);Hn(r.address)&&t.add(`${r.address}::${r.module}::${r.name}`);for(const a of r.typeParams)Ln(a,t);return t}function Dn(e,t){const r=Fn(e)?e:Tt(e),a=`${r.address}::${r.module}::${r.name}`,o=t[a];return Bt({...r,address:o?o.split("::")[0]:r.address,typeParams:r.typeParams.map(e=>Dn(e,t))})}function Hn(e){return e.includes("/")||e.includes("@")||e.includes(".sui")}function Fn(e){return"object"==typeof e&&"address"in e&&"module"in e&&"name"in e&&"typeParams"in e}function Kn(e){const t=new Set;for(const r of e)if(Hn(r)){if(!St(r))throw new Error(`Invalid type with names: ${r}`);t.add(r)}return t}zn=new WeakMap,En=new WeakMap,Sn=new WeakMap,In=new WeakMap,An=new WeakSet,On=function(){return Pn(this,zn).readSync(["#mvrPackageDataLoader",Pn(this,En)??""],()=>{var e;const t=new $e(async e=>{if(!Pn(this,En))throw new Error(`MVR Api URL is not set for the current client (resolving ${e.join(", ")})`);const t=await Vn(this,An,Bn).call(this,e);return e.map(e=>t[e]??new Error(`Failed to resolve package: ${e}`))}),r=null==(e=Pn(this,In))?void 0:e.packages;if(r)for(const[a,o]of Object.entries(r))t.prime(a,o);return t})},Tn=function(){return Pn(this,zn).readSync(["#mvrTypeDataLoader",Pn(this,En)??""],()=>{var e;const t=new $e(async e=>{if(!Pn(this,En))throw new Error(`MVR Api URL is not set for the current client (resolving ${e.join(", ")})`);const t=await Vn(this,An,Un).call(this,e);return e.map(e=>t[e]??new Error(`Failed to resolve type: ${e}`))}),r=null==(e=Pn(this,In))?void 0:e.types;if(r)for(const[a,o]of Object.entries(r))t.prime(a,o);return t})},Bn=async function(e){if(0===e.length)return{};const t=be(e,Pn(this,Sn)),r={};return await Promise.all(t.map(async e=>{var t;const a=await Vn(this,An,Cn).call(this,"/v1/resolution/bulk",{names:e});if(null==a?void 0:a.resolution)for(const o of Object.keys(null==a?void 0:a.resolution)){const e=null==(t=a.resolution[o])?void 0:t.package_id;e&&(r[o]=e)}})),r},Un=async function(e){if(0===e.length)return{};const t=be(e,Pn(this,Sn)),r={};return await Promise.all(t.map(async e=>{var t;const a=await Vn(this,An,Cn).call(this,"/v1/struct-definition/bulk",{types:e});if(null==a?void 0:a.resolution)for(const o of Object.keys(null==a?void 0:a.resolution)){const e=null==(t=a.resolution[o])?void 0:t.type_tag;e&&(r[o]=e)}})),r},Cn=async function(e,t){if(!Pn(this,En))throw new Error("MVR Api URL is not set for the current client");const r=await fetch(`${Pn(this,En)}${e}`,{method:"POST",headers:{"Content-Type":"application/json",...Nn},body:JSON.stringify(t)});if(!r.ok){const e=await r.json().catch(()=>({}));throw new Error(`Failed to resolve types: ${null==e?void 0:e.message}`)}return r.json()};const Wn=e=>async(e,t,r)=>{const a=function(e){const t=new Set,r=new Set;for(const a of e.commands)switch(a.$kind){case"MakeMoveVec":a.MakeMoveVec.type&&Kn([a.MakeMoveVec.type]).forEach(e=>{r.add(e)});break;case"MoveCall":const e=a.MoveCall,o=e.package.split("::")[0];if(Hn(o)){if(!Et(o))throw new Error(`Invalid package name: ${o}`);t.add(o)}Kn(e.typeArguments??[]).forEach(e=>{r.add(e)})}return{packages:[...t],types:[...r]}}(e);if(0===a.types.length&&0===a.packages.length)return r();const o=await function(e){if(!e.client)throw new Error("No sui client passed to Transaction#build, but transaction data was not sufficient to build offline.");return e.client}(t).core.mvr.resolve({types:a.types,packages:a.packages});!function(e,t){var r;for(const a of e.commands){if(null==(r=a.MakeMoveVec)?void 0:r.type){if(!Hn(a.MakeMoveVec.type))continue;if(!t.types[a.MakeMoveVec.type])throw new Error(`No resolution found for type: ${a.MakeMoveVec.type}`);a.MakeMoveVec.type=t.types[a.MakeMoveVec.type].type}const e=a.MoveCall;if(!e)continue;const o=e.package.split("::"),n=o[0];if(Hn(n)&&!t.packages[n])throw new Error(`No address found for package: ${n}`);Hn(n)&&(o[0]=t.packages[n].package,e.package=o.join("::"));const i=e.typeArguments;if(i){for(let e=0;e<i.length;e++)if(Hn(i[e])){if(!t.types[i[e]])throw new Error(`No resolution found for type: ${i[e]}`);i[e]=t.types[i[e]].type}e.typeArguments=i}}}(e,o),await r()};var Gn,Zn,Jn,Yn,Xn,Qn,ei,ti,ri,ai,oi,ni,ii,si,ci,li,ui,di,pi,hi=e=>{throw TypeError(e)},fi=(e,t,r)=>t.has(e)||hi("Cannot "+r),mi=(e,t,r)=>(fi(e,t,"read from private field"),r?r.call(e):t.get(e)),gi=(e,t,r)=>t.has(e)?hi("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,r),bi=(e,t,r,a)=>(fi(e,t,"write to private field"),t.set(e,r),r),vi=(e,t,r)=>(fi(e,t,"access private method"),r);function yi(e,t=1/0){const r=[],a=t=>r[t]??(r[t]={$kind:"NestedResult",get NestedResult(){return["function"==typeof e?e():e,t]}});return new Proxy({$kind:"Result",get Result(){return"function"==typeof e?e():e}},{set(){throw new Error("The transaction result is a proxy, and does not support setting properties directly")},get(e,r){if(r in e)return Reflect.get(e,r);if(r===Symbol.iterator)return function*(){let e=0;for(;e<t;)yield a(e),e++};if("symbol"==typeof r)return;const o=parseInt(r,10);return Number.isNaN(o)||o<0?void 0:a(o)}})}const wi=Symbol.for("@mysten/transaction");function ki(e){return!!e&&"object"==typeof e&&!0===e[wi]}const xi={buildPlugins:new Map,serializationPlugins:new Map},ji=Symbol.for("@mysten/transaction/registry");function zi(){try{const e=globalThis;return e[ji]||(e[ji]=xi),e[ji]}catch(e){return xi}}const Ei=class e{constructor(){gi(this,ai),gi(this,Gn),gi(this,Zn),gi(this,Jn,new Map),gi(this,Yn,[]),gi(this,Xn,[]),gi(this,Qn,new Set),gi(this,ei,new Set),gi(this,ti,new Map),gi(this,ri),this.object=function(e){function t(t){return e(t)}return t.system=e=>{const r=null==e?void 0:e.mutable;return t(void 0!==r?oo.SharedObjectRef({objectId:"0x5",initialSharedVersion:1,mutable:r}):{$kind:"UnresolvedObject",UnresolvedObject:{objectId:"0x5",initialSharedVersion:1}})},t.clock=()=>t(oo.SharedObjectRef({objectId:"0x6",initialSharedVersion:1,mutable:!1})),t.random=()=>t({$kind:"UnresolvedObject",UnresolvedObject:{objectId:"0x8",mutable:!1}}),t.denyList=e=>t({$kind:"UnresolvedObject",UnresolvedObject:{objectId:"0x403",mutable:null==e?void 0:e.mutable}}),t.option=({type:e,value:t})=>r=>r.moveCall({typeArguments:[e],target:"0x1::option::"+(null===t?"none":"some"),arguments:null===t?[]:[r.object(t)]}),t}(e=>{var t,r;if("function"==typeof e)return this.object(this.add(e));if("object"==typeof e&&Fr(ga,e))return e;const a=jn(e),o=mi(this,ri).inputs.find(e=>a===jn(e));return(null==(t=null==o?void 0:o.Object)?void 0:t.SharedObject)&&"object"==typeof e&&(null==(r=e.Object)?void 0:r.SharedObject)&&(o.Object.SharedObject.mutable=o.Object.SharedObject.mutable||e.Object.SharedObject.mutable),o?{$kind:"Input",Input:mi(this,ri).inputs.indexOf(o),type:"object"}:vi(this,ai,ii).call(this,"object","string"==typeof e?{$kind:"UnresolvedObject",UnresolvedObject:{objectId:Ut(e)}}:e)});const e=zi();bi(this,ri,new xn),bi(this,Zn,[...e.buildPlugins.values()]),bi(this,Gn,[...e.serializationPlugins.values()])}static fromKind(t){const r=new e;return bi(r,ri,xn.fromKindBytes("string"==typeof t?pe(t):t)),bi(r,Yn,mi(r,ri).inputs.slice()),bi(r,Xn,mi(r,ri).commands.slice()),bi(r,Qn,new Set(mi(r,Xn).map((e,t)=>t))),r}static from(t){const r=new e;return ki(t)?bi(r,ri,new xn(t.getData())):"string"==typeof t&&t.startsWith("{")?bi(r,ri,xn.restore(JSON.parse(t))):bi(r,ri,xn.fromBytes("string"==typeof t?pe(t):t)),bi(r,Yn,mi(r,ri).inputs.slice()),bi(r,Xn,mi(r,ri).commands.slice()),bi(r,Qn,new Set(mi(r,Xn).map((e,t)=>t))),r}static registerGlobalSerializationPlugin(e,t){zi().serializationPlugins.set(e,t??e)}static unregisterGlobalSerializationPlugin(e){zi().serializationPlugins.delete(e)}static registerGlobalBuildPlugin(e,t){zi().buildPlugins.set(e,t??e)}static unregisterGlobalBuildPlugin(e){zi().buildPlugins.delete(e)}addSerializationPlugin(e){mi(this,Gn).push(e)}addBuildPlugin(e){mi(this,Zn).push(e)}addIntentResolver(e,t){if(mi(this,Jn).has(e)&&mi(this,Jn).get(e)!==t)throw new Error(`Intent resolver for ${e} already exists`);mi(this,Jn).set(e,t)}setSender(e){mi(this,ri).sender=e}setSenderIfNotSet(e){mi(this,ri).sender||(mi(this,ri).sender=e)}setExpiration(e){mi(this,ri).expiration=e?ca(Sa,e):null}setGasPrice(e){mi(this,ri).gasConfig.price=String(e)}setGasBudget(e){mi(this,ri).gasConfig.budget=String(e)}setGasBudgetIfNotSet(e){null==mi(this,ri).gasData.budget&&(mi(this,ri).gasConfig.budget=String(e))}setGasOwner(e){mi(this,ri).gasConfig.owner=e}setGasPayment(e){mi(this,ri).gasConfig.payment=e.map(e=>ca(ma,e))}get blockData(){return Fa(mi(this,ri).snapshot())}getData(){return mi(this,ri).snapshot()}get[wi](){return!0}get pure(){return Object.defineProperty(this,"pure",{enumerable:!1,value:wn(e=>at(e)?vi(this,ai,ii).call(this,"pure",{$kind:"Pure",Pure:{bytes:e.toBase64()}}):vi(this,ai,ii).call(this,"pure",Fr(Ea,e)?ca(Ea,e):e instanceof Uint8Array?oo.Pure(e):{$kind:"UnresolvedPure",UnresolvedPure:{value:e}}))}),this.pure}get gas(){return{$kind:"GasCoin",GasCoin:!0}}objectRef(...e){return this.object(oo.ObjectRef(...e))}receivingRef(...e){return this.object(oo.ReceivingRef(...e))}sharedObjectRef(...e){return this.object(oo.SharedObjectRef(...e))}add(e){if("function"==typeof e){if(mi(this,ti).has(e))return mi(this,ti).get(e);const t=vi(this,ai,oi).call(this),r=e(t);if(!r||"object"!=typeof r||!("then"in r))return bi(this,Qn,mi(t,Qn)),mi(this,ti).set(e,r),r;const a=vi(this,ai,ni).call(this,{$kind:"$Intent",$Intent:{name:"AsyncTransactionThunk",inputs:{},data:{resultIndex:mi(this,ri).commands.length,result:null}}});mi(this,ei).add(Promise.resolve(r).then(e=>{a.$Intent.data.result=e}));const o=yi(()=>a.$Intent.data.resultIndex);return mi(this,ti).set(e,o),o}return vi(this,ai,ni).call(this,e),yi(mi(this,ri).commands.length-1)}splitCoins(e,t){const r=Aa.SplitCoins("string"==typeof e?this.object(e):vi(this,ai,ci).call(this,e),t.map(e=>"number"==typeof e||"bigint"==typeof e||"string"==typeof e?this.pure.u64(e):vi(this,ai,si).call(this,e)));return vi(this,ai,ni).call(this,r),yi(mi(this,ri).commands.length-1,t.length)}mergeCoins(e,t){return this.add(Aa.MergeCoins(this.object(e),t.map(e=>this.object(e))))}publish({modules:e,dependencies:t}){return this.add(Aa.Publish({modules:e,dependencies:t}))}upgrade({modules:e,dependencies:t,package:r,ticket:a}){return this.add(Aa.Upgrade({modules:e,dependencies:t,package:r,ticket:this.object(a)}))}moveCall({arguments:e,...t}){return this.add(Aa.MoveCall({...t,arguments:null==e?void 0:e.map(e=>vi(this,ai,si).call(this,e))}))}transferObjects(e,t){return this.add(Aa.TransferObjects(e.map(e=>this.object(e)),"string"==typeof t?this.pure.address(t):vi(this,ai,si).call(this,t)))}makeMoveVec({type:e,elements:t}){return this.add(Aa.MakeMoveVec({type:e,elements:t.map(e=>this.object(e))}))}serialize(){return JSON.stringify(Fa(mi(this,ri).snapshot()))}async toJSON(e={}){await this.prepareForSerialization(e);const t=this.isFullyResolved();return JSON.stringify(ca(ao,t?{...mi(this,ri).snapshot(),digest:mi(this,ri).getDigest()}:mi(this,ri).snapshot()),(e,t)=>"bigint"==typeof t?t.toString():t,2)}async sign(e){const{signer:t,...r}=e,a=await this.build(r);return t.signTransaction(a)}isFullyResolved(){return!!mi(this,ri).sender&&(!(mi(this,ei).size>0)&&(!mi(this,ri).commands.some(e=>e.$Intent)&&!gn(mi(this,ri),{})))}async build(e={}){return await this.prepareForSerialization(e),await vi(this,ai,li).call(this,e),mi(this,ri).build({onlyTransactionKind:e.onlyTransactionKind})}async getDigest(e={}){return await this.prepareForSerialization(e),await vi(this,ai,li).call(this,e),mi(this,ri).getDigest()}async prepareForSerialization(e){var t;await vi(this,ai,di).call(this),vi(this,ai,pi).call(this);const r=new Set;for(const o of mi(this,ri).commands)o.$Intent&&r.add(o.$Intent.name);const a=[...mi(this,Gn)];for(const o of r)if(!(null==(t=e.supportedIntents)?void 0:t.includes(o))){if(!mi(this,Jn).has(o))throw new Error(`Missing intent resolver for ${o}`);a.push(mi(this,Jn).get(o))}a.push(Wn()),await vi(this,ai,ui).call(this,a,e)}};Gn=new WeakMap,Zn=new WeakMap,Jn=new WeakMap,Yn=new WeakMap,Xn=new WeakMap,Qn=new WeakMap,ei=new WeakMap,ti=new WeakMap,ri=new WeakMap,ai=new WeakSet,oi=function(){const e=new Ei;return bi(e,ri,mi(this,ri)),bi(e,Gn,mi(this,Gn)),bi(e,Zn,mi(this,Zn)),bi(e,Jn,mi(this,Jn)),bi(e,ei,mi(this,ei)),bi(e,Qn,new Set(mi(this,Qn))),bi(e,ti,mi(this,ti)),mi(this,Yn).push(mi(e,Yn)),mi(this,Xn).push(mi(e,Xn)),e},ni=function(e){const t=mi(this,ri).commands.length;return mi(this,Xn).push(e),mi(this,Qn).add(t),mi(this,ri).commands.push(e),mi(this,ri).mapCommandArguments(t,e=>{if("Result"===e.$kind&&!mi(this,Qn).has(e.Result))throw new Error(`Result { Result: ${e.Result} } is not available to use the current transaction`);if("NestedResult"===e.$kind&&!mi(this,Qn).has(e.NestedResult[0]))throw new Error(`Result { NestedResult: [${e.NestedResult[0]}, ${e.NestedResult[1]}] } is not available to use the current transaction`);if("Input"===e.$kind&&e.Input>=mi(this,ri).inputs.length)throw new Error(`Input { Input: ${e.Input} } references an input that does not exist in the current transaction`);return e}),e},ii=function(e,t){return mi(this,Yn).push(t),mi(this,ri).addInput(e,t)},si=function(e){return at(e)?this.pure(e):vi(this,ai,ci).call(this,e)},ci=function(e){if("function"==typeof e){const t=this.add(e);return"function"==typeof t?vi(this,ai,ci).call(this,t):ca(ga,t)}return ca(ga,e)},li=async function(e){if(!e.onlyTransactionKind&&!mi(this,ri).sender)throw new Error("Missing transaction sender");await vi(this,ai,ui).call(this,[...mi(this,Zn),bn],e)},ui=async function(e,t){try{const r=a=>{if(a>=e.length)return()=>{};const o=e[a];return async()=>{const e=r(a+1);let n=!1,i=!1;if(await o(mi(this,ri),t,async()=>{if(n)throw new Error(`next() was call multiple times in TransactionPlugin ${a}`);n=!0,await e(),i=!0}),!n)throw new Error(`next() was not called in TransactionPlugin ${a}`);if(!i)throw new Error(`next() was not awaited in TransactionPlugin ${a}`)}};await r(0)()}finally{bi(this,Yn,mi(this,ri).inputs.slice()),bi(this,Xn,mi(this,ri).commands.slice())}},di=async function(){for(;mi(this,ei).size>0;){const e=Promise.all(mi(this,ei));mi(this,ei).clear(),mi(this,ei).add(e),await e,mi(this,ei).delete(e)}},pi=function(){var e;const t=mi(this,ri).commands,r=mi(this,ri).inputs,a=mi(this,Xn).flat(1/0),o=mi(this,Yn).flat(1/0);if(a.length!==t.length)throw new Error("Unexpected number of commands found in transaction data");if(o.length!==r.length)throw new Error("Unexpected number of inputs found in transaction data");const n=a.filter(e=>{var t;return"AsyncTransactionThunk"!==(null==(t=e.$Intent)?void 0:t.name)});function i(e){var r;const a=t[e];if("AsyncTransactionThunk"===(null==(r=a.$Intent)?void 0:r.name)){const e=a.$Intent.data.result;if(null==e)throw new Error("AsyncTransactionThunk has not been resolved");return i(e.Result)}const o=n.indexOf(a);if(-1===o)throw new Error("Unable to find original index for command");return o}mi(this,ri).commands=n,mi(this,ri).inputs=o,bi(this,Xn,n),bi(this,Yn,o),bi(this,Qn,new Set(n.map((e,t)=>t))),mi(this,ri).mapArguments(e=>{if("Input"===e.$kind){const t=o.indexOf(r[e.Input]);if(-1===t)throw new Error("Input has not been resolved");return{...e,Input:t}}if("Result"===e.$kind){const t=i(e.Result);return{...e,Result:t}}if("NestedResult"===e.$kind){const t=i(e.NestedResult[0]);return{...e,NestedResult:[t,e.NestedResult[1]]}}return e});for(const[c,l]of t.entries())if("AsyncTransactionThunk"===(null==(e=l.$Intent)?void 0:e.name))try{l.$Intent.data.resultIndex=i(c)}catch(s){}};let Si=Ei;const Ii={mainnet:"https://mainnet.mvr.mystenlabs.com",testnet:"https://testnet.mvr.mystenlabs.com"};class Ai extends wt{constructor(e){var t,r,a;super(e),this.core=this,this.mvr=new qn({cache:this.cache.scope("core.mvr"),url:(null==(t=e.mvr)?void 0:t.url)??Ii[this.network],pageSize:null==(r=e.mvr)?void 0:r.pageSize,overrides:null==(a=e.mvr)?void 0:a.overrides})}async getObject(e){const{objectId:t}=e,{objects:[r]}=await this.getObjects({objectIds:[t],signal:e.signal});if(r instanceof Error)throw r;return{object:r}}async getDynamicField(e){const t=function(e,t,r){const a=Pr.Address.serialize(e).toBytes(),o=Pr.TypeTag.serialize(t).toBytes(),n=Pr.u64().serialize(r.length).toBytes(),i=ln.create({dkLen:32});return i.update(new Uint8Array([240])),i.update(a),i.update(n),i.update(r),i.update(o),`0x${ge(i.digest().slice(0,32))}`}(e.parentId,Pt.parseFromStr(e.name.type),e.name.bcs),{objects:[r]}=await this.getObjects({objectIds:[t],signal:e.signal});if(r instanceof Error)throw r;const a=Tt(r.type),o=await r.content;return{dynamicField:{id:r.id,digest:r.digest,version:r.version,type:r.type,name:{type:"string"==typeof a.typeParams[0]?a.typeParams[0]:Bt(a.typeParams[0]),bcs:e.name.bcs},value:{type:"string"==typeof a.typeParams[1]?a.typeParams[1]:Bt(a.typeParams[1]),bcs:o.slice(32+e.name.bcs.length)}}}}async waitForTransaction({signal:e,timeout:t=6e4,...r}){const a=e?AbortSignal.any([AbortSignal.timeout(t),e]):AbortSignal.timeout(t),o=new Promise((e,t)=>{a.addEventListener("abort",()=>t(a.reason))});for(o.catch(()=>{});;){a.throwIfAborted();try{return await this.getTransaction({...r,signal:a})}catch(n){await Promise.race([new Promise(e=>setTimeout(e,2e3)),o])}}}}class Oi extends Error{}class Ti extends Oi{constructor(e,t){super(t),this.code=e}static fromResponse(e,t){switch(e.code){case"notExists":return new Ti(e.code,`Object ${e.object_id} does not exist`);case"dynamicFieldNotFound":return new Ti(e.code,`Dynamic field not found for object ${e.parent_object_id}`);case"deleted":return new Ti(e.code,`Object ${e.object_id} has been deleted`);case"displayError":return new Ti(e.code,`Display error: ${e.error}`);default:return new Ti(e.code,"Unknown error while loading object"+(t?` ${t}`:""))}}}function Bi(e){const t=Pr.TransactionEffects.parse(e);switch(t.$kind){case"V1":return function(){throw new Error("V1 effects are not supported yet")}(t.V1);case"V2":return function({bytes:e,effects:t}){const r=t.changedObjects.map(([e,r])=>{var a,o,n,i,s,c;return{id:e,inputState:"Exist"===r.inputState.$kind?"Exists":"DoesNotExist",inputVersion:(null==(a=r.inputState.Exist)?void 0:a[0][0])??null,inputDigest:(null==(o=r.inputState.Exist)?void 0:o[0][1])??null,inputOwner:(null==(n=r.inputState.Exist)?void 0:n[1])??null,outputState:"NotExist"===r.outputState.$kind?"DoesNotExist":r.outputState.$kind,outputVersion:"PackageWrite"===r.outputState.$kind?null==(i=r.outputState.PackageWrite)?void 0:i[0]:r.outputState.ObjectWrite?t.lamportVersion:null,outputDigest:"PackageWrite"===r.outputState.$kind?null==(s=r.outputState.PackageWrite)?void 0:s[1]:(null==(c=r.outputState.ObjectWrite)?void 0:c[0])??null,outputOwner:r.outputState.ObjectWrite?r.outputState.ObjectWrite[1]:null,idOperation:r.idOperation.$kind}});return{bcs:e,digest:t.transactionDigest,version:2,status:"Success"===t.status.$kind?{success:!0,error:null}:{success:!1,error:t.status.Failed.error.$kind},gasUsed:t.gasUsed,transactionDigest:t.transactionDigest,gasObject:null===t.gasObjectIndex?null:r[t.gasObjectIndex]??null,eventsDigest:t.eventsDigest,dependencies:t.dependencies,lamportVersion:t.lamportVersion,changedObjects:r,unchangedSharedObjects:t.unchangedSharedObjects.map(([e,t])=>({kind:"MutateDeleted"===t.$kind?"MutateConsensusStreamEnded":"ReadDeleted"===t.$kind?"ReadConsensusStreamEnded":t.$kind,objectId:e,version:"ReadOnlyRoot"===t.$kind?t.ReadOnlyRoot[0]:t[t.$kind],digest:"ReadOnlyRoot"===t.$kind?t.ReadOnlyRoot[1]:null})),auxiliaryDataDigest:t.auxDataDigest}}({bytes:e,effects:t.V2});default:throw new Error(`Unknown transaction effects version: ${t.$kind}`)}}var Ui,Ci=e=>{throw TypeError(e)},Mi=(e,t,r)=>t.has(e)||Ci("Cannot "+r),$i=(e,t,r)=>(Mi(e,t,"read from private field"),r?r.call(e):t.get(e));class Pi extends Ai{constructor({jsonRpcClient:e,mvr:t}){var r,a,o;super({network:e.network,base:e,mvr:t}),r=this,(a=Ui).has(r)?Ci("Cannot add the same private member more than once"):a instanceof WeakSet?a.add(r):a.set(r,o),((e,t,r)=>{Mi(e,t,"write to private field"),t.set(e,r)})(this,Ui,e)}async getObjects(e){const t=be(e.objectIds,50),r=[];for(const a of t){const t=await $i(this,Ui).multiGetObjects({ids:a,options:{showOwner:!0,showType:!0,showBcs:!0},signal:e.signal});for(const[e,o]of t.entries())o.error?r.push(Ti.fromResponse(o.error,a[e])):r.push(Ri(o.data))}return{objects:r}}async getOwnedObjects(e){const t=await $i(this,Ui).getOwnedObjects({owner:e.address,limit:e.limit,cursor:e.cursor,options:{showOwner:!0,showType:!0,showBcs:!0},filter:e.type?{StructType:e.type}:null,signal:e.signal});return{objects:t.data.map(e=>{if(e.error)throw Ti.fromResponse(e.error);return Ri(e.data)}),hasNextPage:t.hasNextPage,cursor:t.nextCursor??null}}async getCoins(e){const t=await $i(this,Ui).getCoins({owner:e.address,coinType:e.coinType,limit:e.limit,cursor:e.cursor,signal:e.signal});return{objects:t.data.map(t=>({id:t.coinObjectId,version:t.version,digest:t.digest,balance:t.balance,type:`0x2::coin::Coin<${t.coinType}>`,content:Promise.resolve(qi.serialize({id:t.coinObjectId,balance:{value:t.balance}}).toBytes()),owner:{$kind:"ObjectOwner",ObjectOwner:e.address}})),hasNextPage:t.hasNextPage,cursor:t.nextCursor??null}}async getBalance(e){const t=await $i(this,Ui).getBalance({owner:e.address,coinType:e.coinType,signal:e.signal});return{balance:{coinType:t.coinType,balance:t.totalBalance}}}async getAllBalances(e){return{balances:(await $i(this,Ui).getAllBalances({owner:e.address,signal:e.signal})).map(e=>({coinType:e.coinType,balance:e.totalBalance})),hasNextPage:!1,cursor:null}}async getTransaction(e){return{transaction:Vi(await $i(this,Ui).getTransactionBlock({digest:e.digest,options:{showRawInput:!0,showObjectChanges:!0,showRawEffects:!0,showEvents:!0,showEffects:!0},signal:e.signal}))}}async executeTransaction(e){return{transaction:Vi(await $i(this,Ui).executeTransactionBlock({transactionBlock:e.transaction,signature:e.signatures,options:{showRawEffects:!0,showEvents:!0,showObjectChanges:!0,showRawInput:!0,showEffects:!0},signal:e.signal}))}}async dryRunTransaction(e){const t=Si.from(e.transaction),r=await $i(this,Ui).dryRunTransactionBlock({transactionBlock:e.transaction,signal:e.signal}),{effects:a,objectTypes:o}=function({bytes:e,effects:t,objectChanges:r}){var a;const o=[],n=[],i={};return null==r||r.forEach(e=>{var r,a,n,s;switch(e.type){case"published":o.push({id:e.packageId,inputState:"DoesNotExist",inputVersion:null,inputDigest:null,inputOwner:null,outputState:"PackageWrite",outputVersion:e.version,outputDigest:e.digest,outputOwner:null,idOperation:"Created"});break;case"transferred":o.push({id:e.objectId,inputState:"Exists",inputVersion:e.version,inputDigest:e.digest,inputOwner:{$kind:"AddressOwner",AddressOwner:e.sender},outputState:"ObjectWrite",outputVersion:e.version,outputDigest:e.digest,outputOwner:_i(e.recipient),idOperation:"None"}),i[e.objectId]=e.objectType;break;case"mutated":o.push({id:e.objectId,inputState:"Exists",inputVersion:e.previousVersion,inputDigest:null,inputOwner:_i(e.owner),outputState:"ObjectWrite",outputVersion:e.version,outputDigest:e.digest,outputOwner:_i(e.owner),idOperation:"None"}),i[e.objectId]=e.objectType;break;case"deleted":o.push({id:e.objectId,inputState:"Exists",inputVersion:e.version,inputDigest:(null==(a=null==(r=t.deleted)?void 0:r.find(t=>t.objectId===e.objectId))?void 0:a.digest)??null,inputOwner:null,outputState:"DoesNotExist",outputVersion:null,outputDigest:null,outputOwner:null,idOperation:"Deleted"}),i[e.objectId]=e.objectType;break;case"wrapped":o.push({id:e.objectId,inputState:"Exists",inputVersion:e.version,inputDigest:null,inputOwner:{$kind:"AddressOwner",AddressOwner:e.sender},outputState:"ObjectWrite",outputVersion:e.version,outputDigest:(null==(s=null==(n=t.wrapped)?void 0:n.find(t=>t.objectId===e.objectId))?void 0:s.digest)??null,outputOwner:{$kind:"ObjectOwner",ObjectOwner:e.sender},idOperation:"None"}),i[e.objectId]=e.objectType;break;case"created":o.push({id:e.objectId,inputState:"DoesNotExist",inputVersion:null,inputDigest:null,inputOwner:null,outputState:"ObjectWrite",outputVersion:e.version,outputDigest:e.digest,outputOwner:_i(e.owner),idOperation:"Created"}),i[e.objectId]=e.objectType}}),{objectTypes:i,effects:{bcs:e??null,digest:t.transactionDigest,version:2,status:"success"===t.status.status?{success:!0,error:null}:{success:!1,error:t.status.error},gasUsed:t.gasUsed,transactionDigest:t.transactionDigest,gasObject:{id:null==(a=t.gasObject)?void 0:a.reference.objectId,inputState:"Exists",inputVersion:null,inputDigest:null,inputOwner:null,outputState:"ObjectWrite",outputVersion:t.gasObject.reference.version,outputDigest:t.gasObject.reference.digest,outputOwner:_i(t.gasObject.owner),idOperation:"None"},eventsDigest:t.eventsDigest??null,dependencies:t.dependencies??[],lamportVersion:t.gasObject.reference.version,changedObjects:o,unchangedSharedObjects:n,auxiliaryDataDigest:null}}}({effects:r.effects,objectChanges:r.objectChanges});return{transaction:{digest:await t.getDigest(),epoch:null,effects:a,objectTypes:Promise.resolve(o),signatures:[],transaction:(n=e.transaction,{...xn.fromBytes(n).snapshot(),bcs:n})}};var n}async getReferenceGasPrice(e){const t=await $i(this,Ui).getReferenceGasPrice({signal:null==e?void 0:e.signal});return{referenceGasPrice:String(t)}}async getDynamicFields(e){const t=await $i(this,Ui).getDynamicFields({parentId:e.parentId,limit:e.limit,cursor:e.cursor});return{dynamicFields:t.data.map(e=>({id:e.objectId,type:e.objectType,name:{type:e.name.type,bcs:pe(e.bcsName)}})),hasNextPage:t.hasNextPage,cursor:t.nextCursor}}async verifyZkLoginSignature(e){const t=await $i(this,Ui).verifyZkLoginSignature({bytes:e.bytes,signature:e.signature,intentScope:e.intentScope,author:e.author});return{success:t.success,errors:t.errors}}resolveNameServiceNames(e){return $i(this,Ui).resolveNameServiceNames(e)}resolveTransactionPlugin(){return hn($i(this,Ui))}}function Ri(e){var t;return{id:e.objectId,version:e.version,digest:e.digest,type:e.type,content:Promise.resolve("moveObject"===(null==(t=e.bcs)?void 0:t.dataType)?pe(e.bcs.bcsBytes):new Uint8Array),owner:_i(e.owner)}}function _i(e){if("Immutable"===e)return{$kind:"Immutable",Immutable:!0};if("ConsensusAddressOwner"in e)return{$kind:"ConsensusAddressOwner",ConsensusAddressOwner:{owner:e.ConsensusAddressOwner.owner,startVersion:e.ConsensusAddressOwner.start_version}};if("AddressOwner"in e)return{$kind:"AddressOwner",AddressOwner:e.AddressOwner};if("ObjectOwner"in e)return{$kind:"ObjectOwner",ObjectOwner:e.ObjectOwner};if("Shared"in e)return{$kind:"Shared",Shared:{initialSharedVersion:e.Shared.initial_shared_version}};throw new Error(`Unknown owner type: ${JSON.stringify(e)}`)}function Vi(e){var t,r;const a=Pr.SenderSignedData.parse(pe(e.rawTransaction))[0],o={};null==(t=e.objectChanges)||t.forEach(e=>{"published"!==e.type&&(o[e.objectId]=e.objectType)});const n=Pr.TransactionData.serialize(a.intentMessage.value).toBytes(),i=xn.restore({version:2,sender:a.intentMessage.value.V1.sender,expiration:a.intentMessage.value.V1.expiration,gasData:a.intentMessage.value.V1.gasData,inputs:a.intentMessage.value.V1.kind.ProgrammableTransaction.inputs,commands:a.intentMessage.value.V1.kind.ProgrammableTransaction.commands});return{digest:e.digest,epoch:(null==(r=e.effects)?void 0:r.executedEpoch)??null,effects:Bi(new Uint8Array(e.rawEffects)),objectTypes:Promise.resolve(o),transaction:{...i,bcs:n},signatures:a.txSignatures}}Ui=new WeakMap;const Ni=Pr.struct("Balance",{value:Pr.u64()}),qi=Pr.struct("Coin",{id:Pr.Address,balance:Ni}),Li=Symbol.for("@mysten/SuiClient");class Di extends wt{constructor(e){super({network:e.network??"unknown"}),this.jsonRpc=this,this.transport=e.transport??new _({url:e.url}),this.core=new Pi({jsonRpcClient:this,mvr:e.mvr})}get[Li](){return!0}async getRpcApiVersion({signal:e}={}){return(await this.transport.request({method:"rpc.discover",params:[],signal:e})).info.version}async getCoins({coinType:e,owner:t,cursor:r,limit:a,signal:o}){if(!t||!At(Ut(t)))throw new Error("Invalid Sui address");return e&&Hn(e)&&(e=(await this.core.mvr.resolveType({type:e})).type),await this.transport.request({method:"suix_getCoins",params:[t,e,r,a],signal:o})}async getAllCoins(e){if(!e.owner||!At(Ut(e.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getAllCoins",params:[e.owner,e.cursor,e.limit],signal:e.signal})}async getBalance({owner:e,coinType:t,signal:r}){if(!e||!At(Ut(e)))throw new Error("Invalid Sui address");return t&&Hn(t)&&(t=(await this.core.mvr.resolveType({type:t})).type),await this.transport.request({method:"suix_getBalance",params:[e,t],signal:r})}async getAllBalances(e){if(!e.owner||!At(Ut(e.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getAllBalances",params:[e.owner],signal:e.signal})}async getCoinMetadata({coinType:e,signal:t}){return e&&Hn(e)&&(e=(await this.core.mvr.resolveType({type:e})).type),await this.transport.request({method:"suix_getCoinMetadata",params:[e],signal:t})}async getTotalSupply({coinType:e,signal:t}){return e&&Hn(e)&&(e=(await this.core.mvr.resolveType({type:e})).type),await this.transport.request({method:"suix_getTotalSupply",params:[e],signal:t})}async call(e,t,{signal:r}={}){return await this.transport.request({method:e,params:t,signal:r})}async getMoveFunctionArgTypes({package:e,module:t,function:r,signal:a}){return e&&Et(e)&&(e=(await this.core.mvr.resolvePackage({package:e})).package),await this.transport.request({method:"sui_getMoveFunctionArgTypes",params:[e,t,r],signal:a})}async getNormalizedMoveModulesByPackage({package:e,signal:t}){return e&&Et(e)&&(e=(await this.core.mvr.resolvePackage({package:e})).package),await this.transport.request({method:"sui_getNormalizedMoveModulesByPackage",params:[e],signal:t})}async getNormalizedMoveModule({package:e,module:t,signal:r}){return e&&Et(e)&&(e=(await this.core.mvr.resolvePackage({package:e})).package),await this.transport.request({method:"sui_getNormalizedMoveModule",params:[e,t],signal:r})}async getNormalizedMoveFunction({package:e,module:t,function:r,signal:a}){return e&&Et(e)&&(e=(await this.core.mvr.resolvePackage({package:e})).package),await this.transport.request({method:"sui_getNormalizedMoveFunction",params:[e,t,r],signal:a})}async getNormalizedMoveStruct({package:e,module:t,struct:r,signal:a}){return e&&Et(e)&&(e=(await this.core.mvr.resolvePackage({package:e})).package),await this.transport.request({method:"sui_getNormalizedMoveStruct",params:[e,t,r],signal:a})}async getOwnedObjects(e){if(!e.owner||!At(Ut(e.owner)))throw new Error("Invalid Sui address");const t=e.filter?{...e.filter}:void 0;return t&&"MoveModule"in t&&Et(t.MoveModule.package)?t.MoveModule={module:t.MoveModule.module,package:(await this.core.mvr.resolvePackage({package:t.MoveModule.package})).package}:t&&"StructType"in t&&Hn(t.StructType)&&(t.StructType=(await this.core.mvr.resolveType({type:t.StructType})).type),await this.transport.request({method:"suix_getOwnedObjects",params:[e.owner,{filter:t,options:e.options},e.cursor,e.limit],signal:e.signal})}async getObject(e){if(!e.id||!Ot(Ct(e.id)))throw new Error("Invalid Sui Object id");return await this.transport.request({method:"sui_getObject",params:[e.id,e.options],signal:e.signal})}async tryGetPastObject(e){return await this.transport.request({method:"sui_tryGetPastObject",params:[e.id,e.version,e.options],signal:e.signal})}async multiGetObjects(e){e.ids.forEach(e=>{if(!e||!Ot(Ct(e)))throw new Error(`Invalid Sui Object id ${e}`)});if(e.ids.length!==new Set(e.ids).size)throw new Error(`Duplicate object ids in batch call ${e.ids}`);return await this.transport.request({method:"sui_multiGetObjects",params:[e.ids,e.options],signal:e.signal})}async queryTransactionBlocks({filter:e,options:t,cursor:r,limit:a,order:o,signal:n}){return e&&"MoveFunction"in e&&Et(e.MoveFunction.package)&&(e={...e,MoveFunction:{package:(await this.core.mvr.resolvePackage({package:e.MoveFunction.package})).package}}),await this.transport.request({method:"suix_queryTransactionBlocks",params:[{filter:e,options:t},r,a,"descending"===(o||"descending")],signal:n})}async getTransactionBlock(e){if(!It(e.digest))throw new Error("Invalid Transaction digest");return await this.transport.request({method:"sui_getTransactionBlock",params:[e.digest,e.options],signal:e.signal})}async multiGetTransactionBlocks(e){e.digests.forEach(e=>{if(!It(e))throw new Error(`Invalid Transaction digest ${e}`)});if(e.digests.length!==new Set(e.digests).size)throw new Error(`Duplicate digests in batch call ${e.digests}`);return await this.transport.request({method:"sui_multiGetTransactionBlocks",params:[e.digests,e.options],signal:e.signal})}async executeTransactionBlock({transactionBlock:e,signature:t,options:r,requestType:a,signal:o}){const n=await this.transport.request({method:"sui_executeTransactionBlock",params:["string"==typeof e?e:fe(e),Array.isArray(t)?t:[t],r],signal:o});if("WaitForLocalExecution"===a)try{await this.waitForTransaction({digest:n.digest})}catch(i){}return n}async signAndExecuteTransaction({transaction:e,signer:t,...r}){let a;e instanceof Uint8Array?a=e:(e.setSenderIfNotSet(t.toSuiAddress()),a=await e.build({client:this}));const{signature:o,bytes:n}=await t.signTransaction(a);return this.executeTransactionBlock({transactionBlock:n,signature:o,...r})}async getTotalTransactionBlocks({signal:e}={}){const t=await this.transport.request({method:"sui_getTotalTransactionBlocks",params:[],signal:e});return BigInt(t)}async getReferenceGasPrice({signal:e}={}){const t=await this.transport.request({method:"suix_getReferenceGasPrice",params:[],signal:e});return BigInt(t)}async getStakes(e){if(!e.owner||!At(Ut(e.owner)))throw new Error("Invalid Sui address");return await this.transport.request({method:"suix_getStakes",params:[e.owner],signal:e.signal})}async getStakesByIds(e){return e.stakedSuiIds.forEach(e=>{if(!e||!Ot(Ct(e)))throw new Error(`Invalid Sui Stake id ${e}`)}),await this.transport.request({method:"suix_getStakesByIds",params:[e.stakedSuiIds],signal:e.signal})}async getLatestSuiSystemState({signal:e}={}){return await this.transport.request({method:"suix_getLatestSuiSystemState",params:[],signal:e})}async queryEvents({query:e,cursor:t,limit:r,order:a,signal:o}){return e&&"MoveEventType"in e&&Hn(e.MoveEventType)&&(e={...e,MoveEventType:(await this.core.mvr.resolveType({type:e.MoveEventType})).type}),e&&"MoveEventModule"in e&&Et(e.MoveEventModule.package)&&(e={...e,MoveEventModule:{module:e.MoveEventModule.module,package:(await this.core.mvr.resolvePackage({package:e.MoveEventModule.package})).package}}),"MoveModule"in e&&Et(e.MoveModule.package)&&(e={...e,MoveModule:{module:e.MoveModule.module,package:(await this.core.mvr.resolvePackage({package:e.MoveModule.package})).package}}),await this.transport.request({method:"suix_queryEvents",params:[e,t,r,"descending"===(a||"descending")],signal:o})}async subscribeEvent(e){return this.transport.subscribe({method:"suix_subscribeEvent",unsubscribe:"suix_unsubscribeEvent",params:[e.filter],onMessage:e.onMessage,signal:e.signal})}async subscribeTransaction(e){return this.transport.subscribe({method:"suix_subscribeTransaction",unsubscribe:"suix_unsubscribeTransaction",params:[e.filter],onMessage:e.onMessage,signal:e.signal})}async devInspectTransactionBlock(e){var t,r;let a;if(ki(e.transactionBlock))e.transactionBlock.setSenderIfNotSet(e.sender),a=fe(await e.transactionBlock.build({client:this,onlyTransactionKind:!0}));else if("string"==typeof e.transactionBlock)a=e.transactionBlock;else{if(!(e.transactionBlock instanceof Uint8Array))throw new Error("Unknown transaction block format.");a=fe(e.transactionBlock)}return null==(t=e.signal)||t.throwIfAborted(),await this.transport.request({method:"sui_devInspectTransactionBlock",params:[e.sender,a,null==(r=e.gasPrice)?void 0:r.toString(),e.epoch],signal:e.signal})}async dryRunTransactionBlock(e){return await this.transport.request({method:"sui_dryRunTransactionBlock",params:["string"==typeof e.transactionBlock?e.transactionBlock:fe(e.transactionBlock)]})}async getDynamicFields(e){if(!e.parentId||!Ot(Ct(e.parentId)))throw new Error("Invalid Sui Object id");return await this.transport.request({method:"suix_getDynamicFields",params:[e.parentId,e.cursor,e.limit],signal:e.signal})}async getDynamicFieldObject(e){return await this.transport.request({method:"suix_getDynamicFieldObject",params:[e.parentId,e.name],signal:e.signal})}async getLatestCheckpointSequenceNumber({signal:e}={}){const t=await this.transport.request({method:"sui_getLatestCheckpointSequenceNumber",params:[],signal:e});return String(t)}async getCheckpoint(e){return await this.transport.request({method:"sui_getCheckpoint",params:[e.id],signal:e.signal})}async getCheckpoints(e){return await this.transport.request({method:"sui_getCheckpoints",params:[e.cursor,null==e?void 0:e.limit,e.descendingOrder],signal:e.signal})}async getCommitteeInfo(e){return await this.transport.request({method:"suix_getCommitteeInfo",params:[null==e?void 0:e.epoch],signal:null==e?void 0:e.signal})}async getNetworkMetrics({signal:e}={}){return await this.transport.request({method:"suix_getNetworkMetrics",params:[],signal:e})}async getAddressMetrics({signal:e}={}){return await this.transport.request({method:"suix_getLatestAddressMetrics",params:[],signal:e})}async getEpochMetrics(e){return await this.transport.request({method:"suix_getEpochMetrics",params:[null==e?void 0:e.cursor,null==e?void 0:e.limit,null==e?void 0:e.descendingOrder],signal:null==e?void 0:e.signal})}async getAllEpochAddressMetrics(e){return await this.transport.request({method:"suix_getAllEpochAddressMetrics",params:[null==e?void 0:e.descendingOrder],signal:null==e?void 0:e.signal})}async getEpochs(e){return await this.transport.request({method:"suix_getEpochs",params:[null==e?void 0:e.cursor,null==e?void 0:e.limit,null==e?void 0:e.descendingOrder],signal:null==e?void 0:e.signal})}async getMoveCallMetrics({signal:e}={}){return await this.transport.request({method:"suix_getMoveCallMetrics",params:[],signal:e})}async getCurrentEpoch({signal:e}={}){return await this.transport.request({method:"suix_getCurrentEpoch",params:[],signal:e})}async getValidatorsApy({signal:e}={}){return await this.transport.request({method:"suix_getValidatorsApy",params:[],signal:e})}async getChainIdentifier({signal:e}={}){const t=await this.getCheckpoint({id:"0",signal:e});return ge(de(t.digest).slice(0,4))}async resolveNameServiceAddress(e){return await this.transport.request({method:"suix_resolveNameServiceAddress",params:[e.name],signal:e.signal})}async resolveNameServiceNames({format:e="dot",...t}){const{nextCursor:r,hasNextPage:a,data:o}=await this.transport.request({method:"suix_resolveNameServiceNames",params:[t.address,t.cursor,t.limit],signal:t.signal});return{hasNextPage:a,nextCursor:r,data:o.map(t=>function(e,t="at"){const r=e.toLowerCase();let a;if(r.includes("@")){if(!kt.test(r))throw new Error(`Invalid SuiNS name ${e}`);const[t,o]=r.split("@");a=[...t?t.split("."):[],o]}else{if(!xt.test(r))throw new Error(`Invalid SuiNS name ${e}`);a=r.split(".").slice(0,-1)}return"dot"===t?`${a.join(".")}.sui`:`${a.slice(0,-1).join(".")}@${a[a.length-1]}`}(t,e))}}async getProtocolConfig(e){return await this.transport.request({method:"sui_getProtocolConfig",params:[null==e?void 0:e.version],signal:null==e?void 0:e.signal})}async verifyZkLoginSignature(e){return await this.transport.request({method:"sui_verifyZkLoginSignature",params:[e.bytes,e.signature,e.intentScope,e.author],signal:e.signal})}async waitForTransaction({signal:e,timeout:t=6e4,pollInterval:r=2e3,...a}){const o=AbortSignal.timeout(t),n=new Promise((e,t)=>{o.addEventListener("abort",()=>t(o.reason))});for(n.catch(()=>{});!o.aborted;){null==e||e.throwIfAborted();try{return await this.getTransactionBlock(a)}catch(i){await Promise.race([new Promise(e=>setTimeout(e,r)),n])}}throw o.throwIfAborted(),new Error("Unexpected error while waiting for transaction block.")}experimental_asClientExtension(){return{name:"jsonRPC",register:()=>this}}}const Hi=(()=>function(e,t=!1){const r=e.length;let a=new Uint32Array(r),o=new Uint32Array(r);for(let n=0;n<r;n++){const{h:r,l:i}=Lo(e[n],t);[a[n],o[n]]=[r,i]}return[a,o]}(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))))(),Fi=(()=>Hi[0])(),Ki=(()=>Hi[1])(),Wi=new Uint32Array(80),Gi=new Uint32Array(80);let Zi=class extends _o{constructor(e=64){super(128,e,16,!1),this.Ah=0|Vo[0],this.Al=0|Vo[1],this.Bh=0|Vo[2],this.Bl=0|Vo[3],this.Ch=0|Vo[4],this.Cl=0|Vo[5],this.Dh=0|Vo[6],this.Dl=0|Vo[7],this.Eh=0|Vo[8],this.El=0|Vo[9],this.Fh=0|Vo[10],this.Fl=0|Vo[11],this.Gh=0|Vo[12],this.Gl=0|Vo[13],this.Hh=0|Vo[14],this.Hl=0|Vo[15]}get(){const{Ah:e,Al:t,Bh:r,Bl:a,Ch:o,Cl:n,Dh:i,Dl:s,Eh:c,El:l,Fh:u,Fl:d,Gh:p,Gl:h,Hh:f,Hl:m}=this;return[e,t,r,a,o,n,i,s,c,l,u,d,p,h,f,m]}set(e,t,r,a,o,n,i,s,c,l,u,d,p,h,f,m){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|a,this.Ch=0|o,this.Cl=0|n,this.Dh=0|i,this.Dl=0|s,this.Eh=0|c,this.El=0|l,this.Fh=0|u,this.Fl=0|d,this.Gh=0|p,this.Gl=0|h,this.Hh=0|f,this.Hl=0|m}process(e,t){for(let v=0;v<16;v++,t+=4)Wi[v]=e.getUint32(t),Gi[v]=e.getUint32(t+=4);for(let v=16;v<80;v++){const e=0|Wi[v-15],t=0|Gi[v-15],r=Fo(e,t,1)^Fo(e,t,8)^Do(e,0,7),a=Ko(e,t,1)^Ko(e,t,8)^Ho(e,t,7),o=0|Wi[v-2],n=0|Gi[v-2],i=Fo(o,n,19)^Wo(o,n,61)^Do(o,0,6),s=Ko(o,n,19)^Go(o,n,61)^Ho(o,n,6),c=Xo(a,s,Gi[v-7],Gi[v-16]),l=Qo(c,r,i,Wi[v-7],Wi[v-16]);Wi[v]=0|l,Gi[v]=0|c}let{Ah:r,Al:a,Bh:o,Bl:n,Ch:i,Cl:s,Dh:c,Dl:l,Eh:u,El:d,Fh:p,Fl:h,Gh:f,Gl:m,Hh:g,Hl:b}=this;for(let v=0;v<80;v++){const e=Fo(u,d,14)^Fo(u,d,18)^Wo(u,d,41),t=Ko(u,d,14)^Ko(u,d,18)^Go(u,d,41),y=u&p^~u&f,w=en(b,t,d&h^~d&m,Ki[v],Gi[v]),k=tn(w,g,e,y,Fi[v],Wi[v]),x=0|w,j=Fo(r,a,28)^Wo(r,a,34)^Wo(r,a,39),z=Ko(r,a,28)^Go(r,a,34)^Go(r,a,39),E=r&o^r&i^o&i,S=a&n^a&s^n&s;g=0|f,b=0|m,f=0|p,m=0|h,p=0|u,h=0|d,({h:u,l:d}=Zo(0|c,0|l,0|k,0|x)),c=0|i,l=0|s,i=0|o,s=0|n,o=0|r,n=0|a;const I=Jo(x,z,S);r=Yo(I,k,j,E),a=0|I}({h:r,l:a}=Zo(0|this.Ah,0|this.Al,0|r,0|a)),({h:o,l:n}=Zo(0|this.Bh,0|this.Bl,0|o,0|n)),({h:i,l:s}=Zo(0|this.Ch,0|this.Cl,0|i,0|s)),({h:c,l:l}=Zo(0|this.Dh,0|this.Dl,0|c,0|l)),({h:u,l:d}=Zo(0|this.Eh,0|this.El,0|u,0|d)),({h:p,l:h}=Zo(0|this.Fh,0|this.Fl,0|p,0|h)),({h:f,l:m}=Zo(0|this.Gh,0|this.Gl,0|f,0|m)),({h:g,l:b}=Zo(0|this.Hh,0|this.Hl,0|g,0|b)),this.set(r,a,o,n,i,s,c,l,u,d,p,h,f,m,g,b)}roundClean(){fo(Wi,Gi)}destroy(){fo(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}};const Ji=Mo(()=>new Zi),Yi=BigInt(0),Xi=BigInt(1);
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function Qi(e,t=""){if("boolean"!=typeof e){throw new Error((t&&`"${t}"`)+"expected boolean, got type="+typeof e)}return e}function es(e,t,r=""){const a=so(e),o=null==e?void 0:e.length,n=void 0!==t;if(!a||n&&o!==t){throw new Error((r&&`"${r}" `)+"expected Uint8Array"+(n?` of length ${t}`:"")+", got "+(a?`length=${o}`:"type="+typeof e))}return e}function ts(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return""===e?Yi:BigInt("0x"+e)}function rs(e){return lo(e),ts(xo(Uint8Array.from(e).reverse()))}function as(e,t){return To(e.toString(16).padStart(2*t,"0"))}function os(e,t,r){let a;if("string"==typeof t)try{a=To(t)}catch(n){throw new Error(e+" must be hex string or Uint8Array, cause: "+n)}else{if(!so(t))throw new Error(e+" must be hex string or Uint8Array");a=Uint8Array.from(t)}const o=a.length;if("number"==typeof r&&o!==r)throw new Error(e+" of length "+r+" expected, got "+o);return a}function ns(e){return Uint8Array.from(e)}const is=e=>"bigint"==typeof e&&Yi<=e;function ss(e,t,r,a){if(!function(e,t,r){return is(e)&&is(t)&&is(r)&&t<=e&&e<r}(t,r,a))throw new Error("expected valid "+e+": "+r+" <= n < "+a+", got "+t)}const cs=e=>(Xi<<BigInt(e))-Xi;function ls(e,t,r={}){if(!e||"object"!=typeof e)throw new Error("expected valid options object");function a(t,r,a){const o=e[t];if(a&&void 0===o)return;const n=typeof o;if(n!==r||null===o)throw new Error(`param "${t}" is invalid: expected ${r}, got ${n}`)}Object.entries(t).forEach(([e,t])=>a(e,t,!1)),Object.entries(r).forEach(([e,t])=>a(e,t,!0))}function us(e){const t=new WeakMap;return(r,...a)=>{const o=t.get(r);if(void 0!==o)return o;const n=e(r,...a);return t.set(r,n),n}}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const ds=BigInt(0),ps=BigInt(1),hs=BigInt(2),fs=BigInt(3),ms=BigInt(4),gs=BigInt(5),bs=BigInt(7),vs=BigInt(8),ys=BigInt(9),ws=BigInt(16);function ks(e,t){const r=e%t;return r>=ds?r:t+r}function xs(e,t,r){let a=e;for(;t-- >ds;)a*=a,a%=r;return a}function js(e,t){if(e===ds)throw new Error("invert: expected non-zero number");if(t<=ds)throw new Error("invert: expected positive modulus, got "+t);let r=ks(e,t),a=t,o=ds,n=ps;for(;r!==ds;){const e=a%r,t=o-n*(a/r);a=r,r=e,o=n,n=t}if(a!==ps)throw new Error("invert: does not exist");return ks(o,t)}function zs(e,t,r){if(!e.eql(e.sqr(t),r))throw new Error("Cannot find square root")}function Es(e,t){const r=(e.ORDER+ps)/ms,a=e.pow(t,r);return zs(e,a,t),a}function Ss(e,t){const r=(e.ORDER-gs)/vs,a=e.mul(t,hs),o=e.pow(a,r),n=e.mul(t,o),i=e.mul(e.mul(n,hs),o),s=e.mul(n,e.sub(i,e.ONE));return zs(e,s,t),s}function Is(e){if(e<fs)throw new Error("sqrt is not defined for small field");let t=e-ps,r=0;for(;t%hs===ds;)t/=hs,r++;let a=hs;const o=Us(e);for(;1===Bs(o,a);)if(a++>1e3)throw new Error("Cannot find square root: probably non-prime P");if(1===r)return Es;let n=o.pow(a,t);const i=(t+ps)/hs;return function(e,a){if(e.is0(a))return a;if(1!==Bs(e,a))throw new Error("Cannot find square root");let o=r,s=e.mul(e.ONE,n),c=e.pow(a,t),l=e.pow(a,i);for(;!e.eql(c,e.ONE);){if(e.is0(c))return e.ZERO;let t=1,r=e.sqr(c);for(;!e.eql(r,e.ONE);)if(t++,r=e.sqr(r),t===o)throw new Error("Cannot find square root");const a=ps<<BigInt(o-t-1),n=e.pow(s,a);o=t,s=e.sqr(n),c=e.mul(c,s),l=e.mul(l,n)}return l}}function As(e){return e%ms===fs?Es:e%vs===gs?Ss:e%ws===ys?function(e){const t=Us(e),r=Is(e),a=r(t,t.neg(t.ONE)),o=r(t,a),n=r(t,t.neg(a)),i=(e+bs)/ws;return(e,t)=>{let r=e.pow(t,i),s=e.mul(r,a);const c=e.mul(r,o),l=e.mul(r,n),u=e.eql(e.sqr(s),t),d=e.eql(e.sqr(c),t);r=e.cmov(r,s,u),s=e.cmov(l,c,d);const p=e.eql(e.sqr(s),t),h=e.cmov(r,s,p);return zs(e,h,t),h}}(e):Is(e)}const Os=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Ts(e,t,r=!1){const a=new Array(t.length).fill(r?e.ZERO:void 0),o=t.reduce((t,r,o)=>e.is0(r)?t:(a[o]=t,e.mul(t,r)),e.ONE),n=e.inv(o);return t.reduceRight((t,r,o)=>e.is0(r)?t:(a[o]=e.mul(t,a[o]),e.mul(t,r)),n),a}function Bs(e,t){const r=(e.ORDER-ps)/hs,a=e.pow(t,r),o=e.eql(a,e.ONE),n=e.eql(a,e.ZERO),i=e.eql(a,e.neg(e.ONE));if(!o&&!n&&!i)throw new Error("invalid Legendre symbol result");return o?1:n?0:-1}function Us(e,t,r=!1,a={}){if(e<=ds)throw new Error("invalid field: expected ORDER > 0, got "+e);let o,n,i,s=!1;if("object"==typeof t&&null!=t){if(a.sqrt||r)throw new Error("cannot specify opts in two arguments");const e=t;e.BITS&&(o=e.BITS),e.sqrt&&(n=e.sqrt),"boolean"==typeof e.isLE&&(r=e.isLE),"boolean"==typeof e.modFromBytes&&(s=e.modFromBytes),i=e.allowedLengths}else"number"==typeof t&&(o=t),a.sqrt&&(n=a.sqrt);const{nBitLength:c,nByteLength:l}=function(e,t){void 0!==t&&co(t);const r=void 0!==t?t:e.toString(2).length;return{nBitLength:r,nByteLength:Math.ceil(r/8)}}(e,o);if(l>2048)throw new Error("invalid field: expected ORDER of <= 2048 bytes");let u;const d=Object.freeze({ORDER:e,isLE:r,BITS:c,BYTES:l,MASK:cs(c),ZERO:ds,ONE:ps,allowedLengths:i,create:t=>ks(t,e),isValid:t=>{if("bigint"!=typeof t)throw new Error("invalid field element: expected bigint, got "+typeof t);return ds<=t&&t<e},is0:e=>e===ds,isValidNot0:e=>!d.is0(e)&&d.isValid(e),isOdd:e=>(e&ps)===ps,neg:t=>ks(-t,e),eql:(e,t)=>e===t,sqr:t=>ks(t*t,e),add:(t,r)=>ks(t+r,e),sub:(t,r)=>ks(t-r,e),mul:(t,r)=>ks(t*r,e),pow:(e,t)=>function(e,t,r){if(r<ds)throw new Error("invalid exponent, negatives unsupported");if(r===ds)return e.ONE;if(r===ps)return t;let a=e.ONE,o=t;for(;r>ds;)r&ps&&(a=e.mul(a,o)),o=e.sqr(o),r>>=ps;return a}(d,e,t),div:(t,r)=>ks(t*js(r,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>js(t,e),sqrt:n||(t=>(u||(u=As(e)),u(d,t))),toBytes:e=>r?as(e,l).reverse():as(e,l),fromBytes:(t,a=!0)=>{if(i){if(!i.includes(t.length)||t.length>l)throw new Error("Field.fromBytes: expected "+i+" bytes, got "+t.length);const e=new Uint8Array(l);e.set(t,r?0:e.length-t.length),t=e}if(t.length!==l)throw new Error("Field.fromBytes: expected "+l+" bytes, got "+t.length);let o=r?rs(t):function(e){return ts(xo(e))}(t);if(s&&(o=ks(o,e)),!a&&!d.isValid(o))throw new Error("invalid field element: outside of range 0..ORDER");return o},invertBatch:e=>Ts(d,e),cmov:(e,t,r)=>r?t:e});return Object.freeze(d)}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const Cs=BigInt(0),Ms=BigInt(1);function $s(e,t){const r=t.negate();return e?r:t}function Ps(e,t){const r=Ts(e.Fp,t.map(e=>e.Z));return t.map((t,a)=>e.fromAffine(t.toAffine(r[a])))}function Rs(e,t){if(!Number.isSafeInteger(e)||e<=0||e>t)throw new Error("invalid window size, expected [1.."+t+"], got W="+e)}function _s(e,t){Rs(e,t);const r=2**e;return{windows:Math.ceil(t/e)+1,windowSize:2**(e-1),mask:cs(e),maxNumber:r,shiftBy:BigInt(e)}}function Vs(e,t,r){const{windowSize:a,mask:o,maxNumber:n,shiftBy:i}=r;let s=Number(e&o),c=e>>i;s>a&&(s-=n,c+=Ms);const l=t*a;return{nextN:c,offset:l+Math.abs(s)-1,isZero:0===s,isNeg:s<0,isNegF:t%2!=0,offsetF:l}}const Ns=new WeakMap,qs=new WeakMap;function Ls(e){return qs.get(e)||1}function Ds(e){if(e!==Cs)throw new Error("invalid wNAF")}class Hs{constructor(e,t){this.BASE=e.BASE,this.ZERO=e.ZERO,this.Fn=e.Fn,this.bits=t}_unsafeLadder(e,t,r=this.ZERO){let a=e;for(;t>Cs;)t&Ms&&(r=r.add(a)),a=a.double(),t>>=Ms;return r}precomputeWindow(e,t){const{windows:r,windowSize:a}=_s(t,this.bits),o=[];let n=e,i=n;for(let s=0;s<r;s++){i=n,o.push(i);for(let e=1;e<a;e++)i=i.add(n),o.push(i);n=i.double()}return o}wNAF(e,t,r){if(!this.Fn.isValid(r))throw new Error("invalid scalar");let a=this.ZERO,o=this.BASE;const n=_s(e,this.bits);for(let i=0;i<n.windows;i++){const{nextN:e,offset:s,isZero:c,isNeg:l,isNegF:u,offsetF:d}=Vs(r,i,n);r=e,c?o=o.add($s(u,t[d])):a=a.add($s(l,t[s]))}return Ds(r),{p:a,f:o}}wNAFUnsafe(e,t,r,a=this.ZERO){const o=_s(e,this.bits);for(let n=0;n<o.windows&&r!==Cs;n++){const{nextN:e,offset:i,isZero:s,isNeg:c}=Vs(r,n,o);if(r=e,!s){const e=t[i];a=a.add(c?e.negate():e)}}return Ds(r),a}getPrecomputes(e,t,r){let a=Ns.get(t);return a||(a=this.precomputeWindow(t,e),1!==e&&("function"==typeof r&&(a=r(a)),Ns.set(t,a))),a}cached(e,t,r){const a=Ls(e);return this.wNAF(a,this.getPrecomputes(a,e,r),t)}unsafe(e,t,r,a){const o=Ls(e);return 1===o?this._unsafeLadder(e,t,a):this.wNAFUnsafe(o,this.getPrecomputes(o,e,r),t,a)}createCache(e,t){Rs(t,this.bits),qs.set(e,t),Ns.delete(e)}hasCache(e){return 1!==Ls(e)}}function Fs(e,t,r,a){!function(e,t){if(!Array.isArray(e))throw new Error("array expected");e.forEach((e,r)=>{if(!(e instanceof t))throw new Error("invalid point at index "+r)})}(r,e),function(e,t){if(!Array.isArray(e))throw new Error("array of scalars expected");e.forEach((e,r)=>{if(!t.isValid(e))throw new Error("invalid scalar at index "+r)})}(a,t);const o=r.length,n=a.length;if(o!==n)throw new Error("arrays of points and scalars must have equal length");const i=e.ZERO,s=function(e){let t;for(t=0;e>Yi;e>>=Xi,t+=1);return t}(BigInt(o));let c=1;s>12?c=s-3:s>4?c=s-2:s>0&&(c=2);const l=cs(c),u=new Array(Number(l)+1).fill(i);let d=i;for(let p=Math.floor((t.BITS-1)/c)*c;p>=0;p-=c){u.fill(i);for(let t=0;t<n;t++){const e=a[t],o=Number(e>>BigInt(p)&l);u[o]=u[o].add(r[t])}let e=i;for(let t=u.length-1,r=i;t>0;t--)r=r.add(u[t]),e=e.add(r);if(d=d.add(e),0!==p)for(let t=0;t<c;t++)d=d.double()}return d}function Ks(e,t,r){if(t){if(t.ORDER!==e)throw new Error("Field.ORDER must match order: Fp == p, Fn == n");return function(e){ls(e,Os.reduce((e,t)=>(e[t]="function",e),{ORDER:"bigint",MASK:"bigint",BYTES:"number",BITS:"number"}))}(t),t}return Us(e,{isLE:r})}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const Ws=BigInt(0),Gs=BigInt(1),Zs=BigInt(2),Js=BigInt(8);function Ys(e,t={}){const r=function(e,t,r={},a){if(void 0===a&&(a="edwards"===e),!t||"object"!=typeof t)throw new Error(`expected valid ${e} CURVE object`);for(const s of["p","n","h"]){const e=t[s];if(!("bigint"==typeof e&&e>Cs))throw new Error(`CURVE.${s} must be positive bigint`)}const o=Ks(t.p,r.Fp,a),n=Ks(t.n,r.Fn,a),i=["Gx","Gy","a","d"];for(const s of i)if(!o.isValid(t[s]))throw new Error(`CURVE.${s} must be valid field element of CURVE.Fp`);return{CURVE:t=Object.freeze(Object.assign({},t)),Fp:o,Fn:n}}("edwards",e,t,t.FpFnLE),{Fp:a,Fn:o}=r;let n=r.CURVE;const{h:i}=n;ls(t,{},{uvRatio:"function"});const s=Zs<<BigInt(8*o.BYTES)-Gs,c=e=>a.create(e),l=t.uvRatio||((e,t)=>{try{return{isValid:!0,value:a.sqrt(a.div(e,t))}}catch(r){return{isValid:!1,value:Ws}}});if(!function(e,t,r,a){const o=e.sqr(r),n=e.sqr(a),i=e.add(e.mul(t.a,o),n),s=e.add(e.ONE,e.mul(t.d,e.mul(o,n)));return e.eql(i,s)}(a,n,n.Gx,n.Gy))throw new Error("bad curve params: generator point");function u(e,t,r=!1){return ss("coordinate "+e,t,r?Gs:Ws,s),t}function d(e){if(!(e instanceof f))throw new Error("ExtendedPoint expected")}const p=us((e,t)=>{const{X:r,Y:o,Z:n}=e,i=e.is0();null==t&&(t=i?Js:a.inv(n));const s=c(r*t),l=c(o*t),u=a.mul(n,t);if(i)return{x:Ws,y:Gs};if(u!==Gs)throw new Error("invZ was invalid");return{x:s,y:l}}),h=us(e=>{const{a:t,d:r}=n;if(e.is0())throw new Error("bad point: ZERO");const{X:a,Y:o,Z:i,T:s}=e,l=c(a*a),u=c(o*o),d=c(i*i),p=c(d*d),h=c(l*t);if(c(d*c(h+u))!==c(p+c(r*c(l*u))))throw new Error("bad point: equation left != right (1)");if(c(a*o)!==c(i*s))throw new Error("bad point: equation left != right (2)");return!0});class f{constructor(e,t,r,a){this.X=u("x",e),this.Y=u("y",t),this.Z=u("z",r,!0),this.T=u("t",a),Object.freeze(this)}static CURVE(){return n}static fromAffine(e){if(e instanceof f)throw new Error("extended point not allowed");const{x:t,y:r}=e||{};return u("x",t),u("y",r),new f(t,r,Gs,c(t*r))}static fromBytes(e,t=!1){const r=a.BYTES,{a:o,d:i}=n;e=ns(es(e,r,"point")),Qi(t,"zip215");const u=ns(e),d=e[r-1];u[r-1]=-129&d;const p=rs(u),h=t?s:a.ORDER;ss("point.y",p,Ws,h);const m=c(p*p),g=c(m-Gs),b=c(i*m-o);let{isValid:v,value:y}=l(g,b);if(!v)throw new Error("bad point: invalid y coordinate");const w=(y&Gs)===Gs,k=!!(128&d);if(!t&&y===Ws&&k)throw new Error("bad point: x=0 and x_0=1");return k!==w&&(y=c(-y)),f.fromAffine({x:y,y:p})}static fromHex(e,t=!1){return f.fromBytes(os("point",e),t)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}precompute(e=8,t=!0){return m.createCache(this,e),t||this.multiply(Zs),this}assertValidity(){h(this)}equals(e){d(e);const{X:t,Y:r,Z:a}=this,{X:o,Y:n,Z:i}=e,s=c(t*i),l=c(o*a),u=c(r*i),p=c(n*a);return s===l&&u===p}is0(){return this.equals(f.ZERO)}negate(){return new f(c(-this.X),this.Y,this.Z,c(-this.T))}double(){const{a:e}=n,{X:t,Y:r,Z:a}=this,o=c(t*t),i=c(r*r),s=c(Zs*c(a*a)),l=c(e*o),u=t+r,d=c(c(u*u)-o-i),p=l+i,h=p-s,m=l-i,g=c(d*h),b=c(p*m),v=c(d*m),y=c(h*p);return new f(g,b,y,v)}add(e){d(e);const{a:t,d:r}=n,{X:a,Y:o,Z:i,T:s}=this,{X:l,Y:u,Z:p,T:h}=e,m=c(a*l),g=c(o*u),b=c(s*r*h),v=c(i*p),y=c((a+o)*(l+u)-m-g),w=v-b,k=v+b,x=c(g-t*m),j=c(y*w),z=c(k*x),E=c(y*x),S=c(w*k);return new f(j,z,S,E)}subtract(e){return this.add(e.negate())}multiply(e){if(!o.isValidNot0(e))throw new Error("invalid scalar: expected 1 <= sc < curve.n");const{p:t,f:r}=m.cached(this,e,e=>Ps(f,e));return Ps(f,[t,r])[0]}multiplyUnsafe(e,t=f.ZERO){if(!o.isValid(e))throw new Error("invalid scalar: expected 0 <= sc < curve.n");return e===Ws?f.ZERO:this.is0()||e===Gs?this:m.unsafe(this,e,e=>Ps(f,e),t)}isSmallOrder(){return this.multiplyUnsafe(i).is0()}isTorsionFree(){return m.unsafe(this,n.n).is0()}toAffine(e){return p(this,e)}clearCofactor(){return i===Gs?this:this.multiplyUnsafe(i)}toBytes(){const{x:e,y:t}=this.toAffine(),r=a.toBytes(t);return r[r.length-1]|=e&Gs?128:0,r}toHex(){return xo(this.toBytes())}toString(){return`<Point ${this.is0()?"ZERO":this.toHex()}>`}get ex(){return this.X}get ey(){return this.Y}get ez(){return this.Z}get et(){return this.T}static normalizeZ(e){return Ps(f,e)}static msm(e,t){return Fs(f,o,e,t)}_setWindowSize(e){this.precompute(e)}toRawBytes(){return this.toBytes()}}f.BASE=new f(n.Gx,n.Gy,Gs,c(n.Gx*n.Gy)),f.ZERO=new f(Ws,Gs,Gs,Ws),f.Fp=a,f.Fn=o;const m=new Hs(f,o.BITS);return f.BASE.precompute(8),f}function Xs(e,t,r={}){if("function"!=typeof t)throw new Error('"hash" function param is required');ls(r,{},{adjustScalarBytes:"function",randomBytes:"function",domain:"function",prehash:"function",mapToCurve:"function"});const{prehash:a}=r,{BASE:o,Fp:n,Fn:i}=e,s=r.randomBytes||Po,c=r.adjustScalarBytes||(e=>e),l=r.domain||((e,t,r)=>{if(Qi(r,"phflag"),t.length||r)throw new Error("Contexts/pre-hash are not supported");return e});function u(e){return i.create(rs(e))}function d(e){const{head:r,prefix:a,scalar:n}=function(e){const r=g.secretKey;e=os("private key",e,r);const a=os("hashed private key",t(e),2*r),o=c(a.slice(0,r));return{head:o,prefix:a.slice(r,2*r),scalar:u(o)}}(e),i=o.multiply(n),s=i.toBytes();return{head:r,prefix:a,scalar:n,point:i,pointBytes:s}}function p(e){return d(e).pointBytes}function h(e=Uint8Array.of(),...r){const o=Uo(...r);return u(t(l(o,os("context",e),!!a)))}const f={zip215:!0};const m=n.BYTES,g={secretKey:m,publicKey:m,signature:2*m,seed:m};function b(e=s(g.seed)){return es(e,g.seed,"seed")}const v={getExtendedPublicKey:d,randomSecretKey:b,isValidSecretKey:function(e){return so(e)&&e.length===i.BYTES},isValidPublicKey:function(t,r){try{return!!e.fromBytes(t,r)}catch(a){return!1}},toMontgomery(t){const{y:r}=e.fromBytes(t),a=g.publicKey,o=32===a;if(!o&&57!==a)throw new Error("only defined for 25519 and 448");const i=o?n.div(Gs+r,Gs-r):n.div(r-Gs,r+Gs);return n.toBytes(i)},toMontgomerySecret(e){const r=g.secretKey;es(e,r);const a=t(e.subarray(0,r));return c(a).subarray(0,r)},randomPrivateKey:b,precompute:(t=8,r=e.BASE)=>r.precompute(t,!1)};return Object.freeze({keygen:function(e){const t=v.randomSecretKey(e);return{secretKey:t,publicKey:p(t)}},getPublicKey:p,sign:function(e,t,r={}){e=os("message",e),a&&(e=a(e));const{prefix:n,scalar:s,pointBytes:c}=d(t),l=h(r.context,n,e),u=o.multiply(l).toBytes(),p=h(r.context,u,c,e),f=i.create(l+p*s);if(!i.isValid(f))throw new Error("sign failed: invalid s");return es(Uo(u,i.toBytes(f)),g.signature,"result")},verify:function(t,r,n,i=f){const{context:s,zip215:c}=i,l=g.signature;t=os("signature",t,l),r=os("message",r),n=os("publicKey",n,g.publicKey),void 0!==c&&Qi(c,"zip215"),a&&(r=a(r));const u=l/2,d=t.subarray(0,u),p=rs(t.subarray(u,l));let m,b,v;try{m=e.fromBytes(n,c),b=e.fromBytes(d,c),v=o.multiplyUnsafe(p)}catch(w){return!1}if(!c&&m.isSmallOrder())return!1;const y=h(s,b.toBytes(),m.toBytes(),r);return b.add(m.multiplyUnsafe(y)).subtract(v).clearCofactor().is0()},utils:v,Point:e,lengths:g})}function Qs(e){const{CURVE:t,curveOpts:r,hash:a,eddsaOpts:o}=function(e){const t={a:e.a,d:e.d,p:e.Fp.ORDER,n:e.n,h:e.h,Gx:e.Gx,Gy:e.Gy},r={Fp:e.Fp,Fn:Us(t.n,e.nBitLength,!0),uvRatio:e.uvRatio},a={randomBytes:e.randomBytes,adjustScalarBytes:e.adjustScalarBytes,domain:e.domain,prehash:e.prehash,mapToCurve:e.mapToCurve};return{CURVE:t,curveOpts:r,hash:e.hash,eddsaOpts:a}}(e);return function(e,t){const r=t.Point;return Object.assign({},t,{ExtendedPoint:r,CURVE:e,nBitLength:r.Fn.BITS,nByteLength:r.Fn.BYTES})}(e,Xs(Ys(t,r),a,o))}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const ec=BigInt(1),tc=BigInt(2);BigInt(3);const rc=BigInt(5),ac=BigInt(8),oc=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffed"),nc=(()=>({p:oc,n:BigInt("0x1000000000000000000000000000000014def9dea2f79cd65812631a5cf5d3ed"),h:ac,a:BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec"),d:BigInt("0x52036cee2b6ffe738cc740797779e89800700a4d4141d8ab75eb4dca135978a3"),Gx:BigInt("0x216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a"),Gy:BigInt("0x6666666666666666666666666666666666666666666666666666666666666658")}))();function ic(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}const sc=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");function cc(e,t){const r=oc,a=ks(t*t*t,r),o=function(e){const t=BigInt(10),r=BigInt(20),a=BigInt(40),o=BigInt(80),n=oc,i=e*e%n*e%n,s=xs(i,tc,n)*i%n,c=xs(s,ec,n)*e%n,l=xs(c,rc,n)*c%n,u=xs(l,t,n)*l%n,d=xs(u,r,n)*u%n,p=xs(d,a,n)*d%n,h=xs(p,o,n)*p%n,f=xs(h,o,n)*p%n,m=xs(f,t,n)*l%n;return{pow_p_5_8:xs(m,tc,n)*e%n,b2:i}}(e*ks(a*a*t,r)).pow_p_5_8;let n=ks(e*a*o,r);const i=ks(t*n*n,r),s=n,c=ks(n*sc,r),l=i===e,u=i===ks(-e,r),d=i===ks(-e*sc,r);return l&&(n=s),(u||d)&&(n=c),(ks(n,r)&ps)===ps&&(n=ks(-n,r)),{isValid:l||u,value:n}}const lc=(()=>Us(nc.p,{isLE:!0}))(),uc=(()=>({...nc,Fp:lc,hash:Ji,adjustScalarBytes:ic,uvRatio:cc}))(),dc=(()=>Qs(uc))();function pc(e,t){return Pr.IntentMessage(Pr.fixedArray(t.length,Pr.u8())).serialize({intent:{scope:{[e]:!0},version:{V0:!0},appId:{Sui:!0}},value:t}).toBytes()}const hc={ED25519:0,Secp256k1:1,Secp256r1:2,MultiSig:3,ZkLogin:5,Passkey:6},fc={ED25519:32,Secp256k1:33,Secp256r1:33,Passkey:33},mc={0:"ED25519",1:"Secp256k1",2:"Secp256r1",3:"MultiSig",5:"ZkLogin",6:"Passkey"};class gc extends Co{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.createHasher");co(e.outputLen),co(e.blockLen)}(e);const r=Bo(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const a=this.blockLen,o=new Uint8Array(a);o.set(r.length>a?e.create().update(r).digest():r);for(let n=0;n<o.length;n++)o[n]^=54;this.iHash.update(o),this.oHash=e.create();for(let n=0;n<o.length;n++)o[n]^=106;this.oHash.update(o),fo(o)}update(e){return uo(this),this.iHash.update(e),this}digestInto(e){uo(this),lo(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:a,destroyed:o,blockLen:n,outputLen:i}=this;return e.finished=a,e.destroyed=o,e.blockLen=n,e.outputLen=i,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const bc=(e,t,r)=>new gc(e,t).update(r).digest();function vc(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}bc.create=(e,t)=>new gc(e,t);var yc={},wc={};Object.defineProperty(wc,"__esModule",{value:!0}),wc.crypto=void 0,wc.crypto="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0,function(e){
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(e,"__esModule",{value:!0}),e.wrapXOFConstructorWithOpts=e.wrapConstructorWithOpts=e.wrapConstructor=e.Hash=e.nextTick=e.swap32IfBE=e.byteSwapIfBE=e.swap8IfBE=e.isLE=void 0,e.isBytes=r,e.anumber=a,e.abytes=o,e.ahash=function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.createHasher");a(e.outputLen),a(e.blockLen)},e.aexists=function(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")},e.aoutput=function(e,t){o(e);const r=t.outputLen;if(e.length<r)throw new Error("digestInto() expects output buffer of length at least "+r)},e.u8=function(e){return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)},e.u32=function(e){return new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4))},e.clean=function(...e){for(let t=0;t<e.length;t++)e[t].fill(0)},e.createView=function(e){return new DataView(e.buffer,e.byteOffset,e.byteLength)},e.rotr=function(e,t){return e<<32-t|e>>>t},e.rotl=function(e,t){return e<<t|e>>>32-t>>>0},e.byteSwap=n,e.byteSwap32=i,e.bytesToHex=function(e){if(o(e),s)return e.toHex();let t="";for(let r=0;r<e.length;r++)t+=c[e[r]];return t},e.hexToBytes=function(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);if(s)return Uint8Array.fromHex(e);const t=e.length,r=t/2;if(t%2)throw new Error("hex string expected, got unpadded hex of length "+t);const a=new Uint8Array(r);for(let o=0,n=0;o<r;o++,n+=2){const t=u(e.charCodeAt(n)),r=u(e.charCodeAt(n+1));if(void 0===t||void 0===r){const t=e[n]+e[n+1];throw new Error('hex string expected, got non-hex character "'+t+'" at index '+n)}a[o]=16*t+r}return a},e.asyncLoop=async function(t,r,a){let o=Date.now();for(let n=0;n<t;n++){a(n);const t=Date.now()-o;t>=0&&t<r||(await(0,e.nextTick)(),o+=t)}},e.utf8ToBytes=d,e.bytesToUtf8=function(e){return(new TextDecoder).decode(e)},e.toBytes=p,e.kdfInputToBytes=function(e){"string"==typeof e&&(e=d(e));return o(e),e},e.concatBytes=function(...e){let t=0;for(let a=0;a<e.length;a++){const r=e[a];o(r),t+=r.length}const r=new Uint8Array(t);for(let a=0,o=0;a<e.length;a++){const t=e[a];r.set(t,o),o+=t.length}return r},e.checkOpts=function(e,t){if(void 0!==t&&"[object Object]"!=={}.toString.call(t))throw new Error("options should be object or undefined");return Object.assign(e,t)},e.createHasher=h,e.createOptHasher=f,e.createXOFer=m,e.randomBytes=function(e=32){if(t.crypto&&"function"==typeof t.crypto.getRandomValues)return t.crypto.getRandomValues(new Uint8Array(e));if(t.crypto&&"function"==typeof t.crypto.randomBytes)return Uint8Array.from(t.crypto.randomBytes(e));throw new Error("crypto.getRandomValues must be defined")};const t=wc;function r(e){return e instanceof Uint8Array||ArrayBuffer.isView(e)&&"Uint8Array"===e.constructor.name}function a(e){if(!Number.isSafeInteger(e)||e<0)throw new Error("positive integer expected, got "+e)}function o(e,...t){if(!r(e))throw new Error("Uint8Array expected");if(t.length>0&&!t.includes(e.length))throw new Error("Uint8Array expected of length "+t+", got length="+e.length)}function n(e){return e<<24&4278190080|e<<8&16711680|e>>>8&65280|e>>>24&255}function i(e){for(let t=0;t<e.length;t++)e[t]=n(e[t]);return e}e.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],e.swap8IfBE=e.isLE?e=>e:e=>n(e),e.byteSwapIfBE=e.swap8IfBE,e.swap32IfBE=e.isLE?e=>e:i;const s=(()=>"function"==typeof Uint8Array.from([]).toHex&&"function"==typeof Uint8Array.fromHex)(),c=Array.from({length:256},(e,t)=>t.toString(16).padStart(2,"0"));const l={_0:48,_9:57,A:65,F:70,a:97,f:102};function u(e){return e>=l._0&&e<=l._9?e-l._0:e>=l.A&&e<=l.F?e-(l.A-10):e>=l.a&&e<=l.f?e-(l.a-10):void 0}function d(e){if("string"!=typeof e)throw new Error("string expected");return new Uint8Array((new TextEncoder).encode(e))}function p(e){return"string"==typeof e&&(e=d(e)),o(e),e}e.nextTick=async()=>{};function h(e){const t=t=>e().update(p(t)).digest(),r=e();return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=()=>e(),t}function f(e){const t=(t,r)=>e(r).update(p(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t}function m(e){const t=(t,r)=>e(r).update(p(t)).digest(),r=e({});return t.outputLen=r.outputLen,t.blockLen=r.blockLen,t.create=t=>e(t),t}e.Hash=class{},e.wrapConstructor=h,e.wrapConstructorWithOpts=f,e.wrapXOFConstructorWithOpts=m}(yc);var kc={},xc={},jc={};Object.defineProperty(jc,"__esModule",{value:!0}),jc.SHA512_IV=jc.SHA384_IV=jc.SHA224_IV=jc.SHA256_IV=jc.HashMD=void 0,jc.setBigUint64=Ec,jc.Chi=function(e,t,r){return e&t^~e&r},jc.Maj=function(e,t,r){return e&t^e&r^t&r};const zc=yc;function Ec(e,t,r,a){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,r,a);const o=BigInt(32),n=BigInt(4294967295),i=Number(r>>o&n),s=Number(r&n),c=a?4:0,l=a?0:4;e.setUint32(t+c,i,a),e.setUint32(t+l,s,a)}class Sc extends zc.Hash{constructor(e,t,r,a){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=e,this.outputLen=t,this.padOffset=r,this.isLE=a,this.buffer=new Uint8Array(e),this.view=(0,zc.createView)(this.buffer)}update(e){(0,zc.aexists)(this),e=(0,zc.toBytes)(e),(0,zc.abytes)(e);const{view:t,buffer:r,blockLen:a}=this,o=e.length;for(let n=0;n<o;){const i=Math.min(a-this.pos,o-n);if(i===a){const t=(0,zc.createView)(e);for(;a<=o-n;n+=a)this.process(t,n);continue}r.set(e.subarray(n,n+i),this.pos),this.pos+=i,n+=i,this.pos===a&&(this.process(t,0),this.pos=0)}return this.length+=e.length,this.roundClean(),this}digestInto(e){(0,zc.aexists)(this),(0,zc.aoutput)(e,this),this.finished=!0;const{buffer:t,view:r,blockLen:a,isLE:o}=this;let{pos:n}=this;t[n++]=128,(0,zc.clean)(this.buffer.subarray(n)),this.padOffset>a-n&&(this.process(r,0),n=0);for(let u=n;u<a;u++)t[u]=0;Ec(r,a-8,BigInt(8*this.length),o),this.process(r,0);const i=(0,zc.createView)(e),s=this.outputLen;if(s%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const c=s/4,l=this.get();if(c>l.length)throw new Error("_sha2: outputLen bigger than state");for(let u=0;u<c;u++)i.setUint32(4*u,l[u],o)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const r=e.slice(0,t);return this.destroy(),r}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:r,length:a,finished:o,destroyed:n,pos:i}=this;return e.destroyed=n,e.finished=o,e.length=a,e.pos=i,a%t&&e.buffer.set(r),e}clone(){return this._cloneInto()}}jc.HashMD=Sc,jc.SHA256_IV=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),jc.SHA224_IV=Uint32Array.from([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]),jc.SHA384_IV=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]),jc.SHA512_IV=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]);var Ic={};Object.defineProperty(Ic,"__esModule",{value:!0}),Ic.toBig=Ic.shrSL=Ic.shrSH=Ic.rotrSL=Ic.rotrSH=Ic.rotrBL=Ic.rotrBH=Ic.rotr32L=Ic.rotr32H=Ic.rotlSL=Ic.rotlSH=Ic.rotlBL=Ic.rotlBH=Ic.add5L=Ic.add5H=Ic.add4L=Ic.add4H=Ic.add3L=Ic.add3H=void 0,Ic.add=Fc,Ic.fromBig=Tc,Ic.split=Bc;const Ac=BigInt(2**32-1),Oc=BigInt(32);function Tc(e,t=!1){return t?{h:Number(e&Ac),l:Number(e>>Oc&Ac)}:{h:0|Number(e>>Oc&Ac),l:0|Number(e&Ac)}}function Bc(e,t=!1){const r=e.length;let a=new Uint32Array(r),o=new Uint32Array(r);for(let n=0;n<r;n++){const{h:r,l:i}=Tc(e[n],t);[a[n],o[n]]=[r,i]}return[a,o]}const Uc=(e,t)=>BigInt(e>>>0)<<Oc|BigInt(t>>>0);Ic.toBig=Uc;const Cc=(e,t,r)=>e>>>r;Ic.shrSH=Cc;const Mc=(e,t,r)=>e<<32-r|t>>>r;Ic.shrSL=Mc;const $c=(e,t,r)=>e>>>r|t<<32-r;Ic.rotrSH=$c;const Pc=(e,t,r)=>e<<32-r|t>>>r;Ic.rotrSL=Pc;const Rc=(e,t,r)=>e<<64-r|t>>>r-32;Ic.rotrBH=Rc;const _c=(e,t,r)=>e>>>r-32|t<<64-r;Ic.rotrBL=_c;const Vc=(e,t)=>t;Ic.rotr32H=Vc;const Nc=(e,t)=>e;Ic.rotr32L=Nc;const qc=(e,t,r)=>e<<r|t>>>32-r;Ic.rotlSH=qc;const Lc=(e,t,r)=>t<<r|e>>>32-r;Ic.rotlSL=Lc;const Dc=(e,t,r)=>t<<r-32|e>>>64-r;Ic.rotlBH=Dc;const Hc=(e,t,r)=>e<<r-32|t>>>64-r;function Fc(e,t,r,a){const o=(t>>>0)+(a>>>0);return{h:e+r+(o/2**32|0)|0,l:0|o}}Ic.rotlBL=Hc;const Kc=(e,t,r)=>(e>>>0)+(t>>>0)+(r>>>0);Ic.add3L=Kc;const Wc=(e,t,r,a)=>t+r+a+(e/2**32|0)|0;Ic.add3H=Wc;const Gc=(e,t,r,a)=>(e>>>0)+(t>>>0)+(r>>>0)+(a>>>0);Ic.add4L=Gc;const Zc=(e,t,r,a,o)=>t+r+a+o+(e/2**32|0)|0;Ic.add4H=Zc;const Jc=(e,t,r,a,o)=>(e>>>0)+(t>>>0)+(r>>>0)+(a>>>0)+(o>>>0);Ic.add5L=Jc;const Yc=(e,t,r,a,o,n)=>t+r+a+o+n+(e/2**32|0)|0;Ic.add5H=Yc;const Xc={fromBig:Tc,split:Bc,toBig:Uc,shrSH:Cc,shrSL:Mc,rotrSH:$c,rotrSL:Pc,rotrBH:Rc,rotrBL:_c,rotr32H:Vc,rotr32L:Nc,rotlSH:qc,rotlSL:Lc,rotlBH:Dc,rotlBL:Hc,add:Fc,add3L:Kc,add3H:Wc,add4L:Gc,add4H:Zc,add5H:Yc,add5L:Jc};Ic.default=Xc,Object.defineProperty(xc,"__esModule",{value:!0}),xc.sha512_224=xc.sha512_256=xc.sha384=xc.sha512=xc.sha224=xc.sha256=xc.SHA512_256=xc.SHA512_224=xc.SHA384=xc.SHA512=xc.SHA224=xc.SHA256=void 0;const Qc=jc,el=Ic,tl=yc,rl=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),al=new Uint32Array(64);class ol extends Qc.HashMD{constructor(e=32){super(64,e,8,!1),this.A=0|Qc.SHA256_IV[0],this.B=0|Qc.SHA256_IV[1],this.C=0|Qc.SHA256_IV[2],this.D=0|Qc.SHA256_IV[3],this.E=0|Qc.SHA256_IV[4],this.F=0|Qc.SHA256_IV[5],this.G=0|Qc.SHA256_IV[6],this.H=0|Qc.SHA256_IV[7]}get(){const{A:e,B:t,C:r,D:a,E:o,F:n,G:i,H:s}=this;return[e,t,r,a,o,n,i,s]}set(e,t,r,a,o,n,i,s){this.A=0|e,this.B=0|t,this.C=0|r,this.D=0|a,this.E=0|o,this.F=0|n,this.G=0|i,this.H=0|s}process(e,t){for(let u=0;u<16;u++,t+=4)al[u]=e.getUint32(t,!1);for(let u=16;u<64;u++){const e=al[u-15],t=al[u-2],r=(0,tl.rotr)(e,7)^(0,tl.rotr)(e,18)^e>>>3,a=(0,tl.rotr)(t,17)^(0,tl.rotr)(t,19)^t>>>10;al[u]=a+al[u-7]+r+al[u-16]|0}let{A:r,B:a,C:o,D:n,E:i,F:s,G:c,H:l}=this;for(let u=0;u<64;u++){const e=l+((0,tl.rotr)(i,6)^(0,tl.rotr)(i,11)^(0,tl.rotr)(i,25))+(0,Qc.Chi)(i,s,c)+rl[u]+al[u]|0,t=((0,tl.rotr)(r,2)^(0,tl.rotr)(r,13)^(0,tl.rotr)(r,22))+(0,Qc.Maj)(r,a,o)|0;l=c,c=s,s=i,i=n+e|0,n=o,o=a,a=r,r=e+t|0}r=r+this.A|0,a=a+this.B|0,o=o+this.C|0,n=n+this.D|0,i=i+this.E|0,s=s+this.F|0,c=c+this.G|0,l=l+this.H|0,this.set(r,a,o,n,i,s,c,l)}roundClean(){(0,tl.clean)(al)}destroy(){this.set(0,0,0,0,0,0,0,0),(0,tl.clean)(this.buffer)}}xc.SHA256=ol;class nl extends ol{constructor(){super(28),this.A=0|Qc.SHA224_IV[0],this.B=0|Qc.SHA224_IV[1],this.C=0|Qc.SHA224_IV[2],this.D=0|Qc.SHA224_IV[3],this.E=0|Qc.SHA224_IV[4],this.F=0|Qc.SHA224_IV[5],this.G=0|Qc.SHA224_IV[6],this.H=0|Qc.SHA224_IV[7]}}xc.SHA224=nl;const il=(()=>el.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map(e=>BigInt(e))))(),sl=(()=>il[0])(),cl=(()=>il[1])(),ll=new Uint32Array(80),ul=new Uint32Array(80);class dl extends Qc.HashMD{constructor(e=64){super(128,e,16,!1),this.Ah=0|Qc.SHA512_IV[0],this.Al=0|Qc.SHA512_IV[1],this.Bh=0|Qc.SHA512_IV[2],this.Bl=0|Qc.SHA512_IV[3],this.Ch=0|Qc.SHA512_IV[4],this.Cl=0|Qc.SHA512_IV[5],this.Dh=0|Qc.SHA512_IV[6],this.Dl=0|Qc.SHA512_IV[7],this.Eh=0|Qc.SHA512_IV[8],this.El=0|Qc.SHA512_IV[9],this.Fh=0|Qc.SHA512_IV[10],this.Fl=0|Qc.SHA512_IV[11],this.Gh=0|Qc.SHA512_IV[12],this.Gl=0|Qc.SHA512_IV[13],this.Hh=0|Qc.SHA512_IV[14],this.Hl=0|Qc.SHA512_IV[15]}get(){const{Ah:e,Al:t,Bh:r,Bl:a,Ch:o,Cl:n,Dh:i,Dl:s,Eh:c,El:l,Fh:u,Fl:d,Gh:p,Gl:h,Hh:f,Hl:m}=this;return[e,t,r,a,o,n,i,s,c,l,u,d,p,h,f,m]}set(e,t,r,a,o,n,i,s,c,l,u,d,p,h,f,m){this.Ah=0|e,this.Al=0|t,this.Bh=0|r,this.Bl=0|a,this.Ch=0|o,this.Cl=0|n,this.Dh=0|i,this.Dl=0|s,this.Eh=0|c,this.El=0|l,this.Fh=0|u,this.Fl=0|d,this.Gh=0|p,this.Gl=0|h,this.Hh=0|f,this.Hl=0|m}process(e,t){for(let v=0;v<16;v++,t+=4)ll[v]=e.getUint32(t),ul[v]=e.getUint32(t+=4);for(let v=16;v<80;v++){const e=0|ll[v-15],t=0|ul[v-15],r=el.rotrSH(e,t,1)^el.rotrSH(e,t,8)^el.shrSH(e,t,7),a=el.rotrSL(e,t,1)^el.rotrSL(e,t,8)^el.shrSL(e,t,7),o=0|ll[v-2],n=0|ul[v-2],i=el.rotrSH(o,n,19)^el.rotrBH(o,n,61)^el.shrSH(o,n,6),s=el.rotrSL(o,n,19)^el.rotrBL(o,n,61)^el.shrSL(o,n,6),c=el.add4L(a,s,ul[v-7],ul[v-16]),l=el.add4H(c,r,i,ll[v-7],ll[v-16]);ll[v]=0|l,ul[v]=0|c}let{Ah:r,Al:a,Bh:o,Bl:n,Ch:i,Cl:s,Dh:c,Dl:l,Eh:u,El:d,Fh:p,Fl:h,Gh:f,Gl:m,Hh:g,Hl:b}=this;for(let v=0;v<80;v++){const e=el.rotrSH(u,d,14)^el.rotrSH(u,d,18)^el.rotrBH(u,d,41),t=el.rotrSL(u,d,14)^el.rotrSL(u,d,18)^el.rotrBL(u,d,41),y=u&p^~u&f,w=d&h^~d&m,k=el.add5L(b,t,w,cl[v],ul[v]),x=el.add5H(k,g,e,y,sl[v],ll[v]),j=0|k,z=el.rotrSH(r,a,28)^el.rotrBH(r,a,34)^el.rotrBH(r,a,39),E=el.rotrSL(r,a,28)^el.rotrBL(r,a,34)^el.rotrBL(r,a,39),S=r&o^r&i^o&i,I=a&n^a&s^n&s;g=0|f,b=0|m,f=0|p,m=0|h,p=0|u,h=0|d,({h:u,l:d}=el.add(0|c,0|l,0|x,0|j)),c=0|i,l=0|s,i=0|o,s=0|n,o=0|r,n=0|a;const A=el.add3L(j,E,I);r=el.add3H(A,x,z,S),a=0|A}({h:r,l:a}=el.add(0|this.Ah,0|this.Al,0|r,0|a)),({h:o,l:n}=el.add(0|this.Bh,0|this.Bl,0|o,0|n)),({h:i,l:s}=el.add(0|this.Ch,0|this.Cl,0|i,0|s)),({h:c,l:l}=el.add(0|this.Dh,0|this.Dl,0|c,0|l)),({h:u,l:d}=el.add(0|this.Eh,0|this.El,0|u,0|d)),({h:p,l:h}=el.add(0|this.Fh,0|this.Fl,0|p,0|h)),({h:f,l:m}=el.add(0|this.Gh,0|this.Gl,0|f,0|m)),({h:g,l:b}=el.add(0|this.Hh,0|this.Hl,0|g,0|b)),this.set(r,a,o,n,i,s,c,l,u,d,p,h,f,m,g,b)}roundClean(){(0,tl.clean)(ll,ul)}destroy(){(0,tl.clean)(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}xc.SHA512=dl;class pl extends dl{constructor(){super(48),this.Ah=0|Qc.SHA384_IV[0],this.Al=0|Qc.SHA384_IV[1],this.Bh=0|Qc.SHA384_IV[2],this.Bl=0|Qc.SHA384_IV[3],this.Ch=0|Qc.SHA384_IV[4],this.Cl=0|Qc.SHA384_IV[5],this.Dh=0|Qc.SHA384_IV[6],this.Dl=0|Qc.SHA384_IV[7],this.Eh=0|Qc.SHA384_IV[8],this.El=0|Qc.SHA384_IV[9],this.Fh=0|Qc.SHA384_IV[10],this.Fl=0|Qc.SHA384_IV[11],this.Gh=0|Qc.SHA384_IV[12],this.Gl=0|Qc.SHA384_IV[13],this.Hh=0|Qc.SHA384_IV[14],this.Hl=0|Qc.SHA384_IV[15]}}xc.SHA384=pl;const hl=Uint32Array.from([2352822216,424955298,1944164710,2312950998,502970286,855612546,1738396948,1479516111,258812777,2077511080,2011393907,79989058,1067287976,1780299464,286451373,2446758561]),fl=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);class ml extends dl{constructor(){super(28),this.Ah=0|hl[0],this.Al=0|hl[1],this.Bh=0|hl[2],this.Bl=0|hl[3],this.Ch=0|hl[4],this.Cl=0|hl[5],this.Dh=0|hl[6],this.Dl=0|hl[7],this.Eh=0|hl[8],this.El=0|hl[9],this.Fh=0|hl[10],this.Fl=0|hl[11],this.Gh=0|hl[12],this.Gl=0|hl[13],this.Hh=0|hl[14],this.Hl=0|hl[15]}}xc.SHA512_224=ml;class gl extends dl{constructor(){super(32),this.Ah=0|fl[0],this.Al=0|fl[1],this.Bh=0|fl[2],this.Bl=0|fl[3],this.Ch=0|fl[4],this.Cl=0|fl[5],this.Dh=0|fl[6],this.Dl=0|fl[7],this.Eh=0|fl[8],this.El=0|fl[9],this.Fh=0|fl[10],this.Fl=0|fl[11],this.Gh=0|fl[12],this.Gl=0|fl[13],this.Hh=0|fl[14],this.Hl=0|fl[15]}}xc.SHA512_256=gl,xc.sha256=(0,tl.createHasher)(()=>new ol),xc.sha224=(0,tl.createHasher)(()=>new nl),xc.sha512=(0,tl.createHasher)(()=>new dl),xc.sha384=(0,tl.createHasher)(()=>new pl),xc.sha512_256=(0,tl.createHasher)(()=>new gl),xc.sha512_224=(0,tl.createHasher)(()=>new ml),Object.defineProperty(kc,"__esModule",{value:!0}),kc.sha224=kc.SHA224=kc.sha256=kc.SHA256=void 0;const bl=xc;function vl(e,t){if(e===t)return!0;if(e.length!==t.length)return!1;for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}kc.SHA256=bl.SHA256,kc.sha256=bl.sha256,kc.SHA224=bl.SHA224,kc.sha224=bl.sha224;let yl=class{equals(e){return vl(this.toRawBytes(),e.toRawBytes())}toBase64(){return fe(this.toRawBytes())}toString(){throw new Error("`toString` is not implemented on public keys. Use `toBase64()` or `toRawBytes()` instead.")}toSuiPublicKey(){return fe(this.toSuiBytes())}verifyWithIntent(e,t,r){const a=pc(r,e),o=ln(a,{dkLen:32});return this.verify(o,t)}verifyPersonalMessage(e,t){return this.verifyWithIntent(Pr.vector(Pr.u8()).serialize(e).toBytes(),t,"PersonalMessage")}verifyTransaction(e,t){return this.verifyWithIntent(e,t,"TransactionData")}verifyAddress(e){return this.toSuiAddress()===e}toSuiBytes(){const e=this.toRawBytes(),t=new Uint8Array(e.length+1);return t.set([this.flag()]),t.set(e,1),t}toSuiAddress(){return Ut(yc.bytesToHex(ln(this.toSuiBytes(),{dkLen:32})).slice(0,64))}};const wl="suiprivkey";class kl{async signWithIntent(e,t){const r=pc(t,e),a=ln(r,{dkLen:32});return{signature:function({signature:e,signatureScheme:t,publicKey:r}){if(!r)throw new Error("`publicKey` is required");const a=r.toRawBytes(),o=new Uint8Array(1+e.length+a.length);return o.set([hc[t]]),o.set(e,1),o.set(a,1+e.length),fe(o)}({signature:await this.sign(a),signatureScheme:this.getKeyScheme(),publicKey:this.getPublicKey()}),bytes:fe(e)}}async signTransaction(e){return this.signWithIntent(e,"TransactionData")}async signPersonalMessage(e){const{signature:t}=await this.signWithIntent(dt.vector(dt.u8()).serialize(e).toBytes(),"PersonalMessage");return{bytes:fe(e),signature:t}}async signAndExecuteTransaction({transaction:e,client:t}){const r=await e.build({client:t}),{signature:a}=await this.signTransaction(r);return(await t.core.executeTransaction({transaction:r,signatures:[a]})).transaction}toSuiAddress(){return this.getPublicKey().toSuiAddress()}}class xl extends kl{}var jl={},zl={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.hmac=e.HMAC=void 0;const t=yc;class r extends t.Hash{constructor(e,r){super(),this.finished=!1,this.destroyed=!1,(0,t.ahash)(e);const a=(0,t.toBytes)(r);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const o=this.blockLen,n=new Uint8Array(o);n.set(a.length>o?e.create().update(a).digest():a);for(let t=0;t<n.length;t++)n[t]^=54;this.iHash.update(n),this.oHash=e.create();for(let t=0;t<n.length;t++)n[t]^=106;this.oHash.update(n),(0,t.clean)(n)}update(e){return(0,t.aexists)(this),this.iHash.update(e),this}digestInto(e){(0,t.aexists)(this),(0,t.abytes)(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:r,finished:a,destroyed:o,blockLen:n,outputLen:i}=this;return e.finished=a,e.destroyed=o,e.blockLen=n,e.outputLen=i,e.oHash=t._cloneInto(e.oHash),e.iHash=r._cloneInto(e.iHash),e}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}e.HMAC=r;e.hmac=(e,t,a)=>new r(e,t).update(a).digest(),e.hmac.create=(e,t)=>new r(e,t)}(zl),Object.defineProperty(jl,"__esModule",{value:!0});var El=jl.pbkdf2=function(e,t,r,a){const{c:o,dkLen:n,DK:i,PRF:s,PRFSalt:c}=Al(e,t,r,a);let l;const u=new Uint8Array(4),d=(0,Il.createView)(u),p=new Uint8Array(s.outputLen);for(let h=1,f=0;f<n;h++,f+=s.outputLen){const e=i.subarray(f,f+s.outputLen);d.setInt32(0,h,!1),(l=c._cloneInto(l)).update(u).digestInto(p),e.set(p.subarray(0,e.length));for(let t=1;t<o;t++){s._cloneInto(l).update(p).digestInto(p);for(let t=0;t<e.length;t++)e[t]^=p[t]}}return Ol(s,c,i,l,p)};jl.pbkdf2Async=async function(e,t,r,a){const{c:o,dkLen:n,asyncTick:i,DK:s,PRF:c,PRFSalt:l}=Al(e,t,r,a);let u;const d=new Uint8Array(4),p=(0,Il.createView)(d),h=new Uint8Array(c.outputLen);for(let f=1,m=0;m<n;f++,m+=c.outputLen){const e=s.subarray(m,m+c.outputLen);p.setInt32(0,f,!1),(u=l._cloneInto(u)).update(d).digestInto(h),e.set(h.subarray(0,e.length)),await(0,Il.asyncLoop)(o-1,i,()=>{c._cloneInto(u).update(h).digestInto(h);for(let t=0;t<e.length;t++)e[t]^=h[t]})}return Ol(c,l,s,u,h)}
/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */;const Sl=zl,Il=yc;function Al(e,t,r,a){(0,Il.ahash)(e);const o=(0,Il.checkOpts)({dkLen:32,asyncTick:10},a),{c:n,dkLen:i,asyncTick:s}=o;if((0,Il.anumber)(n),(0,Il.anumber)(i),(0,Il.anumber)(s),n<1)throw new Error("iterations (c) should be >= 1");const c=(0,Il.kdfInputToBytes)(t),l=(0,Il.kdfInputToBytes)(r),u=new Uint8Array(i),d=Sl.hmac.create(e,c),p=d._cloneInto().update(l);return{c:n,dkLen:i,asyncTick:s,DK:u,PRF:d,PRFSalt:p}}function Ol(e,t,r,a,o){return e.destroy(),t.destroy(),a&&a.destroy(),(0,Il.clean)(o),r}function Tl(e){if("string"!=typeof e)throw new TypeError("invalid mnemonic type: "+typeof e);return e.normalize("NFKD")}function Bl(e,t=""){return El(Ji,function(e){const t=Tl(e),r=t.split(" ");if(![12,15,18,21,24].includes(r.length))throw new Error("Invalid mnemonic");return{nfkd:t,words:r}}(e).nfkd,(e=>Tl("mnemonic"+e))(t),{c:2048,dkLen:64})}function Ul(e){return!!new RegExp("^m\\/44'\\/784'\\/[0-9]+'\\/[0-9]+'\\/[0-9]+'+$").test(e)}function Cl(e){return ge(function(e){return Bl(e,"")}(e))}var Ml={};Object.defineProperty(Ml,"__esModule",{value:!0}),Ml.sha512_256=Ml.SHA512_256=Ml.sha512_224=Ml.SHA512_224=Ml.sha384=Ml.SHA384=Ml.sha512=Ml.SHA512=void 0;const $l=xc;Ml.SHA512=$l.SHA512;var Pl=Ml.sha512=$l.sha512;Ml.SHA384=$l.SHA384,Ml.sha384=$l.sha384,Ml.SHA512_224=$l.SHA512_224,Ml.sha512_224=$l.sha512_224,Ml.SHA512_256=$l.SHA512_256,Ml.sha512_256=$l.sha512_256;const Rl=new RegExp("^m(\\/[0-9]+')+$"),_l=e=>e.replace("'",""),Vl=(e,t,r=2147483648)=>{if(!(e=>!!Rl.test(e)&&!e.split("/").slice(1).map(_l).some(isNaN))(e))throw new Error("Invalid derivation path");const{key:a,chainCode:o}=(e=>{const t=bc.create(Pl,"ed25519 seed").update(me(e)).digest();return{key:t.slice(0,32),chainCode:t.slice(32)}})(t);return e.split("/").slice(1).map(_l).map(e=>parseInt(e,10)).reduce((e,t)=>(({key:e,chainCode:t},r)=>{const a=new ArrayBuffer(4);new DataView(a).setUint32(0,r);const o=new Uint8Array(1+e.length+a.byteLength);o.set(new Uint8Array(1).fill(0)),o.set(e,1),o.set(new Uint8Array(a,0,a.byteLength),e.length+1);const n=bc.create(Pl,t).update(o).digest();return{key:n.slice(0,32),chainCode:n.slice(32)}})(e,t+r),{key:a,chainCode:o})};class Nl extends yl{constructor(e){if(super(),"string"==typeof e?this.data=pe(e):e instanceof Uint8Array?this.data=e:this.data=Uint8Array.from(e),32!==this.data.length)throw new Error(`Invalid public key input. Expected 32 bytes, got ${this.data.length}`)}equals(e){return super.equals(e)}toRawBytes(){return this.data}flag(){return hc.ED25519}async verify(e,t){let r;if("string"==typeof t){const e=function(e){const t=pe(e),r=mc[t[0]];switch(r){case"ED25519":case"Secp256k1":case"Secp256r1":const a=fc[r],o=t.slice(1,t.length-a);return{serializedSignature:e,signatureScheme:r,signature:o,publicKey:t.slice(1+o.length),bytes:t};default:throw new Error("Unsupported signature scheme")}}(t);if("ED25519"!==e.signatureScheme)throw new Error("Invalid signature scheme");if(!vl(this.toRawBytes(),e.publicKey))throw new Error("Signature does not match public key");r=e.signature}else r=t;return dc.verify(r,e,this.toRawBytes())}}Nl.SIZE=32;const ql="m/44'/784'/0'/0'/0'";class Ll extends xl{constructor(e){if(super(),e)this.keypair={publicKey:e.publicKey,secretKey:e.secretKey.slice(0,32)};else{const e=dc.utils.randomPrivateKey();this.keypair={publicKey:dc.getPublicKey(e),secretKey:e}}}getKeyScheme(){return"ED25519"}static generate(){const e=dc.utils.randomPrivateKey();return new Ll({publicKey:dc.getPublicKey(e),secretKey:e})}static fromSecretKey(e,t){if("string"==typeof e){const r=function(e){const{prefix:t,words:r}=le.decode(e);if(t!==wl)throw new Error("invalid private key prefix");const a=new Uint8Array(le.fromWords(r)),o=a.slice(1),n=mc[a[0]];return{scheme:n,schema:n,secretKey:o}}(e);if("ED25519"!==r.schema)throw new Error(`Expected a ED25519 keypair, got ${r.schema}`);return this.fromSecretKey(r.secretKey,t)}const r=e.length;if(32!==r)throw new Error(`Wrong secretKey size. Expected 32 bytes, got ${r}.`);const a={publicKey:dc.getPublicKey(e),secretKey:e};if(!t||!t.skipValidation){const t=(new TextEncoder).encode("sui validation"),r=dc.sign(t,e);if(!dc.verify(r,t,a.publicKey))throw new Error("provided secretKey is invalid")}return new Ll(a)}getPublicKey(){return new Nl(this.keypair.publicKey)}getSecretKey(){return function(e,t){if(32!==e.length)throw new Error("Invalid bytes length");const r=hc[t],a=new Uint8Array(e.length+1);return a.set([r]),a.set(e,1),le.encode(wl,le.toWords(a))}(this.keypair.secretKey.slice(0,32),this.getKeyScheme())}async sign(e){return dc.sign(e,this.keypair.secretKey)}static deriveKeypair(e,t){if(null==t&&(t=ql),!Ul(t))throw new Error("Invalid derivation path");const{key:r}=Vl(t,Cl(e));return Ll.fromSecretKey(r)}static deriveKeypairFromSeed(e,t){if(null==t&&(t=ql),!Ul(t))throw new Error("Invalid derivation path");const{key:r}=Vl(t,e);return Ll.fromSecretKey(r)}}const Dl=vc(function(e){if(e.length>=255)throw new TypeError("Alphabet too long");for(var t=new Uint8Array(256),r=0;r<t.length;r++)t[r]=255;for(var a=0;a<e.length;a++){var o=e.charAt(a),n=o.charCodeAt(0);if(255!==t[n])throw new TypeError(o+" is ambiguous");t[n]=a}var i=e.length,s=e.charAt(0),c=Math.log(i)/Math.log(256),l=Math.log(256)/Math.log(i);function u(e){if("string"!=typeof e)throw new TypeError("Expected String");if(0===e.length)return new Uint8Array;for(var r=0,a=0,o=0;e[r]===s;)a++,r++;for(var n=(e.length-r)*c+1>>>0,l=new Uint8Array(n);e[r];){var u=e.charCodeAt(r);if(u>255)return;var d=t[u];if(255===d)return;for(var p=0,h=n-1;(0!==d||p<o)&&-1!==h;h--,p++)d+=i*l[h]>>>0,l[h]=d%256>>>0,d=d/256>>>0;if(0!==d)throw new Error("Non-zero carry");o=p,r++}for(var f=n-o;f!==n&&0===l[f];)f++;for(var m=new Uint8Array(a+(n-f)),g=a;f!==n;)m[g++]=l[f++];return m}return{encode:function(t){if(t instanceof Uint8Array||(ArrayBuffer.isView(t)?t=new Uint8Array(t.buffer,t.byteOffset,t.byteLength):Array.isArray(t)&&(t=Uint8Array.from(t))),!(t instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===t.length)return"";for(var r=0,a=0,o=0,n=t.length;o!==n&&0===t[o];)o++,r++;for(var c=(n-o)*l+1>>>0,u=new Uint8Array(c);o!==n;){for(var d=t[o],p=0,h=c-1;(0!==d||p<a)&&-1!==h;h--,p++)d+=256*u[h]>>>0,u[h]=d%i>>>0,d=d/i>>>0;if(0!==d)throw new Error("Non-zero carry");a=p,o++}for(var f=c-a;f!==c&&0===u[f];)f++;for(var m=s.repeat(r);f<c;++f)m+=e.charAt(u[f]);return m},decodeUnsafe:u,decode:function(e){var t=u(e);if(t)return t;throw new Error("Non-base"+i+" character")}}}("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")),Hl=e=>Dl.encode(e),Fl=e=>Dl.decode(e);function Kl(e){return Uint8Array.from(atob(e),e=>e.charCodeAt(0))}const Wl=8192;function Gl(e){if(e.length<Wl)return btoa(String.fromCharCode(...e));let t="";for(var r=0;r<e.length;r+=Wl){const a=e.slice(r,r+Wl);t+=String.fromCharCode(...a)}return btoa(t)}function Zl(e){var t;const r=e.startsWith("0x")?e.slice(2):e,a=(null==(t=(r.length%2==0?r:`0${r}}`).match(/.{2}/g))?void 0:t.map(e=>parseInt(e,16)))??[];return Uint8Array.from(a)}function Jl(e){return e.reduce((e,t)=>e+t.toString(16).padStart(2,"0"),"")}function Yl(e){let t=[],r=0;if(0===e)return[0];for(;e>0;)t[r]=127&e,(e>>=7)&&(t[r]|=128),r+=1;return t}class Xl{constructor(e){this.bytePosition=0,this.dataView=new DataView(e.buffer)}shift(e){return this.bytePosition+=e,this}read8(){let e=this.dataView.getUint8(this.bytePosition);return this.shift(1),e}read16(){let e=this.dataView.getUint16(this.bytePosition,!0);return this.shift(2),e}read32(){let e=this.dataView.getUint32(this.bytePosition,!0);return this.shift(4),e}read64(){let e=this.read32(),t=this.read32().toString(16)+e.toString(16).padStart(8,"0");return BigInt("0x"+t).toString(10)}read128(){let e=BigInt(this.read64()),t=BigInt(this.read64()).toString(16)+e.toString(16).padStart(16,"0");return BigInt("0x"+t).toString(10)}read256(){let e=BigInt(this.read128()),t=BigInt(this.read128()).toString(16)+e.toString(16).padStart(32,"0");return BigInt("0x"+t).toString(10)}readBytes(e){let t=this.bytePosition+this.dataView.byteOffset,r=new Uint8Array(this.dataView.buffer,t,e);return this.shift(e),r}readULEB(){let e=this.bytePosition+this.dataView.byteOffset,t=new Uint8Array(this.dataView.buffer,e),{value:r,length:a}=function(e){let t=0,r=0,a=0;for(;;){let o=e[a];if(a+=1,t|=(127&o)<<r,!(128&o))break;r+=7}return{value:t,length:a}}(t);return this.shift(a),r}readVec(e){let t=this.readULEB(),r=[];for(let a=0;a<t;a++)r.push(e(this,a,t));return r}}function Ql(e,t=["<",">"]){const[r,a]=t,o=[];let n="",i=0;for(let s=0;s<e.length;s++){const t=e[s];t===r&&i++,t===a&&i--,0!==i||","!==t?n+=t:(o.push(n.trim()),n="")}return o.push(n.trim()),o}class eu{constructor({size:e=1024,maxSize:t,allocateSize:r=1024}={}){this.bytePosition=0,this.size=e,this.maxSize=t||e,this.allocateSize=r,this.dataView=new DataView(new ArrayBuffer(e))}ensureSizeOrGrow(e){const t=this.bytePosition+e;if(t>this.size){const e=Math.min(this.maxSize,this.size+this.allocateSize);if(t>e)throw new Error(`Attempting to serialize to BCS, but buffer does not have enough size. Allocated size: ${this.size}, Max size: ${this.maxSize}, Required size: ${t}`);this.size=e;const r=new ArrayBuffer(this.size);new Uint8Array(r).set(new Uint8Array(this.dataView.buffer)),this.dataView=new DataView(r)}}shift(e){return this.bytePosition+=e,this}write8(e){return this.ensureSizeOrGrow(1),this.dataView.setUint8(this.bytePosition,Number(e)),this.shift(1)}write16(e){return this.ensureSizeOrGrow(2),this.dataView.setUint16(this.bytePosition,Number(e),!0),this.shift(2)}write32(e){return this.ensureSizeOrGrow(4),this.dataView.setUint32(this.bytePosition,Number(e),!0),this.shift(4)}write64(e){return tu(BigInt(e),8).forEach(e=>this.write8(e)),this}write128(e){return tu(BigInt(e),16).forEach(e=>this.write8(e)),this}write256(e){return tu(BigInt(e),32).forEach(e=>this.write8(e)),this}writeULEB(e){return Yl(e).forEach(e=>this.write8(e)),this}writeVec(e,t){return this.writeULEB(e.length),Array.from(e).forEach((r,a)=>t(this,r,a,e.length)),this}*[Symbol.iterator](){for(let e=0;e<this.bytePosition;e++)yield this.dataView.getUint8(e);return this.toBytes()}toBytes(){return new Uint8Array(this.dataView.buffer.slice(0,this.bytePosition))}toString(e){return function(e,t){switch(t){case"base58":return Hl(e);case"base64":return Gl(e);case"hex":return Jl(e);default:throw new Error("Unsupported encoding, supported values are: base64, hex")}}(this.toBytes(),e)}}function tu(e,t){let r=new Uint8Array(t),a=0;for(;e>0;)r[a]=Number(e%BigInt(256)),e/=BigInt(256),a+=1;return r}var ru,au,ou,nu,iu=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},su=(e,t,r)=>(iu(e,t,"read from private field"),r?r.call(e):t.get(e)),cu=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},lu=(e,t,r,a)=>(iu(e,t,"write to private field"),t.set(e,r),r);const uu=class{constructor(e){cu(this,ru,void 0),cu(this,au,void 0),this.name=e.name,this.read=e.read,this.serializedSize=e.serializedSize??(()=>null),lu(this,ru,e.write),lu(this,au,e.serialize??((e,t)=>{const r=new eu({size:this.serializedSize(e)??void 0,...t});return su(this,ru).call(this,e,r),r.toBytes()})),this.validate=e.validate??(()=>{})}write(e,t){this.validate(e),su(this,ru).call(this,e,t)}serialize(e,t){return this.validate(e),new fu(this,su(this,au).call(this,e,t))}parse(e){const t=new Xl(e);return this.read(t)}transform({name:e,input:t,output:r}){return new uu({name:e??this.name,read:e=>r(this.read(e)),write:(e,r)=>su(this,ru).call(this,t(e),r),serializedSize:e=>this.serializedSize(t(e)),serialize:(e,r)=>su(this,au).call(this,t(e),r),validate:e=>this.validate(t(e))})}};let du=uu;ru=new WeakMap,au=new WeakMap;const pu=Symbol.for("@mysten/serialized-bcs");function hu(e){return!!e&&"object"==typeof e&&!0===e[pu]}class fu{constructor(e,t){cu(this,ou,void 0),cu(this,nu,void 0),lu(this,ou,e),lu(this,nu,t)}get[pu](){return!0}toBytes(){return su(this,nu)}toHex(){return Jl(su(this,nu))}toBase64(){return Gl(su(this,nu))}toBase58(){return Hl(su(this,nu))}parse(){return su(this,ou).parse(su(this,nu))}}function mu({size:e,...t}){return new du({...t,serializedSize:()=>e})}function gu({readMethod:e,writeMethod:t,...r}){return mu({...r,read:t=>t[e](),write:(e,r)=>r[t](e),validate:e=>{var t;if(e<0||e>r.maxValue)throw new TypeError(`Invalid ${r.name} value: ${e}. Expected value in range 0-${r.maxValue}`);null==(t=r.validate)||t.call(r,e)}})}function bu({readMethod:e,writeMethod:t,...r}){return mu({...r,read:t=>t[e](),write:(e,r)=>r[t](BigInt(e)),validate:e=>{var t;const a=BigInt(e);if(a<0||a>r.maxValue)throw new TypeError(`Invalid ${r.name} value: ${a}. Expected value in range 0-${r.maxValue}`);null==(t=r.validate)||t.call(r,a)}})}ou=new WeakMap,nu=new WeakMap;const vu={u8:e=>gu({name:"u8",readMethod:"read8",writeMethod:"write8",size:1,maxValue:255,...e}),u16:e=>gu({name:"u16",readMethod:"read16",writeMethod:"write16",size:2,maxValue:65535,...e}),u32:e=>gu({name:"u32",readMethod:"read32",writeMethod:"write32",size:4,maxValue:2**32-1,...e}),u64:e=>bu({name:"u64",readMethod:"read64",writeMethod:"write64",size:8,maxValue:2n**64n-1n,...e}),u128:e=>bu({name:"u128",readMethod:"read128",writeMethod:"write128",size:16,maxValue:2n**128n-1n,...e}),u256:e=>bu({name:"u256",readMethod:"read256",writeMethod:"write256",size:32,maxValue:2n**256n-1n,...e}),bool:e=>mu({name:"bool",size:1,read:e=>1===e.read8(),write:(e,t)=>t.write8(e?1:0),...e,validate:t=>{var r;if(null==(r=null==e?void 0:e.validate)||r.call(e,t),"boolean"!=typeof t)throw new TypeError("Expected boolean, found "+typeof t)}}),uleb128:e=>function({serialize:e,...t}){const r=new du({...t,serialize:e,write:(e,t)=>{for(const a of r.serialize(e).toBytes())t.write8(a)}});return r}({name:"uleb128",read:e=>e.readULEB(),serialize:e=>Uint8Array.from(Yl(e)),...e}),bytes:(e,t)=>mu({name:`bytes[${e}]`,size:e,read:t=>t.readBytes(e),write:(t,r)=>{for(let a=0;a<e;a++)r.write8(t[a]??0)},...t,validate:r=>{var a;if(null==(a=null==t?void 0:t.validate)||a.call(t,r),!("length"in r))throw new TypeError("Expected array, found "+typeof r);if(r.length!==e)throw new TypeError(`Expected array of length ${e}, found ${r.length}`)}}),string:e=>function({toBytes:e,fromBytes:t,...r}){return new du({...r,read:e=>{const r=e.readULEB(),a=e.readBytes(r);return t(a)},write:(t,r)=>{const a=e(t);r.writeULEB(a.length);for(let e=0;e<a.length;e++)r.write8(a[e])},serialize:t=>{const r=e(t),a=Yl(r.length),o=new Uint8Array(a.length+r.length);return o.set(a,0),o.set(r,a.length),o},validate:e=>{var t;if("string"!=typeof e)throw new TypeError(`Invalid ${r.name} value: ${e}. Expected string`);null==(t=r.validate)||t.call(r,e)}})}({name:"string",toBytes:e=>(new TextEncoder).encode(e),fromBytes:e=>(new TextDecoder).decode(e),...e}),fixedArray:(e,t,r)=>new du({name:`${t.name}[${e}]`,read:r=>{const a=new Array(e);for(let o=0;o<e;o++)a[o]=t.read(r);return a},write:(e,r)=>{for(const a of e)t.write(a,r)},...r,validate:t=>{var a;if(null==(a=null==r?void 0:r.validate)||a.call(r,t),!("length"in t))throw new TypeError("Expected array, found "+typeof t);if(t.length!==e)throw new TypeError(`Expected array of length ${e}, found ${t.length}`)}}),option:e=>vu.enum(`Option<${e.name}>`,{None:null,Some:e}).transform({input:e=>null==e?{None:!0}:{Some:e},output:e=>"Some"in e?e.Some:null}),vector:(e,t)=>new du({name:`vector<${e.name}>`,read:t=>{const r=t.readULEB(),a=new Array(r);for(let o=0;o<r;o++)a[o]=e.read(t);return a},write:(t,r)=>{r.writeULEB(t.length);for(const a of t)e.write(a,r)},...t,validate:e=>{var r;if(null==(r=null==t?void 0:t.validate)||r.call(t,e),!("length"in e))throw new TypeError("Expected array, found "+typeof e)}}),tuple:(e,t)=>new du({name:`(${e.map(e=>e.name).join(", ")})`,serializedSize:t=>{let r=0;for(let a=0;a<e.length;a++){const o=e[a].serializedSize(t[a]);if(null==o)return null;r+=o}return r},read:t=>{const r=[];for(const a of e)r.push(a.read(t));return r},write:(t,r)=>{for(let a=0;a<e.length;a++)e[a].write(t[a],r)},...t,validate:r=>{var a;if(null==(a=null==t?void 0:t.validate)||a.call(t,r),!Array.isArray(r))throw new TypeError("Expected array, found "+typeof r);if(r.length!==e.length)throw new TypeError(`Expected array of length ${e.length}, found ${r.length}`)}}),struct(e,t,r){const a=Object.entries(t);return new du({name:e,serializedSize:e=>{let t=0;for(const[r,o]of a){const a=o.serializedSize(e[r]);if(null==a)return null;t+=a}return t},read:e=>{const t={};for(const[r,o]of a)t[r]=o.read(e);return t},write:(e,t)=>{for(const[r,o]of a)o.write(e[r],t)},...r,validate:e=>{var t;if(null==(t=null==r?void 0:r.validate)||t.call(r,e),"object"!=typeof e||null==e)throw new TypeError("Expected object, found "+typeof e)}})},enum(e,t,r){const a=Object.entries(t);return new du({name:e,read:e=>{const t=e.readULEB(),[r,o]=a[t];return{[r]:(null==o?void 0:o.read(e))??!0}},write:(e,t)=>{const[r,o]=Object.entries(e)[0];for(let n=0;n<a.length;n++){const[e,i]=a[n];if(e===r)return t.writeULEB(n),void(null==i||i.write(o,t))}},...r,validate:e=>{var a;if(null==(a=null==r?void 0:r.validate)||a.call(r,e),"object"!=typeof e||null==e)throw new TypeError("Expected object, found "+typeof e);const o=Object.keys(e);if(1!==o.length)throw new TypeError(`Expected object with one key, found ${o.length}`);const[n]=o;if(!Object.hasOwn(t,n))throw new TypeError(`Invalid enum variant ${n}`)}})},map:(e,t)=>vu.vector(vu.tuple([e,t])).transform({name:`Map<${e.name}, ${t.name}>`,input:e=>[...e.entries()],output:e=>{const t=new Map;for(const[r,a]of e)t.set(r,a);return t}}),generic:(e,t)=>(...e)=>t(...e).transform({name:`${t.name}<${e.map(e=>e.name).join(", ")}>`,input:e=>e,output:e=>e}),lazy:e=>function(e){let t=null;function r(){return t||(t=e()),t}return new du({name:"lazy",read:e=>r().read(e),serializedSize:e=>r().serializedSize(e),write:(e,t)=>r().write(e,t),serialize:(e,t)=>r().serialize(e,t).toBytes()})}(e)},yu=class{constructor(e){if(this.types=new Map,this.counter=0,e instanceof yu)return this.schema=e.schema,void(this.types=new Map(e.types));if(this.schema=e,this.registerAddressType(yu.ADDRESS,e.addressLength,e.addressEncoding),this.registerVectorType(e.vectorType),e.types&&e.types.structs)for(let r of Object.keys(e.types.structs))this.registerStructType(r,e.types.structs[r]);if(e.types&&e.types.enums)for(let r of Object.keys(e.types.enums))this.registerEnumType(r,e.types.enums[r]);if(e.types&&e.types.aliases)for(let r of Object.keys(e.types.aliases))this.registerAlias(r,e.types.aliases[r]);var t;!1!==e.withPrimitives&&((t=this).registerType(wu.U8,function(e,t){return e.write8(t)},function(e){return e.read8()},e=>e<256),t.registerType(wu.U16,function(e,t){return e.write16(t)},function(e){return e.read16()},e=>e<65536),t.registerType(wu.U32,function(e,t){return e.write32(t)},function(e){return e.read32()},e=>e<=4294967296n),t.registerType(wu.U64,function(e,t){return e.write64(t)},function(e){return e.read64()}),t.registerType(wu.U128,function(e,t){return e.write128(t)},function(e){return e.read128()}),t.registerType(wu.U256,function(e,t){return e.write256(t)},function(e){return e.read256()}),t.registerType(wu.BOOL,function(e,t){return e.write8(t)},function(e){return"1"===e.read8().toString(10)}),t.registerType(wu.STRING,function(e,t){return e.writeVec(Array.from(t),(e,t)=>e.write8(t.charCodeAt(0)))},function(e){return e.readVec(e=>e.read8()).map(e=>String.fromCharCode(Number(e))).join("")},e=>!0),t.registerType(wu.HEX,function(e,t){return e.writeVec(Array.from(Zl(t)),(e,t)=>e.write8(t))},function(e){let t=e.readVec(e=>e.read8());return Jl(new Uint8Array(t))}),t.registerType(wu.BASE58,function(e,t){return e.writeVec(Array.from(Fl(t)),(e,t)=>e.write8(t))},function(e){let t=e.readVec(e=>e.read8());return Hl(new Uint8Array(t))}),t.registerType(wu.BASE64,function(e,t){return e.writeVec(Array.from(Kl(t)),(e,t)=>e.write8(t))},function(e){let t=e.readVec(e=>e.read8());return Gl(new Uint8Array(t))}))}tempKey(){return"bcs-struct-"+ ++this.counter}ser(e,t,r){if("string"==typeof e||Array.isArray(e)){const{name:a,params:o}=this.parseTypeName(e);return this.getTypeInterface(a).encode(this,t,r,o)}if("object"==typeof e){const a=this.tempKey();return new yu(this).registerStructType(a,e).ser(a,t,r)}throw new Error(`Incorrect type passed into the '.ser()' function. \n${JSON.stringify(e)}`)}de(e,t,r){if("string"==typeof t){if(!r)throw new Error("To pass a string to `bcs.de`, specify encoding");t=function(e,t){switch(t){case"base58":return Fl(e);case"base64":return Kl(e);case"hex":return Zl(e);default:throw new Error("Unsupported encoding, supported values are: base64, hex")}}(t,r)}if("string"==typeof e||Array.isArray(e)){const{name:r,params:a}=this.parseTypeName(e);return this.getTypeInterface(r).decode(this,t,a)}if("object"==typeof e){const a=new yu(this),o=this.tempKey();return a.registerStructType(o,e).de(o,t,r)}throw new Error(`Incorrect type passed into the '.de()' function. \n${JSON.stringify(e)}`)}hasType(e){return this.types.has(e)}registerAlias(e,t){return this.types.set(e,t),this}registerType(e,t,r,a=()=>!0){const{name:o,params:n}=this.parseTypeName(e);return this.types.set(o,{encode(e,t,r,a){const o=n.reduce((e,t,r)=>Object.assign(e,{[t]:a[r]}),{});return this._encodeRaw.call(e,new eu(r),t,a,o)},decode(e,t,r){const a=n.reduce((e,t,a)=>Object.assign(e,{[t]:r[a]}),{});return this._decodeRaw.call(e,new Xl(t),r,a)},_encodeRaw(e,r,n,i){if(a(r))return t.call(this,e,r,n,i);throw new Error(`Validation failed for type ${o}, data: ${r}`)},_decodeRaw(e,t,a){return r.call(this,e,t,a)}}),this}registerBcsType(e,t){return this.registerType(e,(e,r,a)=>{const o=a.map(e=>new du({name:String(e),write:(t,r)=>{const{name:o,params:n}=this.parseTypeName(e),i=this.getTypeInterface(o),s=n.reduce((e,t,r)=>Object.assign(e,{[t]:a[r]}),{});return i._encodeRaw.call(this,r,t,n,s)},read:()=>{throw new Error("Not implemented")}}));return t(...o).write(r,e),e},(e,r)=>{const a=r.map(e=>new du({name:String(e),write:(e,t)=>{throw new Error("Not implemented")},read:t=>{const{name:a,params:o}=this.parseTypeName(e),n=this.getTypeInterface(a),i=o.reduce((e,t,a)=>Object.assign(e,{[t]:r[a]}),{});return n._decodeRaw.call(this,t,o,i)}}));return t(...a).read(e)}),this}registerAddressType(e,t,r="hex"){switch(r){case"base64":return this.registerType(e,function(e,t){return Kl(t).reduce((e,t)=>e.write8(t),e)},function(e){return Gl(e.readBytes(t))});case"hex":return this.registerType(e,function(e,t){return Zl(t).reduce((e,t)=>e.write8(t),e)},function(e){return Jl(e.readBytes(t))});default:throw new Error("Unsupported encoding! Use either hex or base64")}}registerVectorType(e){let{name:t,params:r}=this.parseTypeName(e);if(r.length>1)throw new Error("Vector can have only one type parameter; got "+t);return this.registerType(e,function(t,r,a,o){return t.writeVec(r,(t,r)=>{let n=a[0];if(!n)throw new Error(`Incorrect number of type parameters passed a to vector '${e}'`);let{name:i,params:s}=this.parseTypeName(n);if(this.hasType(i))return this.getTypeInterface(i)._encodeRaw.call(this,t,r,s,o);if(!(i in o))throw new Error(`Unable to find a matching type definition for ${i} in vector; make sure you passed a generic`);let{name:c,params:l}=this.parseTypeName(o[i]);return this.getTypeInterface(c)._encodeRaw.call(this,t,r,l,o)})},function(t,r,a){return t.readVec(t=>{let o=r[0];if(!o)throw new Error(`Incorrect number of type parameters passed to a vector '${e}'`);let{name:n,params:i}=this.parseTypeName(o);if(this.hasType(n))return this.getTypeInterface(n)._decodeRaw.call(this,t,i,a);if(!(n in a))throw new Error(`Unable to find a matching type definition for ${n} in vector; make sure you passed a generic`);let{name:s,params:c}=this.parseTypeName(a[n]);return this.getTypeInterface(s)._decodeRaw.call(this,t,c,a)})})}registerStructType(e,t){for(let i in t){let e=this.tempKey(),r=t[i];Array.isArray(r)||"string"==typeof r||(t[i]=e,this.registerStructType(e,r))}let r=Object.freeze(t),a=Object.keys(r),{name:o,params:n}=this.parseTypeName(e);return this.registerType(e,function(e,t,i,s){if(!t||t.constructor!==Object)throw new Error(`Expected ${o} to be an Object, got: ${t}`);if(i.length!==n.length)throw new Error(`Incorrect number of generic parameters passed; expected: ${n.length}, got: ${i.length}`);for(let c of a){if(!(c in t))throw new Error(`Struct ${o} requires field ${c}:${r[c]}`);const{name:a,params:l}=this.parseTypeName(r[c]);if(n.includes(a)){const r=n.indexOf(a);let{name:l,params:u}=this.parseTypeName(i[r]);if(this.hasType(l)){this.getTypeInterface(l)._encodeRaw.call(this,e,t[c],u,s);continue}if(!(l in s))throw new Error(`Unable to find a matching type definition for ${l} in ${o}; make sure you passed a generic`);let{name:d,params:p}=this.parseTypeName(s[l]);this.getTypeInterface(d)._encodeRaw.call(this,e,t[c],p,s)}else this.getTypeInterface(a)._encodeRaw.call(this,e,t[c],l,s)}return e},function(e,t,i){if(t.length!==n.length)throw new Error(`Incorrect number of generic parameters passed; expected: ${n.length}, got: ${t.length}`);let s={};for(let c of a){const{name:a,params:l}=this.parseTypeName(r[c]);if(n.includes(a)){const r=n.indexOf(a);let{name:l,params:u}=this.parseTypeName(t[r]);if(this.hasType(l)){s[c]=this.getTypeInterface(l)._decodeRaw.call(this,e,u,i);continue}if(!(l in i))throw new Error(`Unable to find a matching type definition for ${l} in ${o}; make sure you passed a generic`);let{name:d,params:p}=this.parseTypeName(i[l]);s[c]=this.getTypeInterface(d)._decodeRaw.call(this,e,p,i)}else s[c]=this.getTypeInterface(a)._decodeRaw.call(this,e,l,i)}return s})}registerEnumType(e,t){for(let i in t){let e=this.tempKey(),r=t[i];null===r||Array.isArray(r)||"string"==typeof r||(t[i]=e,this.registerStructType(e,r))}let r=Object.freeze(t),a=Object.keys(r),{name:o,params:n}=this.parseTypeName(e);return this.registerType(e,function(e,t,i,s){if(!t)throw new Error(`Unable to write enum "${o}", missing data.\nReceived: "${t}"`);if("object"!=typeof t)throw new Error(`Incorrect data passed into enum "${o}", expected object with properties: "${a.join(" | ")}".\nReceived: "${JSON.stringify(t)}"`);let c=Object.keys(t)[0];if(void 0===c)throw new Error(`Empty object passed as invariant of the enum "${o}"`);let l=a.indexOf(c);if(-1===l)throw new Error(`Unknown invariant of the enum "${o}", allowed values: "${a.join(" | ")}"; received "${c}"`);let u=a[l],d=r[u];if(e.write8(l),null===d)return e;let p=n.indexOf(d),h=-1===p?d:i[p];{let{name:r,params:a}=this.parseTypeName(h);return this.getTypeInterface(r)._encodeRaw.call(this,e,t[c],a,s)}},function(e,t,i){let s=e.readULEB(),c=a[s],l=r[c];if(-1===s)throw new Error(`Decoding type mismatch, expected enum "${o}" invariant index, received "${s}"`);if(null===l)return{[c]:!0};let u=n.indexOf(l),d=-1===u?l:t[u];{let{name:t,params:r}=this.parseTypeName(d);return{[c]:this.getTypeInterface(t)._decodeRaw.call(this,e,r,i)}}})}getTypeInterface(e){let t=this.types.get(e);if("string"==typeof t){let e=[];for(;"string"==typeof t;){if(e.includes(t))throw new Error(`Recursive definition found: ${e.join(" -> ")} -> ${t}`);e.push(t),t=this.types.get(t)}}if(void 0===t)throw new Error(`Type ${e} is not registered`);return t}parseTypeName(e){if(Array.isArray(e)){let[t,...r]=e;return{name:t,params:r}}if("string"!=typeof e)throw new Error(`Illegal type passed as a name of the type: ${e}`);let[t,r]=this.schema.genericSeparators||["<",">"],a=e.indexOf(t),o=Array.from(e).reverse().indexOf(r);if(-1===a&&-1===o)return{name:e,params:[]};if(-1===a||-1===o)throw new Error(`Unclosed generic in name '${e}'`);return{name:e.slice(0,a),params:Ql(e.slice(a+1,e.length-o-1),this.schema.genericSeparators)}}};let wu=yu;wu.U8="u8",wu.U16="u16",wu.U32="u32",wu.U64="u64",wu.U128="u128",wu.U256="u256",wu.BOOL="bool",wu.VECTOR="vector",wu.ADDRESS="address",wu.STRING="string",wu.HEX="hex-string",wu.BASE58="base58-string",wu.BASE64="base64-string";function ku(e,t=!1){let r=e.toLowerCase();return!t&&r.startsWith("0x")&&(r=r.slice(2)),`0x${r.padStart(64,"0")}`}function xu(e,t=!1){return ku(e,t)}class ju extends TypeError{constructor(e,t){let r;const{message:a,explanation:o,...n}=e,{path:i}=e,s=0===i.length?a:`At path: ${i.join(".")} -- ${a}`;super(o??s),null!=o&&(this.cause=s),Object.assign(this,n),this.name=this.constructor.name,this.failures=()=>r??(r=[e,...t()])}}function zu(e){return"object"==typeof e&&null!=e}function Eu(e){return"symbol"==typeof e?e.toString():"string"==typeof e?JSON.stringify(e):`${e}`}function Su(e,t,r,a){if(!0===e)return;!1===e?e={}:"string"==typeof e&&(e={message:e});const{path:o,branch:n}=t,{type:i}=r,{refinement:s,message:c=`Expected a value of type \`${i}\`${s?` with refinement \`${s}\``:""}, but received: \`${Eu(a)}\``}=e;return{value:a,type:i,refinement:s,key:o[o.length-1],path:o,branch:n,...e,message:c}}function*Iu(e,t,r,a){var o;zu(o=e)&&"function"==typeof o[Symbol.iterator]||(e=[e]);for(const n of e){const e=Su(n,t,r,a);e&&(yield e)}}function*Au(e,t,r={}){const{path:a=[],branch:o=[e],coerce:n=!1,mask:i=!1}=r,s={path:a,branch:o};if(n&&(e=t.coercer(e,s),i&&"type"!==t.type&&zu(t.schema)&&zu(e)&&!Array.isArray(e)))for(const l in e)void 0===t.schema[l]&&delete e[l];let c="valid";for(const l of t.validator(e,s))l.explanation=r.message,c="not_valid",yield[l,void 0];for(let[l,u,d]of t.entries(e,s)){const t=Au(u,d,{path:void 0===l?a:[...a,l],branch:void 0===l?o:[...o,u],coerce:n,mask:i,message:r.message});for(const r of t)r[0]?(c=null!=r[0].refinement?"not_refined":"not_valid",yield[r[0],void 0]):n&&(u=r[1],void 0===l?e=u:e instanceof Map?e.set(l,u):e instanceof Set?e.add(u):zu(e)&&(void 0!==u||l in e)&&(e[l]=u))}if("not_valid"!==c)for(const l of t.refiner(e,s))l.explanation=r.message,c="not_refined",yield[l,void 0];"valid"===c&&(yield[void 0,e])}class Ou{constructor(e){const{type:t,schema:r,validator:a,refiner:o,coercer:n=e=>e,entries:i=function*(){}}=e;this.type=t,this.schema=r,this.entries=i,this.coercer=n,this.validator=a?(e,t)=>Iu(a(e,t),t,this,e):()=>[],this.refiner=o?(e,t)=>Iu(o(e,t),t,this,e):()=>[]}assert(e,t){return Tu(e,this,t)}create(e,t){return Bu(e,this,t)}is(e){return Cu(e,this)}mask(e,t){return Uu(e,this,t)}validate(e,t={}){return Mu(e,this,t)}}function Tu(e,t,r){const a=Mu(e,t,{message:r});if(a[0])throw a[0]}function Bu(e,t,r){const a=Mu(e,t,{coerce:!0,message:r});if(a[0])throw a[0];return a[1]}function Uu(e,t,r){const a=Mu(e,t,{coerce:!0,mask:!0,message:r});if(a[0])throw a[0];return a[1]}function Cu(e,t){return!Mu(e,t)[0]}function Mu(e,t,r={}){const a=Au(e,t,r),o=function(e){const{done:t,value:r}=e.next();return t?void 0:r}(a);if(o[0]){return[new ju(o[0],function*(){for(const e of a)e[0]&&(yield e[0])}),void 0]}return[void 0,o[1]]}function $u(e,t){return new Ou({type:e,schema:null,validator:t})}function Pu(){return $u("any",()=>!0)}function Ru(e){return new Ou({type:"array",schema:e,*entries(t){if(e&&Array.isArray(t))for(const[r,a]of t.entries())yield[r,a,e]},coercer:e=>Array.isArray(e)?e.slice():e,validator:e=>Array.isArray(e)||`Expected an array value, but received: ${Eu(e)}`})}function _u(){return $u("integer",e=>"number"==typeof e&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${Eu(e)}`)}function Vu(e){const t=Eu(e),r=typeof e;return new Ou({type:"literal",schema:"string"===r||"number"===r||"boolean"===r?e:null,validator:r=>r===e||`Expected the literal \`${t}\`, but received: ${Eu(r)}`})}function Nu(e){const t=e?Object.keys(e):[],r=$u("never",()=>!1);return new Ou({type:"object",schema:e||null,*entries(a){if(e&&zu(a)){const o=new Set(Object.keys(a));for(const r of t)o.delete(r),yield[r,a[r],e[r]];for(const e of o)yield[e,a[e],r]}},validator:e=>zu(e)||`Expected an object, but received: ${Eu(e)}`,coercer:e=>zu(e)?{...e}:e})}function qu(e){return new Ou({...e,validator:(t,r)=>void 0===t||e.validator(t,r),refiner:(t,r)=>void 0===t||e.refiner(t,r)})}function Lu(){return $u("string",e=>"string"==typeof e||`Expected a string, but received: ${Eu(e)}`)}function Du(e){const t=e.map(e=>e.type).join(" | ");return new Ou({type:"union",schema:null,coercer(t){for(const r of e){const[e,a]=r.validate(t,{coerce:!0});if(!e)return a}return t},validator(r,a){const o=[];for(const t of e){const[...e]=Au(r,t,a),[n]=e;if(!n[0])return[];for(const[t]of e)t&&o.push(t)}return[`Expected the value to satisfy a union of \`${t}\`, but received: ${Eu(r)}`,...o]}})}BigInt(1e9);const Hu="0x1";xu("0x6");function Fu(e,t){return Bu(e,t)}function Ku(e){return"object"==typeof e&&"MutableReference"in e?e.MutableReference:void 0}function Wu(e){return"object"==typeof e&&"Reference"in e?e.Reference:void 0}function Gu(e){if("object"==typeof e&&"Struct"in e)return e;const t=Wu(e),r=Ku(e);return"object"==typeof t&&"Struct"in t?t:"object"==typeof r&&"Struct"in r?r:void 0}xu("0x5");const Zu={address:"0x2",module:"object",name:"ID"},Ju={address:Hu,module:"ascii",name:"String"},Yu={address:Hu,module:"string",name:"String"},Xu={address:Hu,module:"option",name:"Option"},Qu=(e,t)=>e.address===t.address&&e.module===t.module&&e.name===t.name;function ed(e,t){if(void 0!==t&&typeof t!==e)throw new Error(`Expect ${t} to be ${e}, received ${typeof t}`)}const td=["Address","Bool","U8","U16","U32","U64","U128","U256"];function rd(e,t){if("string"==typeof e&&td.includes(e)){if(e in["U8","U16","U32","U64","U128","U256"])ed("number",t);else if("Bool"===e)ed("boolean",t);else if("Address"===e&&(ed("string",t),t&&(!function(e){return/^(0x|0X)?[a-fA-F0-9]+$/.test(e)&&e.length%2==0}(r=t)||32!==function(e){return/^(0x|0X)/.test(e)?(e.length-2)/2:e.length/2}(r))))throw new Error("Invalid Sui Address");return e.toLowerCase()}if("string"==typeof e)throw new Error(`Unknown pure normalized type ${JSON.stringify(e,null,2)}`);var r;if("Vector"in e){if((void 0===t||"string"==typeof t)&&"U8"===e.Vector)return"string";if(void 0!==t&&!Array.isArray(t))throw new Error(`Expect ${t} to be a array, received ${typeof t}`);const r=rd(e.Vector,t?t[0]:void 0);if(void 0===r)return;return`vector<${r}>`}if("Struct"in e){if(Qu(e.Struct,Ju))return"string";if(Qu(e.Struct,Yu))return"utf8string";if(Qu(e.Struct,Zu))return"address";if(Qu(e.Struct,Xu)){return rd({Vector:e.Struct.typeArguments[0]},t)}}}const ad=/^vector<(.+)>$/,od=/^([^:]+)::([^:]+)::([^<]+)(<(.+)>)?/;class nd{static parseFromStr(e,t=!1){if("address"===e)return{address:null};if("bool"===e)return{bool:null};if("u8"===e)return{u8:null};if("u16"===e)return{u16:null};if("u32"===e)return{u32:null};if("u64"===e)return{u64:null};if("u128"===e)return{u128:null};if("u256"===e)return{u256:null};if("signer"===e)return{signer:null};const r=e.match(ad);if(r)return{vector:nd.parseFromStr(r[1],t)};const a=e.match(od);if(a){return{struct:{address:t?ku(a[1]):a[1],module:a[2],name:a[3],typeParams:void 0===a[5]?[]:nd.parseStructTypeArgs(a[5],t)}}}throw new Error(`Encountered unexpected token when parsing type args for ${e}`)}static parseStructTypeArgs(e,t=!1){return Ql(e).map(e=>nd.parseFromStr(e,t))}static tagToString(e){if("bool"in e)return"bool";if("u8"in e)return"u8";if("u16"in e)return"u16";if("u32"in e)return"u32";if("u64"in e)return"u64";if("u128"in e)return"u128";if("u256"in e)return"u256";if("address"in e)return"address";if("signer"in e)return"signer";if("vector"in e)return`vector<${nd.tagToString(e.vector)}>`;if("struct"in e){const t=e.struct,r=t.typeParams.map(nd.tagToString).join(", ");return`${t.address}::${t.module}::${t.name}${r?`<${r}>`:""}`}throw new Error("Invalid TypeTag")}}const id=new wu({genericSeparators:["<",">"],vectorType:"vector",addressLength:32,addressEncoding:"hex",types:{enums:{"Option<T>":{None:null,Some:"T"}}}});function sd(e){return vu.u64({name:"unsafe_u64",...e}).transform({input:e=>e,output:e=>Number(e)})}function cd(e){return e.transform({input:e=>({[e.kind]:e}),output:e=>{const t=Object.keys(e)[0];return{kind:t,...e[t]}}})}const ld=vu.bytes(32).transform({input:e=>"string"==typeof e?Zl(ku(e)):e,output:e=>ku(Jl(e))}),ud=vu.vector(vu.u8()).transform({name:"ObjectDigest",input:e=>Fl(e),output:e=>Hl(new Uint8Array(e))}),dd=vu.struct("SuiObjectRef",{objectId:ld,version:vu.u64(),digest:ud}),pd=vu.struct("SharedObjectRef",{objectId:ld,initialSharedVersion:vu.u64(),mutable:vu.bool()}),hd=vu.enum("ObjectArg",{ImmOrOwned:dd,Shared:pd,Receiving:dd}),fd=vu.enum("CallArg",{Pure:vu.vector(vu.u8()),Object:hd,ObjVec:vu.vector(hd)}),md=vu.enum("TypeTag",{bool:null,u8:null,u64:null,u128:null,address:null,signer:null,vector:vu.lazy(()=>md),struct:vu.lazy(()=>xd),u16:null,u32:null,u256:null}),gd=cd(vu.enum("Argument",{GasCoin:null,Input:vu.struct("Input",{index:vu.u16()}),Result:vu.struct("Result",{index:vu.u16()}),NestedResult:vu.struct("NestedResult",{index:vu.u16(),resultIndex:vu.u16()})})),bd=vu.struct("ProgrammableMoveCall",{package:ld,module:vu.string(),function:vu.string(),type_arguments:vu.vector(md),arguments:vu.vector(gd)}).transform({input:e=>{const[t,r,a]=e.target.split("::"),o=e.typeArguments.map(e=>nd.parseFromStr(e,!0));return{package:ku(t),module:r,function:a,type_arguments:o,arguments:e.arguments}},output:e=>({target:[e.package,e.module,e.function].join("::"),arguments:e.arguments,typeArguments:e.type_arguments.map(nd.tagToString)})}),vd=cd(vu.enum("Transaction",{MoveCall:bd,TransferObjects:vu.struct("TransferObjects",{objects:vu.vector(gd),address:gd}),SplitCoins:vu.struct("SplitCoins",{coin:gd,amounts:vu.vector(gd)}),MergeCoins:vu.struct("MergeCoins",{destination:gd,sources:vu.vector(gd)}),Publish:vu.struct("Publish",{modules:vu.vector(vu.vector(vu.u8())),dependencies:vu.vector(ld)}),MakeMoveVec:vu.struct("MakeMoveVec",{type:function(e){return vu.enum("Option",{None:null,Some:e})}(md),objects:vu.vector(gd)}),Upgrade:vu.struct("Upgrade",{modules:vu.vector(vu.vector(vu.u8())),dependencies:vu.vector(ld),packageId:ld,ticket:gd})})),yd=vu.struct("ProgrammableTransaction",{inputs:vu.vector(fd),transactions:vu.vector(vd)}),wd=vu.enum("TransactionKind",{ProgrammableTransaction:yd,ChangeEpoch:null,Genesis:null,ConsensusCommitPrologue:null}),kd=vu.enum("TransactionExpiration",{None:null,Epoch:sd()}),xd=vu.struct("StructTag",{address:ld,module:vu.string(),name:vu.string(),typeParams:vu.vector(md)}),jd=vu.struct("GasData",{payment:vu.vector(dd),owner:ld,price:vu.u64(),budget:vu.u64()}),zd=vu.struct("TransactionDataV1",{kind:wd,sender:ld,gasData:jd,expiration:kd}),Ed=vu.enum("TransactionData",{V1:zd}),Sd=vu.enum("IntentScope",{TransactionData:null,TransactionEffects:null,CheckpointSummary:null,PersonalMessage:null}),Id=vu.enum("IntentVersion",{V0:null}),Ad=vu.enum("AppId",{Sui:null}),Od=vu.struct("Intent",{scope:Sd,version:Id,appId:Ad}),Td=vu.generic(["T"],e=>vu.struct("IntentMessage<T>",{intent:Od,value:e})),Bd=vu.enum("CompressedSignature",{ED25519:vu.fixedArray(64,vu.u8()),Secp256k1:vu.fixedArray(64,vu.u8()),Secp256r1:vu.fixedArray(64,vu.u8()),ZkLogin:vu.vector(vu.u8())}),Ud=vu.enum("PublicKey",{ED25519:vu.fixedArray(32,vu.u8()),Secp256k1:vu.fixedArray(33,vu.u8()),Secp256r1:vu.fixedArray(33,vu.u8()),ZkLogin:vu.vector(vu.u8())}),Cd=vu.struct("MultiSigPkMap",{pubKey:Ud,weight:vu.u8()}),Md=vu.struct("MultiSigPublicKey",{pk_map:vu.vector(Cd),threshold:vu.u16()}),$d=vu.struct("MultiSig",{sigs:vu.vector(Bd),bitmap:vu.u16(),multisig_pk:Md}),Pd=vu.vector(vu.u8()).transform({input:e=>"string"==typeof e?Kl(e):e,output:e=>Gl(new Uint8Array(e))}),Rd=vu.struct("SenderSignedTransaction",{intentMessage:Td(Ed),txSignatures:vu.vector(Pd)}),_d=vu.vector(Rd,{name:"SenderSignedData"}),Vd={...vu,U8:vu.u8(),U16:vu.u16(),U32:vu.u32(),U64:vu.u64(),U128:vu.u128(),U256:vu.u256(),ULEB128:vu.uleb128(),Bool:vu.bool(),String:vu.string(),Address:ld,Argument:gd,CallArg:fd,CompressedSignature:Bd,GasData:jd,MultiSig:$d,MultiSigPkMap:Cd,MultiSigPublicKey:Md,ObjectArg:hd,ObjectDigest:ud,ProgrammableMoveCall:bd,ProgrammableTransaction:yd,PublicKey:Ud,SenderSignedData:_d,SenderSignedTransaction:Rd,SharedObjectRef:pd,StructTag:xd,SuiObjectRef:dd,Transaction:vd,TransactionData:Ed,TransactionDataV1:zd,TransactionExpiration:kd,TransactionKind:wd,TypeTag:md,ser:id.ser.bind(id),de:id.de.bind(id),getTypeInterface:id.getTypeInterface.bind(id),hasType:id.hasType.bind(id),parseTypeName:id.parseTypeName.bind(id),registerAddressType:id.registerAddressType.bind(id),registerAlias:id.registerAlias.bind(id),registerBcsType:id.registerBcsType.bind(id),registerEnumType:id.registerEnumType.bind(id),registerStructType:id.registerStructType.bind(id),registerType:id.registerType.bind(id),types:id.types};id.registerBcsType("utf8string",()=>vu.string({name:"utf8string"})),id.registerBcsType("unsafe_u64",()=>sd()),id.registerBcsType("enumKind",e=>cd(e)),[ld,gd,fd,Bd,jd,$d,Cd,Md,hd,ud,bd,yd,Ud,_d,pd,xd,dd,vd,Ed,zd,kd,wd,md].forEach(e=>{id.registerBcsType(e.name,()=>e)});const Nd=Nu({digest:Lu(),objectId:Lu(),version:Du([$u("number",e=>"number"==typeof e&&!isNaN(e)||`Expected a number, but received: ${Eu(e)}`),Lu(),$u("bigint",e=>"bigint"==typeof e)])}),qd=Du([Nu({ImmOrOwned:Nd}),Nu({Shared:Nu({objectId:Lu(),initialSharedVersion:Du([_u(),Lu()]),mutable:$u("boolean",e=>"boolean"==typeof e)})}),Nu({Receiving:Nd})]),Ld=Nu({Pure:Ru(_u())}),Dd=Nu({Object:qd}),Hd=Du([Ld,Dd]);const Fd={Pure:function(e,t){return{Pure:Array.from(e instanceof Uint8Array?e:hu(e)?e.toBytes():Vd.ser(t,e,{maxSize:1/0}).toBytes())}},ObjectRef:({objectId:e,digest:t,version:r})=>({Object:{ImmOrOwned:{digest:t,version:r,objectId:ku(e)}}}),SharedObjectRef:({objectId:e,mutable:t,initialSharedVersion:r})=>({Object:{Shared:{mutable:t,initialSharedVersion:r,objectId:ku(e)}}}),ReceivingRef:({objectId:e,digest:t,version:r})=>({Object:{Receiving:{digest:t,version:r,objectId:ku(e)}}})};function Kd(e){return"string"==typeof e?ku(e):"ImmOrOwned"in e.Object?ku(e.Object.ImmOrOwned.objectId):"Receiving"in e.Object?ku(e.Object.Receiving.objectId):ku(e.Object.Shared.objectId)}const Wd=Du([Nu({kind:Vu("Input"),index:_u(),value:qu(Pu()),type:qu(Vu("object"))}),Nu({kind:Vu("Input"),index:_u(),value:qu(Pu()),type:Vu("pure")})]),Gd=Du([...[Wd,Nu({kind:Vu("GasCoin")}),Nu({kind:Vu("Result"),index:_u()}),Nu({kind:Vu("NestedResult"),index:_u(),resultIndex:_u()})]]),Zd=Nu({kind:Vu("MoveCall"),target:$u("target",Lu().validator),typeArguments:Ru(Lu()),arguments:Ru(Gd)}),Jd=Nu({kind:Vu("TransferObjects"),objects:Ru(Gd),address:Gd}),Yd=Nu({kind:Vu("SplitCoins"),coin:Gd,amounts:Ru(Gd)}),Xd=Nu({kind:Vu("MergeCoins"),destination:Gd,sources:Ru(Gd)}),Qd=Nu({kind:Vu("MakeMoveVec"),type:qu((tp=Lu(),rp=$u("unknown",()=>!0),ep=new Ou({type:"record",schema:null,*entries(e){if(zu(e))for(const t in e){const r=e[t];yield[t,t,tp],yield[t,r,rp]}},validator:e=>zu(e)||`Expected an object, but received: ${Eu(e)}`}),Du([Nu({None:Du([Vu(!0),Vu(null)])}),Nu({Some:ep})]))),objects:Ru(Gd)});var ep,tp,rp;const ap=Nu({kind:Vu("Publish"),modules:Ru(Ru(_u())),dependencies:Ru(Lu())}),op=Nu({kind:Vu("Upgrade"),modules:Ru(Ru(_u())),dependencies:Ru(Lu()),packageId:Lu(),ticket:Gd}),np=Du([...[Zd,Jd,Yd,Xd,ap,op,Qd]]),ip={MoveCall:e=>Fu({kind:"MoveCall",target:e.target,arguments:e.arguments??[],typeArguments:e.typeArguments??[]},Zd),TransferObjects:(e,t)=>("Input"===t.kind&&"pure"===t.type&&"object"!=typeof t.value&&(t.value=Fd.Pure(Vd.Address.serialize(t.value))),Fu({kind:"TransferObjects",objects:e,address:t},Jd)),SplitCoins:(e,t)=>(t.forEach(e=>{"Input"===e.kind&&"pure"===e.type&&"object"!=typeof e.value&&(e.value=Fd.Pure(Vd.U64.serialize(e.value)))}),Fu({kind:"SplitCoins",coin:e,amounts:t},Yd)),MergeCoins:(e,t)=>Fu({kind:"MergeCoins",destination:e,sources:t},Xd),Publish:({modules:e,dependencies:t})=>Fu({kind:"Publish",modules:e.map(e=>"string"==typeof e?Array.from(Kl(e)):e),dependencies:t.map(e=>xu(e))},ap),Upgrade:({modules:e,dependencies:t,packageId:r,ticket:a})=>Fu({kind:"Upgrade",modules:e.map(e=>"string"==typeof e?Array.from(Kl(e)):e),dependencies:t.map(e=>xu(e)),packageId:r,ticket:a},op),MakeMoveVec:({type:e,objects:t})=>Fu({kind:"MakeMoveVec",type:e?{Some:nd.parseFromStr(e)}:{None:null},objects:t},Qd)};function sp(e){function t(t,r){return e(t,r)}return t.u8=t=>e(Vd.U8.serialize(t)),t.u16=t=>e(Vd.U16.serialize(t)),t.u32=t=>e(Vd.U32.serialize(t)),t.u64=t=>e(Vd.U64.serialize(t)),t.u128=t=>e(Vd.U128.serialize(t)),t.u256=t=>e(Vd.U256.serialize(t)),t.bool=t=>e(Vd.Bool.serialize(t)),t.string=t=>e(Vd.String.serialize(t)),t.address=t=>e(Vd.Address.serialize(t)),t.id=t.address,t}const cp=qu((lp=Du([Nu({Epoch:_u()}),Nu({None:Du([Vu(!0),Vu(null)])})]),new Ou({...lp,validator:(e,t)=>null===e||lp.validator(e,t),refiner:(e,t)=>null===e||lp.refiner(e,t)})));var lp;const up=$u("StringEncodedBigint",e=>{if(!["string","number","bigint"].includes(typeof e))return!1;try{return BigInt(e),!0}catch{return!1}}),dp=Nu({budget:qu(up),price:qu(up),payment:qu(Ru(Nd)),owner:qu(Lu())}),pp=Nu({version:Vu(1),sender:qu(Lu()),expiration:cp,gasConfig:dp,inputs:Ru(Wd),transactions:Ru(np)});function hp(e){return ku(e).replace("0x","")}class fp{constructor(e){this.version=1,this.sender=null==e?void 0:e.sender,this.expiration=null==e?void 0:e.expiration,this.gasConfig=(null==e?void 0:e.gasConfig)??{},this.inputs=(null==e?void 0:e.inputs)??[],this.transactions=(null==e?void 0:e.transactions)??[]}static fromKindBytes(e){const t=Vd.TransactionKind.parse(e),r="ProgrammableTransaction"in t?t.ProgrammableTransaction:null;if(!r)throw new Error("Unable to deserialize from bytes.");const a=Fu({version:1,gasConfig:{},inputs:r.inputs.map((e,t)=>Fu({kind:"Input",value:e,index:t,type:Cu(e,Ld)?"pure":"object"},Wd)),transactions:r.transactions},pp);return fp.restore(a)}static fromBytes(e){var t;const r=Vd.TransactionData.parse(e),a=null==r?void 0:r.V1,o="ProgrammableTransaction"in a.kind?null==(t=null==a?void 0:a.kind)?void 0:t.ProgrammableTransaction:null;if(!a||!o)throw new Error("Unable to deserialize from bytes.");const n=Fu({version:1,sender:a.sender,expiration:a.expiration,gasConfig:a.gasData,inputs:o.inputs.map((e,t)=>Fu({kind:"Input",value:e,index:t,type:Cu(e,Ld)?"pure":"object"},Wd)),transactions:o.transactions},pp);return fp.restore(n)}static restore(e){Tu(e,pp);const t=new fp;return Object.assign(t,e),t}static getDigestFromBytes(e){const t=function(e,t){const r=Array.from(`${e}::`).map(e=>e.charCodeAt(0)),a=new Uint8Array(r.length+t.length);return a.set(r),a.set(t,r.length),ln(a,{dkLen:32})}("TransactionData",e);return Hl(t)}build({maxSizeBytes:e=1/0,overrides:t,onlyTransactionKind:r}={}){const a=this.inputs.map(e=>(Tu(e.value,Hd),e.value)),o={ProgrammableTransaction:{inputs:a,transactions:this.transactions}};if(r)return Vd.TransactionKind.serialize(o,{maxSize:e}).toBytes();const n=(null==t?void 0:t.expiration)??this.expiration,i=(null==t?void 0:t.sender)??this.sender,s={...this.gasConfig,...null==t?void 0:t.gasConfig};if(!i)throw new Error("Missing transaction sender");if(!s.budget)throw new Error("Missing gas budget");if(!s.payment)throw new Error("Missing gas payment");if(!s.price)throw new Error("Missing gas price");const c={sender:hp(i),expiration:n||{None:!0},gasData:{payment:s.payment,owner:hp(this.gasConfig.owner??i),price:BigInt(s.price),budget:BigInt(s.budget)},kind:{ProgrammableTransaction:{inputs:a,transactions:this.transactions}}};return Vd.TransactionData.serialize({V1:c},{maxSize:e}).toBytes()}getDigest(){const e=this.build({onlyTransactionKind:!1});return fp.getDigestFromBytes(e)}snapshot(){return Fu(this,pp)}}var mp,gp,bp,vp,yp,wp,kp,xp,jp,zp,Ep,Sp,Ip,Ap,Op,Tp,Bp,Up=(e,t,r)=>{if(!t.has(e))throw TypeError("Cannot "+r)},Cp=(e,t,r)=>(Up(e,t,"read from private field"),r?r.call(e):t.get(e)),Mp=(e,t,r)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,r)},$p=(e,t,r,a)=>(Up(e,t,"write to private field"),t.set(e,r),r),Pp=(e,t,r)=>(Up(e,t,"access private method"),r);const Rp={maxPureArgumentSize:16384,maxTxGas:5e10,maxGasObjects:256,maxTxSizeBytes:131072};function _p(e){if(!e.client)throw new Error("No provider passed to Transaction#build, but transaction data was not sufficient to build offline.");return e.client}const Vp=Symbol.for("@mysten/transaction"),Np={maxTxGas:"max_tx_gas",maxGasObjects:"max_gas_payment_objects",maxTxSizeBytes:"max_tx_size_bytes",maxPureArgumentSize:"max_pure_argument_size"},qp=class{constructor(e){Mp(this,gp),Mp(this,vp),Mp(this,wp),Mp(this,xp),Mp(this,zp),Mp(this,Sp),Mp(this,Ap),Mp(this,Tp),Mp(this,mp,void 0),$p(this,mp,new fp(e?e.blockData:void 0))}static fromKind(e){const t=new qp;return $p(t,mp,fp.fromKindBytes("string"==typeof e?Kl(e):e)),t}static from(e){const t=new qp;return"string"==typeof e&&e.startsWith("{")?$p(t,mp,fp.restore(JSON.parse(e))):$p(t,mp,fp.fromBytes("string"==typeof e?Kl(e):e)),t}setSender(e){Cp(this,mp).sender=e}setSenderIfNotSet(e){Cp(this,mp).sender||(Cp(this,mp).sender=e)}setExpiration(e){Cp(this,mp).expiration=e}setGasPrice(e){Cp(this,mp).gasConfig.price=String(e)}setGasBudget(e){Cp(this,mp).gasConfig.budget=String(e)}setGasOwner(e){Cp(this,mp).gasConfig.owner=e}setGasPayment(e){Cp(this,mp).gasConfig.payment=e.map(e=>Uu(e,Nd))}get blockData(){return Cp(this,mp).snapshot()}get[Vp](){return!0}get pure(){return Object.defineProperty(this,"pure",{enumerable:!1,value:sp((e,t)=>hu(e)?Pp(this,gp,bp).call(this,"pure",{Pure:Array.from(e.toBytes())}):Pp(this,gp,bp).call(this,"pure",e instanceof Uint8Array?Fd.Pure(e):t?Fd.Pure(e,t):e))}),this.pure}get gas(){return{kind:"GasCoin"}}object(e){if("object"==typeof e&&"kind"in e)return e;const t=Kd(e),r=Cp(this,mp).inputs.find(e=>"object"===e.type&&t===Kd(e.value));return r&&Cu(r.value,Dd)&&"Shared"in r.value.Object&&Cu(e,Dd)&&"Shared"in e.Object&&(r.value.Object.Shared.mutable=r.value.Object.Shared.mutable||e.Object.Shared.mutable),r??Pp(this,gp,bp).call(this,"object","string"==typeof e?ku(e):e)}objectRef(...e){return this.object(Fd.ObjectRef(...e))}receivingRef(...e){return this.object(Fd.ReceivingRef(...e))}sharedObjectRef(...e){return this.object(Fd.SharedObjectRef(...e))}add(e){return function(e){const t=[],r=r=>t[r]??(t[r]={kind:"NestedResult",index:e,resultIndex:r});return new Proxy({kind:"Result",index:e},{set(){throw new Error("The transaction result is a proxy, and does not support setting properties directly")},get(e,t){if(t in e)return Reflect.get(e,t);if(t===Symbol.iterator)return function*(){let e=0;for(;;)yield r(e),e++};if("symbol"==typeof t)return;const a=parseInt(t,10);return Number.isNaN(a)||a<0?void 0:r(a)}})}(Cp(this,mp).transactions.push(e)-1)}splitCoins(e,t){return this.add(ip.SplitCoins("string"==typeof e?this.object(e):e,t.map(e=>"number"==typeof e||"bigint"==typeof e||"string"==typeof e?this.pure.u64(e):Pp(this,vp,yp).call(this,e))))}mergeCoins(e,t){return this.add(ip.MergeCoins("string"==typeof e?this.object(e):e,t.map(e=>"string"==typeof e?this.object(e):e)))}publish({modules:e,dependencies:t}){return this.add(ip.Publish({modules:e,dependencies:t}))}upgrade({modules:e,dependencies:t,packageId:r,ticket:a}){return this.add(ip.Upgrade({modules:e,dependencies:t,packageId:r,ticket:"string"==typeof a?this.object(a):a}))}moveCall({arguments:e,typeArguments:t,target:r}){return this.add(ip.MoveCall({arguments:null==e?void 0:e.map(e=>Pp(this,vp,yp).call(this,e)),typeArguments:t,target:r}))}transferObjects(e,t){return this.add(ip.TransferObjects(e.map(e=>"string"==typeof e?this.object(e):e),"string"==typeof t?this.pure.address(t):Pp(this,vp,yp).call(this,t)))}makeMoveVec({type:e,objects:t}){return this.add(ip.MakeMoveVec({type:e,objects:t.map(e=>"string"==typeof e?this.object(e):e)}))}serialize(){return JSON.stringify(Cp(this,mp).snapshot())}async sign(e){const{signer:t,...r}=e,a=await this.build(r);return t.signTransactionBlock(a)}async build(e={}){return await Pp(this,Tp,Bp).call(this,e),Cp(this,mp).build({maxSizeBytes:Pp(this,wp,kp).call(this,"maxTxSizeBytes",e),onlyTransactionKind:e.onlyTransactionKind})}async getDigest(e={}){return await Pp(this,Tp,Bp).call(this,e),Cp(this,mp).getDigest()}};let Lp=qp;mp=new WeakMap,gp=new WeakSet,bp=function(e,t){const r=Cp(this,mp).inputs.length,a=Fu({kind:"Input",value:"bigint"==typeof t?String(t):t,index:r,type:e},Wd);return Cp(this,mp).inputs.push(a),a},vp=new WeakSet,yp=function(e){return hu(e)?this.pure(e):e},wp=new WeakSet,kp=function(e,{protocolConfig:t,limits:r}){if(r&&"number"==typeof r[e])return r[e];if(!t)return Rp[e];const a=null==t?void 0:t.attributes[Np[e]];if(!a)throw new Error(`Missing expected protocol config: "${Np[e]}"`);const o="u64"in a?a.u64:"u32"in a?a.u32:a.f64;if(!o)throw new Error(`Unexpected protocol config value found for: "${Np[e]}"`);return Number(o)},xp=new WeakSet,jp=function(e){const t=Pp(this,wp,kp).call(this,"maxPureArgumentSize",e);Cp(this,mp).inputs.forEach((e,r)=>{if(Cu(e.value,Ld)&&e.value.Pure.length>t)throw new Error(`Input at index ${r} is too large, max pure input size is ${t} bytes, got ${e.value.Pure.length} bytes`)})},zp=new WeakSet,Ep=async function(e){if(Cp(this,mp).gasConfig.payment){const t=Pp(this,wp,kp).call(this,"maxGasObjects",e);if(Cp(this,mp).gasConfig.payment.length>t)throw new Error(`Payment objects exceed maximum amount: ${t}`)}if(e.onlyTransactionKind||Cp(this,mp).gasConfig.payment)return;const t=Cp(this,mp).gasConfig.owner??Cp(this,mp).sender,r=(await _p(e).getCoins({owner:t,coinType:"0x2::sui::SUI"})).data.filter(e=>!Cp(this,mp).inputs.find(t=>!!(Cu(t.value,Hd)&&"Object"in t.value&&"ImmOrOwned"in t.value.Object)&&e.coinObjectId===t.value.Object.ImmOrOwned.objectId)).slice(0,Pp(this,wp,kp).call(this,"maxGasObjects",e)-1).map(e=>({objectId:e.coinObjectId,digest:e.digest,version:e.version}));if(!r.length)throw new Error("No valid gas coins found for the transaction.");this.setGasPayment(r)},Sp=new WeakSet,Ip=async function(e){e.onlyTransactionKind||Cp(this,mp).gasConfig.price||this.setGasPrice(await _p(e).getReferenceGasPrice())},Ap=new WeakSet,Op=async function(e){const{inputs:t,transactions:r}=Cp(this,mp),a=[],o=[];if(t.forEach(e=>{"object"!==e.type||"string"!=typeof e.value||o.push({id:ku(e.value),input:e})}),r.forEach(e=>{if("MoveCall"===e.kind){e.arguments.some(e=>"Input"===e.kind&&!Cu(t[e.index].value,Hd))&&a.push(e)}if("SplitCoins"===e.kind&&e.amounts.forEach(e=>{if("Input"===e.kind){const r=t[e.index];"object"!=typeof r.value&&(r.value=Fd.Pure(Vd.U64.serialize(r.value)))}}),"TransferObjects"===e.kind&&"Input"===e.address.kind){const r=t[e.address.index];"object"!=typeof r.value&&(r.value=Fd.Pure(Vd.Address.serialize(r.value)))}}),a.length&&await Promise.all(a.map(async r=>{const[a,n,i]=r.target.split("::"),s=await _p(e).getNormalizedMoveFunction({package:xu(a),module:n,function:i}),c=s.parameters.length>0&&function(e){var t;const r=null==(t=Gu(e))?void 0:t.Struct;return"0x2"===(null==r?void 0:r.address)&&"tx_context"===(null==r?void 0:r.module)&&"TxContext"===(null==r?void 0:r.name)}(s.parameters.at(-1)),l=c?s.parameters.slice(0,s.parameters.length-1):s.parameters;if(l.length!==r.arguments.length)throw new Error("Incorrect number of arguments.");l.forEach((e,a)=>{const n=r.arguments[a];if("Input"!==n.kind)return;const i=t[n.index];if(Cu(i.value,Hd))return;const s=i.value,c=rd(e,s);if(c)return void(i.value=Fd.Pure(s,c));if(!(null!=Gu(e)||"object"==typeof e&&"TypeParameter"in e))throw new Error(`Unknown call arg type ${JSON.stringify(e,null,2)} for value ${JSON.stringify(s,null,2)}`);if("string"!=typeof s)throw new Error(`Expect the argument to be an object id string, got ${JSON.stringify(s,null,2)}`);o.push({id:s,input:i,normalizedType:e})})})),o.length){const t=[...new Set(o.map(({id:e})=>e))],r=(n=t,i=50,Array.from({length:Math.ceil(n.length/i)},(e,t)=>n.slice(t*i,t*i+i))),a=(await Promise.all(r.map(t=>_p(e).multiGetObjects({ids:t,options:{showOwner:!0}})))).flat();let s=new Map(t.map((e,t)=>[e,a[t]]));const c=Array.from(s).filter(([e,t])=>t.error).map(([e,t])=>e);if(c.length)throw new Error(`The following input objects are invalid: ${c.join(", ")}`);o.forEach(({id:e,input:t,normalizedType:r})=>{var a;const o=s.get(e),n=null==(a=o.data)?void 0:a.owner,i=n&&"object"==typeof n&&"Shared"in n?n.Shared.initial_shared_version:void 0;if(i){const a=null!=r&&null==Ku(r)&&null==Wu(r),o=function(e){var t;return(null==(t=function(e){return"object"==typeof e&&"Object"in e&&"Shared"in e.Object?e.Object.Shared:void 0}(e))?void 0:t.mutable)??!1}(t.value)||a||null!=r&&null!=Ku(r);t.value=Fd.SharedObjectRef({objectId:e,initialSharedVersion:i,mutable:o})}else r&&function(e){const t=Gu(e);return!!t&&"0x2"===t.Struct.address&&"transfer"===t.Struct.module&&"Receiving"===t.Struct.name}(r)?t.value=Fd.ReceivingRef(o.data):t.value=Fd.ObjectRef(o.data)})}var n,i},Tp=new WeakSet,Bp=async function(e){if(!e.onlyTransactionKind&&!Cp(this,mp).sender)throw new Error("Missing transaction sender");if(e.protocolConfig||e.limits||!e.client||(e.protocolConfig=await e.client.getProtocolConfig()),await Promise.all([Pp(this,Sp,Ip).call(this,e),Pp(this,Ap,Op).call(this,e)]),!e.onlyTransactionKind&&(await Pp(this,zp,Ep).call(this,e),!Cp(this,mp).gasConfig.budget)){const t=await _p(e).dryRunTransactionBlock({transactionBlock:Cp(this,mp).build({maxSizeBytes:Pp(this,wp,kp).call(this,"maxTxSizeBytes",e),overrides:{gasConfig:{budget:String(Pp(this,wp,kp).call(this,"maxTxGas",e)),payment:[]}}})});if("success"!==t.effects.status.status)throw new Error(`Dry run failed, could not automatically determine a budget: ${t.effects.status.error}`,{cause:t});const r=1000n*BigInt(this.blockData.gasConfig.price||1n),a=BigInt(t.effects.gasUsed.computationCost)+r,o=a+BigInt(t.effects.gasUsed.storageCost)-BigInt(t.effects.gasUsed.storageRebate);this.setGasBudget(o>a?o:a)}Pp(this,xp,jp).call(this,e)};for(var Dp={},Hp={byteLength:function(e){var t=Jp(e),r=t[0],a=t[1];return 3*(r+a)/4-a},toByteArray:function(e){var t,r,a=Jp(e),o=a[0],n=a[1],i=new Wp(function(e,t,r){return 3*(t+r)/4-r}(0,o,n)),s=0,c=n>0?o-4:o;for(r=0;r<c;r+=4)t=Kp[e.charCodeAt(r)]<<18|Kp[e.charCodeAt(r+1)]<<12|Kp[e.charCodeAt(r+2)]<<6|Kp[e.charCodeAt(r+3)],i[s++]=t>>16&255,i[s++]=t>>8&255,i[s++]=255&t;2===n&&(t=Kp[e.charCodeAt(r)]<<2|Kp[e.charCodeAt(r+1)]>>4,i[s++]=255&t);1===n&&(t=Kp[e.charCodeAt(r)]<<10|Kp[e.charCodeAt(r+1)]<<4|Kp[e.charCodeAt(r+2)]>>2,i[s++]=t>>8&255,i[s++]=255&t);return i},fromByteArray:function(e){for(var t,r=e.length,a=r%3,o=[],n=16383,i=0,s=r-a;i<s;i+=n)o.push(Xp(e,i,i+n>s?s:i+n));1===a?(t=e[r-1],o.push(Fp[t>>2]+Fp[t<<4&63]+"==")):2===a&&(t=(e[r-2]<<8)+e[r-1],o.push(Fp[t>>10]+Fp[t>>4&63]+Fp[t<<2&63]+"="));return o.join("")}},Fp=[],Kp=[],Wp="undefined"!=typeof Uint8Array?Uint8Array:Array,Gp="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Zp=0;Zp<64;++Zp)Fp[Zp]=Gp[Zp],Kp[Gp.charCodeAt(Zp)]=Zp;function Jp(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function Yp(e){return Fp[e>>18&63]+Fp[e>>12&63]+Fp[e>>6&63]+Fp[63&e]}function Xp(e,t,r){for(var a,o=[],n=t;n<r;n+=3)a=(e[n]<<16&16711680)+(e[n+1]<<8&65280)+(255&e[n+2]),o.push(Yp(a));return o.join("")}Kp["-".charCodeAt(0)]=62,Kp["_".charCodeAt(0)]=63;var Qp={
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
read:function(e,t,r,a,o){var n,i,s=8*o-a-1,c=(1<<s)-1,l=c>>1,u=-7,d=r?o-1:0,p=r?-1:1,h=e[t+d];for(d+=p,n=h&(1<<-u)-1,h>>=-u,u+=s;u>0;n=256*n+e[t+d],d+=p,u-=8);for(i=n&(1<<-u)-1,n>>=-u,u+=a;u>0;i=256*i+e[t+d],d+=p,u-=8);if(0===n)n=1-l;else{if(n===c)return i?NaN:1/0*(h?-1:1);i+=Math.pow(2,a),n-=l}return(h?-1:1)*i*Math.pow(2,n-a)},write:function(e,t,r,a,o,n){var i,s,c,l=8*n-o-1,u=(1<<l)-1,d=u>>1,p=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=a?0:n-1,f=a?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,i=u):(i=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-i))<1&&(i--,c*=2),(t+=i+d>=1?p/c:p*Math.pow(2,1-d))*c>=2&&(i++,c/=2),i+d>=u?(s=0,i=u):i+d>=1?(s=(t*c-1)*Math.pow(2,o),i+=d):(s=t*Math.pow(2,d-1)*Math.pow(2,o),i=0));o>=8;e[r+h]=255&s,h+=f,s/=256,o-=8);for(i=i<<o|s,l+=o;l>0;e[r+h]=255&i,h+=f,i/=256,l-=8);e[r+h-f]|=128*m}};
/*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
!function(e){const t=Hp,r=Qp,a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=l,e.SlowBuffer=function(e){+e!=e&&(e=0);return l.alloc(+e)},e.INSPECT_MAX_BYTES=50;const o=2147483647;e.kMaxLength=o;const{Uint8Array:n,ArrayBuffer:i,SharedArrayBuffer:s}=globalThis;function c(e){if(e>o)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new n(e);return Object.setPrototypeOf(t,l.prototype),t}function l(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return p(e)}return u(e,t,r)}function u(e,t,r){if("string"==typeof e)return function(e,t){"string"==typeof t&&""!==t||(t="utf8");if(!l.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|g(e,t);let a=c(r);const o=a.write(e,t);o!==r&&(a=a.slice(0,o));return a}(e,t);if(i.isView(e))return function(e){if(J(e,n)){const t=new n(e);return f(t.buffer,t.byteOffset,t.byteLength)}return h(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(J(e,i)||e&&J(e.buffer,i))return f(e,t,r);if(void 0!==s&&(J(e,s)||e&&J(e.buffer,s)))return f(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const a=e.valueOf&&e.valueOf();if(null!=a&&a!==e)return l.from(a,t,r);const o=function(e){if(l.isBuffer(e)){const t=0|m(e.length),r=c(t);return 0===r.length||e.copy(r,0,0,t),r}if(void 0!==e.length)return"number"!=typeof e.length||Y(e.length)?c(0):h(e);if("Buffer"===e.type&&Array.isArray(e.data))return h(e.data)}(e);if(o)return o;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return l.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function d(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function p(e){return d(e),c(e<0?0:0|m(e))}function h(e){const t=e.length<0?0:0|m(e.length),r=c(t);for(let a=0;a<t;a+=1)r[a]=255&e[a];return r}function f(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let a;return a=void 0===t&&void 0===r?new n(e):void 0===r?new n(e,t):new n(e,t,r),Object.setPrototypeOf(a,l.prototype),a}function m(e){if(e>=o)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+o.toString(16)+" bytes");return 0|e}function g(e,t){if(l.isBuffer(e))return e.length;if(i.isView(e)||J(e,i))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===r)return 0;let o=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return W(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return G(e).length;default:if(o)return a?-1:W(e).length;t=(""+t).toLowerCase(),o=!0}}function b(e,t,r){let a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return B(this,t,r);case"utf8":case"utf-8":return I(this,t,r);case"ascii":return O(this,t,r);case"latin1":case"binary":return T(this,t,r);case"base64":return S(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return U(this,t,r);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function v(e,t,r){const a=e[t];e[t]=e[r],e[r]=a}function y(e,t,r,a,o){if(0===e.length)return-1;if("string"==typeof r?(a=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),Y(r=+r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=l.from(t,a)),l.isBuffer(t))return 0===t.length?-1:w(e,t,r,a,o);if("number"==typeof t)return t&=255,"function"==typeof n.prototype.indexOf?o?n.prototype.indexOf.call(e,t,r):n.prototype.lastIndexOf.call(e,t,r):w(e,[t],r,a,o);throw new TypeError("val must be string, number or Buffer")}function w(e,t,r,a,o){let n,i=1,s=e.length,c=t.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||t.length<2)return-1;i=2,s/=2,c/=2,r/=2}function l(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(o){let a=-1;for(n=r;n<s;n++)if(l(e,n)===l(t,-1===a?0:n-a)){if(-1===a&&(a=n),n-a+1===c)return a*i}else-1!==a&&(n-=n-a),a=-1}else for(r+c>s&&(r=s-c),n=r;n>=0;n--){let r=!0;for(let a=0;a<c;a++)if(l(e,n+a)!==l(t,a)){r=!1;break}if(r)return n}return-1}function k(e,t,r,a){r=Number(r)||0;const o=e.length-r;a?(a=Number(a))>o&&(a=o):a=o;const n=t.length;let i;for(a>n/2&&(a=n/2),i=0;i<a;++i){const a=parseInt(t.substr(2*i,2),16);if(Y(a))return i;e[r+i]=a}return i}function x(e,t,r,a){return Z(W(t,e.length-r),e,r,a)}function j(e,t,r,a){return Z(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,a)}function z(e,t,r,a){return Z(G(t),e,r,a)}function E(e,t,r,a){return Z(function(e,t){let r,a,o;const n=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)r=e.charCodeAt(i),a=r>>8,o=r%256,n.push(o),n.push(a);return n}(t,e.length-r),e,r,a)}function S(e,r,a){return 0===r&&a===e.length?t.fromByteArray(e):t.fromByteArray(e.slice(r,a))}function I(e,t,r){r=Math.min(e.length,r);const a=[];let o=t;for(;o<r;){const t=e[o];let n=null,i=t>239?4:t>223?3:t>191?2:1;if(o+i<=r){let r,a,s,c;switch(i){case 1:t<128&&(n=t);break;case 2:r=e[o+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(n=c));break;case 3:r=e[o+1],a=e[o+2],128==(192&r)&&128==(192&a)&&(c=(15&t)<<12|(63&r)<<6|63&a,c>2047&&(c<55296||c>57343)&&(n=c));break;case 4:r=e[o+1],a=e[o+2],s=e[o+3],128==(192&r)&&128==(192&a)&&128==(192&s)&&(c=(15&t)<<18|(63&r)<<12|(63&a)<<6|63&s,c>65535&&c<1114112&&(n=c))}}null===n?(n=65533,i=1):n>65535&&(n-=65536,a.push(n>>>10&1023|55296),n=56320|1023&n),a.push(n),o+=i}return function(e){const t=e.length;if(t<=A)return String.fromCharCode.apply(String,e);let r="",a=0;for(;a<t;)r+=String.fromCharCode.apply(String,e.slice(a,a+=A));return r}(a)}l.TYPED_ARRAY_SUPPORT=function(){try{const e=new n(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,n.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),l.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(l.prototype,"parent",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.buffer}}),Object.defineProperty(l.prototype,"offset",{enumerable:!0,get:function(){if(l.isBuffer(this))return this.byteOffset}}),l.poolSize=8192,l.from=function(e,t,r){return u(e,t,r)},Object.setPrototypeOf(l.prototype,n.prototype),Object.setPrototypeOf(l,n),l.alloc=function(e,t,r){return function(e,t,r){return d(e),e<=0?c(e):void 0!==t?"string"==typeof r?c(e).fill(t,r):c(e).fill(t):c(e)}(e,t,r)},l.allocUnsafe=function(e){return p(e)},l.allocUnsafeSlow=function(e){return p(e)},l.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==l.prototype},l.compare=function(e,t){if(J(e,n)&&(e=l.from(e,e.offset,e.byteLength)),J(t,n)&&(t=l.from(t,t.offset,t.byteLength)),!l.isBuffer(e)||!l.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,a=t.length;for(let o=0,n=Math.min(r,a);o<n;++o)if(e[o]!==t[o]){r=e[o],a=t[o];break}return r<a?-1:a<r?1:0},l.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},l.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return l.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const a=l.allocUnsafe(t);let o=0;for(r=0;r<e.length;++r){let t=e[r];if(J(t,n))o+t.length>a.length?(l.isBuffer(t)||(t=l.from(t)),t.copy(a,o)):n.prototype.set.call(a,t,o);else{if(!l.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(a,o)}o+=t.length}return a},l.byteLength=g,l.prototype._isBuffer=!0,l.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)v(this,t,t+1);return this},l.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)v(this,t,t+3),v(this,t+1,t+2);return this},l.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)v(this,t,t+7),v(this,t+1,t+6),v(this,t+2,t+5),v(this,t+3,t+4);return this},l.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?I(this,0,e):b.apply(this,arguments)},l.prototype.toLocaleString=l.prototype.toString,l.prototype.equals=function(e){if(!l.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===l.compare(this,e)},l.prototype.inspect=function(){let t="";const r=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},a&&(l.prototype[a]=l.prototype.inspect),l.prototype.compare=function(e,t,r,a,o){if(J(e,n)&&(e=l.from(e,e.offset,e.byteLength)),!l.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===a&&(a=0),void 0===o&&(o=this.length),t<0||r>e.length||a<0||o>this.length)throw new RangeError("out of range index");if(a>=o&&t>=r)return 0;if(a>=o)return-1;if(t>=r)return 1;if(this===e)return 0;let i=(o>>>=0)-(a>>>=0),s=(r>>>=0)-(t>>>=0);const c=Math.min(i,s),u=this.slice(a,o),d=e.slice(t,r);for(let n=0;n<c;++n)if(u[n]!==d[n]){i=u[n],s=d[n];break}return i<s?-1:s<i?1:0},l.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},l.prototype.indexOf=function(e,t,r){return y(this,e,t,r,!0)},l.prototype.lastIndexOf=function(e,t,r){return y(this,e,t,r,!1)},l.prototype.write=function(e,t,r,a){if(void 0===t)a="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)a=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===a&&(a="utf8")):(a=r,r=void 0)}const o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");let n=!1;for(;;)switch(a){case"hex":return k(this,e,t,r);case"utf8":case"utf-8":return x(this,e,t,r);case"ascii":case"latin1":case"binary":return j(this,e,t,r);case"base64":return z(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,t,r);default:if(n)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),n=!0}},l.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const A=4096;function O(e,t,r){let a="";r=Math.min(e.length,r);for(let o=t;o<r;++o)a+=String.fromCharCode(127&e[o]);return a}function T(e,t,r){let a="";r=Math.min(e.length,r);for(let o=t;o<r;++o)a+=String.fromCharCode(e[o]);return a}function B(e,t,r){const a=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>a)&&(r=a);let o="";for(let n=t;n<r;++n)o+=X[e[n]];return o}function U(e,t,r){const a=e.slice(t,r);let o="";for(let n=0;n<a.length-1;n+=2)o+=String.fromCharCode(a[n]+256*a[n+1]);return o}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function M(e,t,r,a,o,n){if(!l.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<n)throw new RangeError('"value" argument is out of bounds');if(r+a>e.length)throw new RangeError("Index out of range")}function $(e,t,r,a,o){D(t,a,o,e,r,7);let n=Number(t&BigInt(4294967295));e[r++]=n,n>>=8,e[r++]=n,n>>=8,e[r++]=n,n>>=8,e[r++]=n;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,i>>=8,e[r++]=i,r}function P(e,t,r,a,o){D(t,a,o,e,r,7);let n=Number(t&BigInt(4294967295));e[r+7]=n,n>>=8,e[r+6]=n,n>>=8,e[r+5]=n,n>>=8,e[r+4]=n;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=i,i>>=8,e[r+2]=i,i>>=8,e[r+1]=i,i>>=8,e[r]=i,r+8}function R(e,t,r,a,o,n){if(r+a>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function _(e,t,a,o,n){return t=+t,a>>>=0,n||R(e,0,a,4),r.write(e,t,a,o,23,4),a+4}function V(e,t,a,o,n){return t=+t,a>>>=0,n||R(e,0,a,8),r.write(e,t,a,o,52,8),a+8}l.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const a=this.subarray(e,t);return Object.setPrototypeOf(a,l.prototype),a},l.prototype.readUintLE=l.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=this[e],o=1,n=0;for(;++n<t&&(o*=256);)a+=this[e+n]*o;return a},l.prototype.readUintBE=l.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=this[e+--t],o=1;for(;t>0&&(o*=256);)a+=this[e+--t]*o;return a},l.prototype.readUint8=l.prototype.readUInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),this[e]},l.prototype.readUint16LE=l.prototype.readUInt16LE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]|this[e+1]<<8},l.prototype.readUint16BE=l.prototype.readUInt16BE=function(e,t){return e>>>=0,t||C(e,2,this.length),this[e]<<8|this[e+1]},l.prototype.readUint32LE=l.prototype.readUInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},l.prototype.readUint32BE=l.prototype.readUInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},l.prototype.readBigUInt64LE=Q(function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const a=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,o=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(a)+(BigInt(o)<<BigInt(32))}),l.prototype.readBigUInt64BE=Q(function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const a=t*2**24+65536*this[++e]+256*this[++e]+this[++e],o=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(a)<<BigInt(32))+BigInt(o)}),l.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=this[e],o=1,n=0;for(;++n<t&&(o*=256);)a+=this[e+n]*o;return o*=128,a>=o&&(a-=Math.pow(2,8*t)),a},l.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||C(e,t,this.length);let a=t,o=1,n=this[e+--a];for(;a>0&&(o*=256);)n+=this[e+--a]*o;return o*=128,n>=o&&(n-=Math.pow(2,8*t)),n},l.prototype.readInt8=function(e,t){return e>>>=0,t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},l.prototype.readInt16LE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt16BE=function(e,t){e>>>=0,t||C(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},l.prototype.readInt32LE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},l.prototype.readInt32BE=function(e,t){return e>>>=0,t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},l.prototype.readBigInt64LE=Q(function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const a=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(a)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)}),l.prototype.readBigInt64BE=Q(function(e){H(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||F(e,this.length-8);const a=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(a)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)}),l.prototype.readFloatLE=function(e,t){return e>>>=0,t||C(e,4,this.length),r.read(this,e,!0,23,4)},l.prototype.readFloatBE=function(e,t){return e>>>=0,t||C(e,4,this.length),r.read(this,e,!1,23,4)},l.prototype.readDoubleLE=function(e,t){return e>>>=0,t||C(e,8,this.length),r.read(this,e,!0,52,8)},l.prototype.readDoubleBE=function(e,t){return e>>>=0,t||C(e,8,this.length),r.read(this,e,!1,52,8)},l.prototype.writeUintLE=l.prototype.writeUIntLE=function(e,t,r,a){if(e=+e,t>>>=0,r>>>=0,!a){M(this,e,t,r,Math.pow(2,8*r)-1,0)}let o=1,n=0;for(this[t]=255&e;++n<r&&(o*=256);)this[t+n]=e/o&255;return t+r},l.prototype.writeUintBE=l.prototype.writeUIntBE=function(e,t,r,a){if(e=+e,t>>>=0,r>>>=0,!a){M(this,e,t,r,Math.pow(2,8*r)-1,0)}let o=r-1,n=1;for(this[t+o]=255&e;--o>=0&&(n*=256);)this[t+o]=e/n&255;return t+r},l.prototype.writeUint8=l.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,1,255,0),this[t]=255&e,t+1},l.prototype.writeUint16LE=l.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeUint16BE=l.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeUint32LE=l.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},l.prototype.writeUint32BE=l.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigUInt64LE=Q(function(e,t=0){return $(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeBigUInt64BE=Q(function(e,t=0){return P(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))}),l.prototype.writeIntLE=function(e,t,r,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*r-1);M(this,e,t,r,a-1,-a)}let o=0,n=1,i=0;for(this[t]=255&e;++o<r&&(n*=256);)e<0&&0===i&&0!==this[t+o-1]&&(i=1),this[t+o]=(e/n|0)-i&255;return t+r},l.prototype.writeIntBE=function(e,t,r,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*r-1);M(this,e,t,r,a-1,-a)}let o=r-1,n=1,i=0;for(this[t+o]=255&e;--o>=0&&(n*=256);)e<0&&0===i&&0!==this[t+o+1]&&(i=1),this[t+o]=(e/n|0)-i&255;return t+r},l.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},l.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},l.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},l.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},l.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||M(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},l.prototype.writeBigInt64LE=Q(function(e,t=0){return $(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeBigInt64BE=Q(function(e,t=0){return P(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),l.prototype.writeFloatLE=function(e,t,r){return _(this,e,t,!0,r)},l.prototype.writeFloatBE=function(e,t,r){return _(this,e,t,!1,r)},l.prototype.writeDoubleLE=function(e,t,r){return V(this,e,t,!0,r)},l.prototype.writeDoubleBE=function(e,t,r){return V(this,e,t,!1,r)},l.prototype.copy=function(e,t,r,a){if(!l.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<r&&(a=r),a===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-t<a-r&&(a=e.length-t+r);const o=a-r;return this===e&&"function"==typeof n.prototype.copyWithin?this.copyWithin(t,r,a):n.prototype.set.call(e,this.subarray(r,a),t),o},l.prototype.fill=function(e,t,r,a){if("string"==typeof e){if("string"==typeof t?(a=t,t=0,r=this.length):"string"==typeof r&&(a=r,r=this.length),void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!l.isEncoding(a))throw new TypeError("Unknown encoding: "+a);if(1===e.length){const t=e.charCodeAt(0);("utf8"===a&&t<128||"latin1"===a)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let o;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(o=t;o<r;++o)this[o]=e;else{const n=l.isBuffer(e)?e:l.from(e,a),i=n.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(o=0;o<r-t;++o)this[o+t]=n[o%i]}return this};const N={};function q(e,t,r){N[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function L(e){let t="",r=e.length;const a="-"===e[0]?1:0;for(;r>=a+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function D(e,t,r,a,o,n){if(e>r||e<t){const r="bigint"==typeof t?"n":"";let a;throw a=0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(n+1)}${r}`:`>= -(2${r} ** ${8*(n+1)-1}${r}) and < 2 ** ${8*(n+1)-1}${r}`,new N.ERR_OUT_OF_RANGE("value",a,e)}!function(e,t,r){H(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||F(t,e.length-(r+1))}(a,o,n)}function H(e,t){if("number"!=typeof e)throw new N.ERR_INVALID_ARG_TYPE(t,"number",e)}function F(e,t,r){if(Math.floor(e)!==e)throw H(e,r),new N.ERR_OUT_OF_RANGE("offset","an integer",e);if(t<0)throw new N.ERR_BUFFER_OUT_OF_BOUNDS;throw new N.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${t}`,e)}q("ERR_BUFFER_OUT_OF_BOUNDS",function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),q("ERR_INVALID_ARG_TYPE",function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`},TypeError),q("ERR_OUT_OF_RANGE",function(e,t,r){let a=`The value of "${e}" is out of range.`,o=r;return Number.isInteger(r)&&Math.abs(r)>2**32?o=L(String(r)):"bigint"==typeof r&&(o=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(o=L(o)),o+="n"),a+=` It must be ${t}. Received ${o}`,a},RangeError);const K=/[^+/0-9A-Za-z-_]/g;function W(e,t){let r;t=t||1/0;const a=e.length;let o=null;const n=[];for(let i=0;i<a;++i){if(r=e.charCodeAt(i),r>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&n.push(239,191,189);continue}if(i+1===a){(t-=3)>-1&&n.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&n.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&n.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;n.push(r)}else if(r<2048){if((t-=2)<0)break;n.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;n.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;n.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return n}function G(e){return t.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(K,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function Z(e,t,r,a){let o;for(o=0;o<a&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}function J(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!=e}const X=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const a=16*r;for(let o=0;o<16;++o)t[a+o]=e[r]+e[o]}return t}();function Q(e){return"undefined"==typeof BigInt?ee:e}function ee(){throw new Error("BigInt not supported")}}(Dp);const eh=Dp.Buffer;var th={},rh={};const ah=["abdikace","abeceda","adresa","agrese","akce","aktovka","alej","alkohol","amputace","ananas","andulka","anekdota","anketa","antika","anulovat","archa","arogance","asfalt","asistent","aspirace","astma","astronom","atlas","atletika","atol","autobus","azyl","babka","bachor","bacil","baculka","badatel","bageta","bagr","bahno","bakterie","balada","baletka","balkon","balonek","balvan","balza","bambus","bankomat","barbar","baret","barman","baroko","barva","baterka","batoh","bavlna","bazalka","bazilika","bazuka","bedna","beran","beseda","bestie","beton","bezinka","bezmoc","beztak","bicykl","bidlo","biftek","bikiny","bilance","biograf","biolog","bitva","bizon","blahobyt","blatouch","blecha","bledule","blesk","blikat","blizna","blokovat","bloudit","blud","bobek","bobr","bodlina","bodnout","bohatost","bojkot","bojovat","bokorys","bolest","borec","borovice","bota","boubel","bouchat","bouda","boule","bourat","boxer","bradavka","brambora","branka","bratr","brepta","briketa","brko","brloh","bronz","broskev","brunetka","brusinka","brzda","brzy","bublina","bubnovat","buchta","buditel","budka","budova","bufet","bujarost","bukvice","buldok","bulva","bunda","bunkr","burza","butik","buvol","buzola","bydlet","bylina","bytovka","bzukot","capart","carevna","cedr","cedule","cejch","cejn","cela","celer","celkem","celnice","cenina","cennost","cenovka","centrum","cenzor","cestopis","cetka","chalupa","chapadlo","charita","chata","chechtat","chemie","chichot","chirurg","chlad","chleba","chlubit","chmel","chmura","chobot","chochol","chodba","cholera","chomout","chopit","choroba","chov","chrapot","chrlit","chrt","chrup","chtivost","chudina","chutnat","chvat","chvilka","chvost","chyba","chystat","chytit","cibule","cigareta","cihelna","cihla","cinkot","cirkus","cisterna","citace","citrus","cizinec","cizost","clona","cokoliv","couvat","ctitel","ctnost","cudnost","cuketa","cukr","cupot","cvaknout","cval","cvik","cvrkot","cyklista","daleko","dareba","datel","datum","dcera","debata","dechovka","decibel","deficit","deflace","dekl","dekret","demokrat","deprese","derby","deska","detektiv","dikobraz","diktovat","dioda","diplom","disk","displej","divadlo","divoch","dlaha","dlouho","dluhopis","dnes","dobro","dobytek","docent","dochutit","dodnes","dohled","dohoda","dohra","dojem","dojnice","doklad","dokola","doktor","dokument","dolar","doleva","dolina","doma","dominant","domluvit","domov","donutit","dopad","dopis","doplnit","doposud","doprovod","dopustit","dorazit","dorost","dort","dosah","doslov","dostatek","dosud","dosyta","dotaz","dotek","dotknout","doufat","doutnat","dovozce","dozadu","doznat","dozorce","drahota","drak","dramatik","dravec","draze","drdol","drobnost","drogerie","drozd","drsnost","drtit","drzost","duben","duchovno","dudek","duha","duhovka","dusit","dusno","dutost","dvojice","dvorec","dynamit","ekolog","ekonomie","elektron","elipsa","email","emise","emoce","empatie","epizoda","epocha","epopej","epos","esej","esence","eskorta","eskymo","etiketa","euforie","evoluce","exekuce","exkurze","expedice","exploze","export","extrakt","facka","fajfka","fakulta","fanatik","fantazie","farmacie","favorit","fazole","federace","fejeton","fenka","fialka","figurant","filozof","filtr","finance","finta","fixace","fjord","flanel","flirt","flotila","fond","fosfor","fotbal","fotka","foton","frakce","freska","fronta","fukar","funkce","fyzika","galeje","garant","genetika","geolog","gilotina","glazura","glejt","golem","golfista","gotika","graf","gramofon","granule","grep","gril","grog","groteska","guma","hadice","hadr","hala","halenka","hanba","hanopis","harfa","harpuna","havran","hebkost","hejkal","hejno","hejtman","hektar","helma","hematom","herec","herna","heslo","hezky","historik","hladovka","hlasivky","hlava","hledat","hlen","hlodavec","hloh","hloupost","hltat","hlubina","hluchota","hmat","hmota","hmyz","hnis","hnojivo","hnout","hoblina","hoboj","hoch","hodiny","hodlat","hodnota","hodovat","hojnost","hokej","holinka","holka","holub","homole","honitba","honorace","horal","horda","horizont","horko","horlivec","hormon","hornina","horoskop","horstvo","hospoda","hostina","hotovost","houba","houf","houpat","houska","hovor","hradba","hranice","hravost","hrazda","hrbolek","hrdina","hrdlo","hrdost","hrnek","hrobka","hromada","hrot","hrouda","hrozen","hrstka","hrubost","hryzat","hubenost","hubnout","hudba","hukot","humr","husita","hustota","hvozd","hybnost","hydrant","hygiena","hymna","hysterik","idylka","ihned","ikona","iluze","imunita","infekce","inflace","inkaso","inovace","inspekce","internet","invalida","investor","inzerce","ironie","jablko","jachta","jahoda","jakmile","jakost","jalovec","jantar","jarmark","jaro","jasan","jasno","jatka","javor","jazyk","jedinec","jedle","jednatel","jehlan","jekot","jelen","jelito","jemnost","jenom","jepice","jeseter","jevit","jezdec","jezero","jinak","jindy","jinoch","jiskra","jistota","jitrnice","jizva","jmenovat","jogurt","jurta","kabaret","kabel","kabinet","kachna","kadet","kadidlo","kahan","kajak","kajuta","kakao","kaktus","kalamita","kalhoty","kalibr","kalnost","kamera","kamkoliv","kamna","kanibal","kanoe","kantor","kapalina","kapela","kapitola","kapka","kaple","kapota","kapr","kapusta","kapybara","karamel","karotka","karton","kasa","katalog","katedra","kauce","kauza","kavalec","kazajka","kazeta","kazivost","kdekoliv","kdesi","kedluben","kemp","keramika","kino","klacek","kladivo","klam","klapot","klasika","klaun","klec","klenba","klepat","klesnout","klid","klima","klisna","klobouk","klokan","klopa","kloub","klubovna","klusat","kluzkost","kmen","kmitat","kmotr","kniha","knot","koalice","koberec","kobka","kobliha","kobyla","kocour","kohout","kojenec","kokos","koktejl","kolaps","koleda","kolize","kolo","komando","kometa","komik","komnata","komora","kompas","komunita","konat","koncept","kondice","konec","konfese","kongres","konina","konkurs","kontakt","konzerva","kopanec","kopie","kopnout","koprovka","korbel","korektor","kormidlo","koroptev","korpus","koruna","koryto","korzet","kosatec","kostka","kotel","kotleta","kotoul","koukat","koupelna","kousek","kouzlo","kovboj","koza","kozoroh","krabice","krach","krajina","kralovat","krasopis","kravata","kredit","krejcar","kresba","kreveta","kriket","kritik","krize","krkavec","krmelec","krmivo","krocan","krok","kronika","kropit","kroupa","krovka","krtek","kruhadlo","krupice","krutost","krvinka","krychle","krypta","krystal","kryt","kudlanka","kufr","kujnost","kukla","kulajda","kulich","kulka","kulomet","kultura","kuna","kupodivu","kurt","kurzor","kutil","kvalita","kvasinka","kvestor","kynolog","kyselina","kytara","kytice","kytka","kytovec","kyvadlo","labrador","lachtan","ladnost","laik","lakomec","lamela","lampa","lanovka","lasice","laso","lastura","latinka","lavina","lebka","leckdy","leden","lednice","ledovka","ledvina","legenda","legie","legrace","lehce","lehkost","lehnout","lektvar","lenochod","lentilka","lepenka","lepidlo","letadlo","letec","letmo","letokruh","levhart","levitace","levobok","libra","lichotka","lidojed","lidskost","lihovina","lijavec","lilek","limetka","linie","linka","linoleum","listopad","litina","litovat","lobista","lodivod","logika","logoped","lokalita","loket","lomcovat","lopata","lopuch","lord","losos","lotr","loudal","louh","louka","louskat","lovec","lstivost","lucerna","lucifer","lump","lusk","lustrace","lvice","lyra","lyrika","lysina","madam","madlo","magistr","mahagon","majetek","majitel","majorita","makak","makovice","makrela","malba","malina","malovat","malvice","maminka","mandle","manko","marnost","masakr","maskot","masopust","matice","matrika","maturita","mazanec","mazivo","mazlit","mazurka","mdloba","mechanik","meditace","medovina","melasa","meloun","mentolka","metla","metoda","metr","mezera","migrace","mihnout","mihule","mikina","mikrofon","milenec","milimetr","milost","mimika","mincovna","minibar","minomet","minulost","miska","mistr","mixovat","mladost","mlha","mlhovina","mlok","mlsat","mluvit","mnich","mnohem","mobil","mocnost","modelka","modlitba","mohyla","mokro","molekula","momentka","monarcha","monokl","monstrum","montovat","monzun","mosaz","moskyt","most","motivace","motorka","motyka","moucha","moudrost","mozaika","mozek","mozol","mramor","mravenec","mrkev","mrtvola","mrzet","mrzutost","mstitel","mudrc","muflon","mulat","mumie","munice","muset","mutace","muzeum","muzikant","myslivec","mzda","nabourat","nachytat","nadace","nadbytek","nadhoz","nadobro","nadpis","nahlas","nahnat","nahodile","nahradit","naivita","najednou","najisto","najmout","naklonit","nakonec","nakrmit","nalevo","namazat","namluvit","nanometr","naoko","naopak","naostro","napadat","napevno","naplnit","napnout","naposled","naprosto","narodit","naruby","narychlo","nasadit","nasekat","naslepo","nastat","natolik","navenek","navrch","navzdory","nazvat","nebe","nechat","necky","nedaleko","nedbat","neduh","negace","nehet","nehoda","nejen","nejprve","neklid","nelibost","nemilost","nemoc","neochota","neonka","nepokoj","nerost","nerv","nesmysl","nesoulad","netvor","neuron","nevina","nezvykle","nicota","nijak","nikam","nikdy","nikl","nikterak","nitro","nocleh","nohavice","nominace","nora","norek","nositel","nosnost","nouze","noviny","novota","nozdra","nuda","nudle","nuget","nutit","nutnost","nutrie","nymfa","obal","obarvit","obava","obdiv","obec","obehnat","obejmout","obezita","obhajoba","obilnice","objasnit","objekt","obklopit","oblast","oblek","obliba","obloha","obluda","obnos","obohatit","obojek","obout","obrazec","obrna","obruba","obrys","obsah","obsluha","obstarat","obuv","obvaz","obvinit","obvod","obvykle","obyvatel","obzor","ocas","ocel","ocenit","ochladit","ochota","ochrana","ocitnout","odboj","odbyt","odchod","odcizit","odebrat","odeslat","odevzdat","odezva","odhadce","odhodit","odjet","odjinud","odkaz","odkoupit","odliv","odluka","odmlka","odolnost","odpad","odpis","odplout","odpor","odpustit","odpykat","odrazka","odsoudit","odstup","odsun","odtok","odtud","odvaha","odveta","odvolat","odvracet","odznak","ofina","ofsajd","ohlas","ohnisko","ohrada","ohrozit","ohryzek","okap","okenice","oklika","okno","okouzlit","okovy","okrasa","okres","okrsek","okruh","okupant","okurka","okusit","olejnina","olizovat","omak","omeleta","omezit","omladina","omlouvat","omluva","omyl","onehdy","opakovat","opasek","operace","opice","opilost","opisovat","opora","opozice","opravdu","oproti","orbital","orchestr","orgie","orlice","orloj","ortel","osada","oschnout","osika","osivo","oslava","oslepit","oslnit","oslovit","osnova","osoba","osolit","ospalec","osten","ostraha","ostuda","ostych","osvojit","oteplit","otisk","otop","otrhat","otrlost","otrok","otruby","otvor","ovanout","ovar","oves","ovlivnit","ovoce","oxid","ozdoba","pachatel","pacient","padouch","pahorek","pakt","palanda","palec","palivo","paluba","pamflet","pamlsek","panenka","panika","panna","panovat","panstvo","pantofle","paprika","parketa","parodie","parta","paruka","paryba","paseka","pasivita","pastelka","patent","patrona","pavouk","pazneht","pazourek","pecka","pedagog","pejsek","peklo","peloton","penalta","pendrek","penze","periskop","pero","pestrost","petarda","petice","petrolej","pevnina","pexeso","pianista","piha","pijavice","pikle","piknik","pilina","pilnost","pilulka","pinzeta","pipeta","pisatel","pistole","pitevna","pivnice","pivovar","placenta","plakat","plamen","planeta","plastika","platit","plavidlo","plaz","plech","plemeno","plenta","ples","pletivo","plevel","plivat","plnit","plno","plocha","plodina","plomba","plout","pluk","plyn","pobavit","pobyt","pochod","pocit","poctivec","podat","podcenit","podepsat","podhled","podivit","podklad","podmanit","podnik","podoba","podpora","podraz","podstata","podvod","podzim","poezie","pohanka","pohnutka","pohovor","pohroma","pohyb","pointa","pojistka","pojmout","pokazit","pokles","pokoj","pokrok","pokuta","pokyn","poledne","polibek","polknout","poloha","polynom","pomalu","pominout","pomlka","pomoc","pomsta","pomyslet","ponechat","ponorka","ponurost","popadat","popel","popisek","poplach","poprosit","popsat","popud","poradce","porce","porod","porucha","poryv","posadit","posed","posila","poskok","poslanec","posoudit","pospolu","postava","posudek","posyp","potah","potkan","potlesk","potomek","potrava","potupa","potvora","poukaz","pouto","pouzdro","povaha","povidla","povlak","povoz","povrch","povstat","povyk","povzdech","pozdrav","pozemek","poznatek","pozor","pozvat","pracovat","prahory","praktika","prales","praotec","praporek","prase","pravda","princip","prkno","probudit","procento","prodej","profese","prohra","projekt","prolomit","promile","pronikat","propad","prorok","prosba","proton","proutek","provaz","prskavka","prsten","prudkost","prut","prvek","prvohory","psanec","psovod","pstruh","ptactvo","puberta","puch","pudl","pukavec","puklina","pukrle","pult","pumpa","punc","pupen","pusa","pusinka","pustina","putovat","putyka","pyramida","pysk","pytel","racek","rachot","radiace","radnice","radon","raft","ragby","raketa","rakovina","rameno","rampouch","rande","rarach","rarita","rasovna","rastr","ratolest","razance","razidlo","reagovat","reakce","recept","redaktor","referent","reflex","rejnok","reklama","rekord","rekrut","rektor","reputace","revize","revma","revolver","rezerva","riskovat","riziko","robotika","rodokmen","rohovka","rokle","rokoko","romaneto","ropovod","ropucha","rorejs","rosol","rostlina","rotmistr","rotoped","rotunda","roubenka","roucho","roup","roura","rovina","rovnice","rozbor","rozchod","rozdat","rozeznat","rozhodce","rozinka","rozjezd","rozkaz","rozloha","rozmar","rozpad","rozruch","rozsah","roztok","rozum","rozvod","rubrika","ruchadlo","rukavice","rukopis","ryba","rybolov","rychlost","rydlo","rypadlo","rytina","ryzost","sadista","sahat","sako","samec","samizdat","samota","sanitka","sardinka","sasanka","satelit","sazba","sazenice","sbor","schovat","sebranka","secese","sedadlo","sediment","sedlo","sehnat","sejmout","sekera","sekta","sekunda","sekvoje","semeno","seno","servis","sesadit","seshora","seskok","seslat","sestra","sesuv","sesypat","setba","setina","setkat","setnout","setrvat","sever","seznam","shoda","shrnout","sifon","silnice","sirka","sirotek","sirup","situace","skafandr","skalisko","skanzen","skaut","skeptik","skica","skladba","sklenice","sklo","skluz","skoba","skokan","skoro","skripta","skrz","skupina","skvost","skvrna","slabika","sladidlo","slanina","slast","slavnost","sledovat","slepec","sleva","slezina","slib","slina","sliznice","slon","sloupek","slovo","sluch","sluha","slunce","slupka","slza","smaragd","smetana","smilstvo","smlouva","smog","smrad","smrk","smrtka","smutek","smysl","snad","snaha","snob","sobota","socha","sodovka","sokol","sopka","sotva","souboj","soucit","soudce","souhlas","soulad","soumrak","souprava","soused","soutok","souviset","spalovna","spasitel","spis","splav","spodek","spojenec","spolu","sponzor","spornost","spousta","sprcha","spustit","sranda","sraz","srdce","srna","srnec","srovnat","srpen","srst","srub","stanice","starosta","statika","stavba","stehno","stezka","stodola","stolek","stopa","storno","stoupat","strach","stres","strhnout","strom","struna","studna","stupnice","stvol","styk","subjekt","subtropy","suchar","sudost","sukno","sundat","sunout","surikata","surovina","svah","svalstvo","svetr","svatba","svazek","svisle","svitek","svoboda","svodidlo","svorka","svrab","sykavka","sykot","synek","synovec","sypat","sypkost","syrovost","sysel","sytost","tabletka","tabule","tahoun","tajemno","tajfun","tajga","tajit","tajnost","taktika","tamhle","tampon","tancovat","tanec","tanker","tapeta","tavenina","tazatel","technika","tehdy","tekutina","telefon","temnota","tendence","tenista","tenor","teplota","tepna","teprve","terapie","termoska","textil","ticho","tiskopis","titulek","tkadlec","tkanina","tlapka","tleskat","tlukot","tlupa","tmel","toaleta","topinka","topol","torzo","touha","toulec","tradice","traktor","tramp","trasa","traverza","trefit","trest","trezor","trhavina","trhlina","trochu","trojice","troska","trouba","trpce","trpitel","trpkost","trubec","truchlit","truhlice","trus","trvat","tudy","tuhnout","tuhost","tundra","turista","turnaj","tuzemsko","tvaroh","tvorba","tvrdost","tvrz","tygr","tykev","ubohost","uboze","ubrat","ubrousek","ubrus","ubytovna","ucho","uctivost","udivit","uhradit","ujednat","ujistit","ujmout","ukazatel","uklidnit","uklonit","ukotvit","ukrojit","ulice","ulita","ulovit","umyvadlo","unavit","uniforma","uniknout","upadnout","uplatnit","uplynout","upoutat","upravit","uran","urazit","usednout","usilovat","usmrtit","usnadnit","usnout","usoudit","ustlat","ustrnout","utahovat","utkat","utlumit","utonout","utopenec","utrousit","uvalit","uvolnit","uvozovka","uzdravit","uzel","uzenina","uzlina","uznat","vagon","valcha","valoun","vana","vandal","vanilka","varan","varhany","varovat","vcelku","vchod","vdova","vedro","vegetace","vejce","velbloud","veletrh","velitel","velmoc","velryba","venkov","veranda","verze","veselka","veskrze","vesnice","vespodu","vesta","veterina","veverka","vibrace","vichr","videohra","vidina","vidle","vila","vinice","viset","vitalita","vize","vizitka","vjezd","vklad","vkus","vlajka","vlak","vlasec","vlevo","vlhkost","vliv","vlnovka","vloupat","vnucovat","vnuk","voda","vodivost","vodoznak","vodstvo","vojensky","vojna","vojsko","volant","volba","volit","volno","voskovka","vozidlo","vozovna","vpravo","vrabec","vracet","vrah","vrata","vrba","vrcholek","vrhat","vrstva","vrtule","vsadit","vstoupit","vstup","vtip","vybavit","vybrat","vychovat","vydat","vydra","vyfotit","vyhledat","vyhnout","vyhodit","vyhradit","vyhubit","vyjasnit","vyjet","vyjmout","vyklopit","vykonat","vylekat","vymazat","vymezit","vymizet","vymyslet","vynechat","vynikat","vynutit","vypadat","vyplatit","vypravit","vypustit","vyrazit","vyrovnat","vyrvat","vyslovit","vysoko","vystavit","vysunout","vysypat","vytasit","vytesat","vytratit","vyvinout","vyvolat","vyvrhel","vyzdobit","vyznat","vzadu","vzbudit","vzchopit","vzdor","vzduch","vzdychat","vzestup","vzhledem","vzkaz","vzlykat","vznik","vzorek","vzpoura","vztah","vztek","xylofon","zabrat","zabydlet","zachovat","zadarmo","zadusit","zafoukat","zahltit","zahodit","zahrada","zahynout","zajatec","zajet","zajistit","zaklepat","zakoupit","zalepit","zamezit","zamotat","zamyslet","zanechat","zanikat","zaplatit","zapojit","zapsat","zarazit","zastavit","zasunout","zatajit","zatemnit","zatknout","zaujmout","zavalit","zavelet","zavinit","zavolat","zavrtat","zazvonit","zbavit","zbrusu","zbudovat","zbytek","zdaleka","zdarma","zdatnost","zdivo","zdobit","zdroj","zdvih","zdymadlo","zelenina","zeman","zemina","zeptat","zezadu","zezdola","zhatit","zhltnout","zhluboka","zhotovit","zhruba","zima","zimnice","zjemnit","zklamat","zkoumat","zkratka","zkumavka","zlato","zlehka","zloba","zlom","zlost","zlozvyk","zmapovat","zmar","zmatek","zmije","zmizet","zmocnit","zmodrat","zmrzlina","zmutovat","znak","znalost","znamenat","znovu","zobrazit","zotavit","zoubek","zoufale","zplodit","zpomalit","zprava","zprostit","zprudka","zprvu","zrada","zranit","zrcadlo","zrnitost","zrno","zrovna","zrychlit","zrzavost","zticha","ztratit","zubovina","zubr","zvednout","zvenku","zvesela","zvon","zvrat","zvukovod","zvyk"],oh=["的","一","是","在","不","了","有","和","人","这","中","大","为","上","个","国","我","以","要","他","时","来","用","们","生","到","作","地","于","出","就","分","对","成","会","可","主","发","年","动","同","工","也","能","下","过","子","说","产","种","面","而","方","后","多","定","行","学","法","所","民","得","经","十","三","之","进","着","等","部","度","家","电","力","里","如","水","化","高","自","二","理","起","小","物","现","实","加","量","都","两","体","制","机","当","使","点","从","业","本","去","把","性","好","应","开","它","合","还","因","由","其","些","然","前","外","天","政","四","日","那","社","义","事","平","形","相","全","表","间","样","与","关","各","重","新","线","内","数","正","心","反","你","明","看","原","又","么","利","比","或","但","质","气","第","向","道","命","此","变","条","只","没","结","解","问","意","建","月","公","无","系","军","很","情","者","最","立","代","想","已","通","并","提","直","题","党","程","展","五","果","料","象","员","革","位","入","常","文","总","次","品","式","活","设","及","管","特","件","长","求","老","头","基","资","边","流","路","级","少","图","山","统","接","知","较","将","组","见","计","别","她","手","角","期","根","论","运","农","指","几","九","区","强","放","决","西","被","干","做","必","战","先","回","则","任","取","据","处","队","南","给","色","光","门","即","保","治","北","造","百","规","热","领","七","海","口","东","导","器","压","志","世","金","增","争","济","阶","油","思","术","极","交","受","联","什","认","六","共","权","收","证","改","清","美","再","采","转","更","单","风","切","打","白","教","速","花","带","安","场","身","车","例","真","务","具","万","每","目","至","达","走","积","示","议","声","报","斗","完","类","八","离","华","名","确","才","科","张","信","马","节","话","米","整","空","元","况","今","集","温","传","土","许","步","群","广","石","记","需","段","研","界","拉","林","律","叫","且","究","观","越","织","装","影","算","低","持","音","众","书","布","复","容","儿","须","际","商","非","验","连","断","深","难","近","矿","千","周","委","素","技","备","半","办","青","省","列","习","响","约","支","般","史","感","劳","便","团","往","酸","历","市","克","何","除","消","构","府","称","太","准","精","值","号","率","族","维","划","选","标","写","存","候","毛","亲","快","效","斯","院","查","江","型","眼","王","按","格","养","易","置","派","层","片","始","却","专","状","育","厂","京","识","适","属","圆","包","火","住","调","满","县","局","照","参","红","细","引","听","该","铁","价","严","首","底","液","官","德","随","病","苏","失","尔","死","讲","配","女","黄","推","显","谈","罪","神","艺","呢","席","含","企","望","密","批","营","项","防","举","球","英","氧","势","告","李","台","落","木","帮","轮","破","亚","师","围","注","远","字","材","排","供","河","态","封","另","施","减","树","溶","怎","止","案","言","士","均","武","固","叶","鱼","波","视","仅","费","紧","爱","左","章","早","朝","害","续","轻","服","试","食","充","兵","源","判","护","司","足","某","练","差","致","板","田","降","黑","犯","负","击","范","继","兴","似","余","坚","曲","输","修","故","城","夫","够","送","笔","船","占","右","财","吃","富","春","职","觉","汉","画","功","巴","跟","虽","杂","飞","检","吸","助","升","阳","互","初","创","抗","考","投","坏","策","古","径","换","未","跑","留","钢","曾","端","责","站","简","述","钱","副","尽","帝","射","草","冲","承","独","令","限","阿","宣","环","双","请","超","微","让","控","州","良","轴","找","否","纪","益","依","优","顶","础","载","倒","房","突","坐","粉","敌","略","客","袁","冷","胜","绝","析","块","剂","测","丝","协","诉","念","陈","仍","罗","盐","友","洋","错","苦","夜","刑","移","频","逐","靠","混","母","短","皮","终","聚","汽","村","云","哪","既","距","卫","停","烈","央","察","烧","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","游","久","菜","味","旧","模","湖","货","损","预","阻","毫","普","稳","乙","妈","植","息","扩","银","语","挥","酒","守","拿","序","纸","医","缺","雨","吗","针","刘","啊","急","唱","误","训","愿","审","附","获","茶","鲜","粮","斤","孩","脱","硫","肥","善","龙","演","父","渐","血","欢","械","掌","歌","沙","刚","攻","谓","盾","讨","晚","粒","乱","燃","矛","乎","杀","药","宁","鲁","贵","钟","煤","读","班","伯","香","介","迫","句","丰","培","握","兰","担","弦","蛋","沉","假","穿","执","答","乐","谁","顺","烟","缩","征","脸","喜","松","脚","困","异","免","背","星","福","买","染","井","概","慢","怕","磁","倍","祖","皇","促","静","补","评","翻","肉","践","尼","衣","宽","扬","棉","希","伤","操","垂","秋","宜","氢","套","督","振","架","亮","末","宪","庆","编","牛","触","映","雷","销","诗","座","居","抓","裂","胞","呼","娘","景","威","绿","晶","厚","盟","衡","鸡","孙","延","危","胶","屋","乡","临","陆","顾","掉","呀","灯","岁","措","束","耐","剧","玉","赵","跳","哥","季","课","凯","胡","额","款","绍","卷","齐","伟","蒸","殖","永","宗","苗","川","炉","岩","弱","零","杨","奏","沿","露","杆","探","滑","镇","饭","浓","航","怀","赶","库","夺","伊","灵","税","途","灭","赛","归","召","鼓","播","盘","裁","险","康","唯","录","菌","纯","借","糖","盖","横","符","私","努","堂","域","枪","润","幅","哈","竟","熟","虫","泽","脑","壤","碳","欧","遍","侧","寨","敢","彻","虑","斜","薄","庭","纳","弹","饲","伸","折","麦","湿","暗","荷","瓦","塞","床","筑","恶","户","访","塔","奇","透","梁","刀","旋","迹","卡","氯","遇","份","毒","泥","退","洗","摆","灰","彩","卖","耗","夏","择","忙","铜","献","硬","予","繁","圈","雪","函","亦","抽","篇","阵","阴","丁","尺","追","堆","雄","迎","泛","爸","楼","避","谋","吨","野","猪","旗","累","偏","典","馆","索","秦","脂","潮","爷","豆","忽","托","惊","塑","遗","愈","朱","替","纤","粗","倾","尚","痛","楚","谢","奋","购","磨","君","池","旁","碎","骨","监","捕","弟","暴","割","贯","殊","释","词","亡","壁","顿","宝","午","尘","闻","揭","炮","残","冬","桥","妇","警","综","招","吴","付","浮","遭","徐","您","摇","谷","赞","箱","隔","订","男","吹","园","纷","唐","败","宋","玻","巨","耕","坦","荣","闭","湾","键","凡","驻","锅","救","恩","剥","凝","碱","齿","截","炼","麻","纺","禁","废","盛","版","缓","净","睛","昌","婚","涉","筒","嘴","插","岸","朗","庄","街","藏","姑","贸","腐","奴","啦","惯","乘","伙","恢","匀","纱","扎","辩","耳","彪","臣","亿","璃","抵","脉","秀","萨","俄","网","舞","店","喷","纵","寸","汗","挂","洪","贺","闪","柬","爆","烯","津","稻","墙","软","勇","像","滚","厘","蒙","芳","肯","坡","柱","荡","腿","仪","旅","尾","轧","冰","贡","登","黎","削","钻","勒","逃","障","氨","郭","峰","币","港","伏","轨","亩","毕","擦","莫","刺","浪","秘","援","株","健","售","股","岛","甘","泡","睡","童","铸","汤","阀","休","汇","舍","牧","绕","炸","哲","磷","绩","朋","淡","尖","启","陷","柴","呈","徒","颜","泪","稍","忘","泵","蓝","拖","洞","授","镜","辛","壮","锋","贫","虚","弯","摩","泰","幼","廷","尊","窗","纲","弄","隶","疑","氏","宫","姐","震","瑞","怪","尤","琴","循","描","膜","违","夹","腰","缘","珠","穷","森","枝","竹","沟","催","绳","忆","邦","剩","幸","浆","栏","拥","牙","贮","礼","滤","钠","纹","罢","拍","咱","喊","袖","埃","勤","罚","焦","潜","伍","墨","欲","缝","姓","刊","饱","仿","奖","铝","鬼","丽","跨","默","挖","链","扫","喝","袋","炭","污","幕","诸","弧","励","梅","奶","洁","灾","舟","鉴","苯","讼","抱","毁","懂","寒","智","埔","寄","届","跃","渡","挑","丹","艰","贝","碰","拔","爹","戴","码","梦","芽","熔","赤","渔","哭","敬","颗","奔","铅","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","仓","魏","锐","晓","氮","兼","隐","碍","赫","拨","忠","肃","缸","牵","抢","博","巧","壳","兄","杜","讯","诚","碧","祥","柯","页","巡","矩","悲","灌","龄","伦","票","寻","桂","铺","圣","恐","恰","郑","趣","抬","荒","腾","贴","柔","滴","猛","阔","辆","妻","填","撤","储","签","闹","扰","紫","砂","递","戏","吊","陶","伐","喂","疗","瓶","婆","抚","臂","摸","忍","虾","蜡","邻","胸","巩","挤","偶","弃","槽","劲","乳","邓","吉","仁","烂","砖","租","乌","舰","伴","瓜","浅","丙","暂","燥","橡","柳","迷","暖","牌","秧","胆","详","簧","踏","瓷","谱","呆","宾","糊","洛","辉","愤","竞","隙","怒","粘","乃","绪","肩","籍","敏","涂","熙","皆","侦","悬","掘","享","纠","醒","狂","锁","淀","恨","牲","霸","爬","赏","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鸭","趋","凤","晨","畜","辈","秩","卵","署","梯","炎","滩","棋","驱","筛","峡","冒","啥","寿","译","浸","泉","帽","迟","硅","疆","贷","漏","稿","冠","嫩","胁","芯","牢","叛","蚀","奥","鸣","岭","羊","凭","串","塘","绘","酵","融","盆","锡","庙","筹","冻","辅","摄","袭","筋","拒","僚","旱","钾","鸟","漆","沈","眉","疏","添","棒","穗","硝","韩","逼","扭","侨","凉","挺","碗","栽","炒","杯","患","馏","劝","豪","辽","勃","鸿","旦","吏","拜","狗","埋","辊","掩","饮","搬","骂","辞","勾","扣","估","蒋","绒","雾","丈","朵","姆","拟","宇","辑","陕","雕","偿","蓄","崇","剪","倡","厅","咬","驶","薯","刷","斥","番","赋","奉","佛","浇","漫","曼","扇","钙","桃","扶","仔","返","俗","亏","腔","鞋","棱","覆","框","悄","叔","撞","骗","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","胀","谐","抛","霉","桑","岗","嘛","衰","盗","渗","脏","赖","涌","甜","曹","阅","肌","哩","厉","烃","纬","毅","昨","伪","症","煮","叹","钉","搭","茎","笼","酷","偷","弓","锥","恒","杰","坑","鼻","翼","纶","叙","狱","逮","罐","络","棚","抑","膨","蔬","寺","骤","穆","冶","枯","册","尸","凸","绅","坯","牺","焰","轰","欣","晋","瘦","御","锭","锦","丧","旬","锻","垄","搜","扑","邀","亭","酯","迈","舒","脆","酶","闲","忧","酚","顽","羽","涨","卸","仗","陪","辟","惩","杭","姚","肚","捉","飘","漂","昆","欺","吾","郎","烷","汁","呵","饰","萧","雅","邮","迁","燕","撒","姻","赴","宴","烦","债","帐","斑","铃","旨","醇","董","饼","雏","姿","拌","傅","腹","妥","揉","贤","拆","歪","葡","胺","丢","浩","徽","昂","垫","挡","览","贪","慰","缴","汪","慌","冯","诺","姜","谊","凶","劣","诬","耀","昏","躺","盈","骑","乔","溪","丛","卢","抹","闷","咨","刮","驾","缆","悟","摘","铒","掷","颇","幻","柄","惠","惨","佳","仇","腊","窝","涤","剑","瞧","堡","泼","葱","罩","霍","捞","胎","苍","滨","俩","捅","湘","砍","霞","邵","萄","疯","淮","遂","熊","粪","烘","宿","档","戈","驳","嫂","裕","徙","箭","捐","肠","撑","晒","辨","殿","莲","摊","搅","酱","屏","疫","哀","蔡","堵","沫","皱","畅","叠","阁","莱","敲","辖","钩","痕","坝","巷","饿","祸","丘","玄","溜","曰","逻","彭","尝","卿","妨","艇","吞","韦","怨","矮","歇"],nh=["的","一","是","在","不","了","有","和","人","這","中","大","為","上","個","國","我","以","要","他","時","來","用","們","生","到","作","地","於","出","就","分","對","成","會","可","主","發","年","動","同","工","也","能","下","過","子","說","產","種","面","而","方","後","多","定","行","學","法","所","民","得","經","十","三","之","進","著","等","部","度","家","電","力","裡","如","水","化","高","自","二","理","起","小","物","現","實","加","量","都","兩","體","制","機","當","使","點","從","業","本","去","把","性","好","應","開","它","合","還","因","由","其","些","然","前","外","天","政","四","日","那","社","義","事","平","形","相","全","表","間","樣","與","關","各","重","新","線","內","數","正","心","反","你","明","看","原","又","麼","利","比","或","但","質","氣","第","向","道","命","此","變","條","只","沒","結","解","問","意","建","月","公","無","系","軍","很","情","者","最","立","代","想","已","通","並","提","直","題","黨","程","展","五","果","料","象","員","革","位","入","常","文","總","次","品","式","活","設","及","管","特","件","長","求","老","頭","基","資","邊","流","路","級","少","圖","山","統","接","知","較","將","組","見","計","別","她","手","角","期","根","論","運","農","指","幾","九","區","強","放","決","西","被","幹","做","必","戰","先","回","則","任","取","據","處","隊","南","給","色","光","門","即","保","治","北","造","百","規","熱","領","七","海","口","東","導","器","壓","志","世","金","增","爭","濟","階","油","思","術","極","交","受","聯","什","認","六","共","權","收","證","改","清","美","再","採","轉","更","單","風","切","打","白","教","速","花","帶","安","場","身","車","例","真","務","具","萬","每","目","至","達","走","積","示","議","聲","報","鬥","完","類","八","離","華","名","確","才","科","張","信","馬","節","話","米","整","空","元","況","今","集","溫","傳","土","許","步","群","廣","石","記","需","段","研","界","拉","林","律","叫","且","究","觀","越","織","裝","影","算","低","持","音","眾","書","布","复","容","兒","須","際","商","非","驗","連","斷","深","難","近","礦","千","週","委","素","技","備","半","辦","青","省","列","習","響","約","支","般","史","感","勞","便","團","往","酸","歷","市","克","何","除","消","構","府","稱","太","準","精","值","號","率","族","維","劃","選","標","寫","存","候","毛","親","快","效","斯","院","查","江","型","眼","王","按","格","養","易","置","派","層","片","始","卻","專","狀","育","廠","京","識","適","屬","圓","包","火","住","調","滿","縣","局","照","參","紅","細","引","聽","該","鐵","價","嚴","首","底","液","官","德","隨","病","蘇","失","爾","死","講","配","女","黃","推","顯","談","罪","神","藝","呢","席","含","企","望","密","批","營","項","防","舉","球","英","氧","勢","告","李","台","落","木","幫","輪","破","亞","師","圍","注","遠","字","材","排","供","河","態","封","另","施","減","樹","溶","怎","止","案","言","士","均","武","固","葉","魚","波","視","僅","費","緊","愛","左","章","早","朝","害","續","輕","服","試","食","充","兵","源","判","護","司","足","某","練","差","致","板","田","降","黑","犯","負","擊","范","繼","興","似","餘","堅","曲","輸","修","故","城","夫","夠","送","筆","船","佔","右","財","吃","富","春","職","覺","漢","畫","功","巴","跟","雖","雜","飛","檢","吸","助","昇","陽","互","初","創","抗","考","投","壞","策","古","徑","換","未","跑","留","鋼","曾","端","責","站","簡","述","錢","副","盡","帝","射","草","衝","承","獨","令","限","阿","宣","環","雙","請","超","微","讓","控","州","良","軸","找","否","紀","益","依","優","頂","礎","載","倒","房","突","坐","粉","敵","略","客","袁","冷","勝","絕","析","塊","劑","測","絲","協","訴","念","陳","仍","羅","鹽","友","洋","錯","苦","夜","刑","移","頻","逐","靠","混","母","短","皮","終","聚","汽","村","雲","哪","既","距","衛","停","烈","央","察","燒","迅","境","若","印","洲","刻","括","激","孔","搞","甚","室","待","核","校","散","侵","吧","甲","遊","久","菜","味","舊","模","湖","貨","損","預","阻","毫","普","穩","乙","媽","植","息","擴","銀","語","揮","酒","守","拿","序","紙","醫","缺","雨","嗎","針","劉","啊","急","唱","誤","訓","願","審","附","獲","茶","鮮","糧","斤","孩","脫","硫","肥","善","龍","演","父","漸","血","歡","械","掌","歌","沙","剛","攻","謂","盾","討","晚","粒","亂","燃","矛","乎","殺","藥","寧","魯","貴","鐘","煤","讀","班","伯","香","介","迫","句","豐","培","握","蘭","擔","弦","蛋","沉","假","穿","執","答","樂","誰","順","煙","縮","徵","臉","喜","松","腳","困","異","免","背","星","福","買","染","井","概","慢","怕","磁","倍","祖","皇","促","靜","補","評","翻","肉","踐","尼","衣","寬","揚","棉","希","傷","操","垂","秋","宜","氫","套","督","振","架","亮","末","憲","慶","編","牛","觸","映","雷","銷","詩","座","居","抓","裂","胞","呼","娘","景","威","綠","晶","厚","盟","衡","雞","孫","延","危","膠","屋","鄉","臨","陸","顧","掉","呀","燈","歲","措","束","耐","劇","玉","趙","跳","哥","季","課","凱","胡","額","款","紹","卷","齊","偉","蒸","殖","永","宗","苗","川","爐","岩","弱","零","楊","奏","沿","露","桿","探","滑","鎮","飯","濃","航","懷","趕","庫","奪","伊","靈","稅","途","滅","賽","歸","召","鼓","播","盤","裁","險","康","唯","錄","菌","純","借","糖","蓋","橫","符","私","努","堂","域","槍","潤","幅","哈","竟","熟","蟲","澤","腦","壤","碳","歐","遍","側","寨","敢","徹","慮","斜","薄","庭","納","彈","飼","伸","折","麥","濕","暗","荷","瓦","塞","床","築","惡","戶","訪","塔","奇","透","梁","刀","旋","跡","卡","氯","遇","份","毒","泥","退","洗","擺","灰","彩","賣","耗","夏","擇","忙","銅","獻","硬","予","繁","圈","雪","函","亦","抽","篇","陣","陰","丁","尺","追","堆","雄","迎","泛","爸","樓","避","謀","噸","野","豬","旗","累","偏","典","館","索","秦","脂","潮","爺","豆","忽","托","驚","塑","遺","愈","朱","替","纖","粗","傾","尚","痛","楚","謝","奮","購","磨","君","池","旁","碎","骨","監","捕","弟","暴","割","貫","殊","釋","詞","亡","壁","頓","寶","午","塵","聞","揭","炮","殘","冬","橋","婦","警","綜","招","吳","付","浮","遭","徐","您","搖","谷","贊","箱","隔","訂","男","吹","園","紛","唐","敗","宋","玻","巨","耕","坦","榮","閉","灣","鍵","凡","駐","鍋","救","恩","剝","凝","鹼","齒","截","煉","麻","紡","禁","廢","盛","版","緩","淨","睛","昌","婚","涉","筒","嘴","插","岸","朗","莊","街","藏","姑","貿","腐","奴","啦","慣","乘","夥","恢","勻","紗","扎","辯","耳","彪","臣","億","璃","抵","脈","秀","薩","俄","網","舞","店","噴","縱","寸","汗","掛","洪","賀","閃","柬","爆","烯","津","稻","牆","軟","勇","像","滾","厘","蒙","芳","肯","坡","柱","盪","腿","儀","旅","尾","軋","冰","貢","登","黎","削","鑽","勒","逃","障","氨","郭","峰","幣","港","伏","軌","畝","畢","擦","莫","刺","浪","秘","援","株","健","售","股","島","甘","泡","睡","童","鑄","湯","閥","休","匯","舍","牧","繞","炸","哲","磷","績","朋","淡","尖","啟","陷","柴","呈","徒","顏","淚","稍","忘","泵","藍","拖","洞","授","鏡","辛","壯","鋒","貧","虛","彎","摩","泰","幼","廷","尊","窗","綱","弄","隸","疑","氏","宮","姐","震","瑞","怪","尤","琴","循","描","膜","違","夾","腰","緣","珠","窮","森","枝","竹","溝","催","繩","憶","邦","剩","幸","漿","欄","擁","牙","貯","禮","濾","鈉","紋","罷","拍","咱","喊","袖","埃","勤","罰","焦","潛","伍","墨","欲","縫","姓","刊","飽","仿","獎","鋁","鬼","麗","跨","默","挖","鏈","掃","喝","袋","炭","污","幕","諸","弧","勵","梅","奶","潔","災","舟","鑑","苯","訟","抱","毀","懂","寒","智","埔","寄","屆","躍","渡","挑","丹","艱","貝","碰","拔","爹","戴","碼","夢","芽","熔","赤","漁","哭","敬","顆","奔","鉛","仲","虎","稀","妹","乏","珍","申","桌","遵","允","隆","螺","倉","魏","銳","曉","氮","兼","隱","礙","赫","撥","忠","肅","缸","牽","搶","博","巧","殼","兄","杜","訊","誠","碧","祥","柯","頁","巡","矩","悲","灌","齡","倫","票","尋","桂","鋪","聖","恐","恰","鄭","趣","抬","荒","騰","貼","柔","滴","猛","闊","輛","妻","填","撤","儲","簽","鬧","擾","紫","砂","遞","戲","吊","陶","伐","餵","療","瓶","婆","撫","臂","摸","忍","蝦","蠟","鄰","胸","鞏","擠","偶","棄","槽","勁","乳","鄧","吉","仁","爛","磚","租","烏","艦","伴","瓜","淺","丙","暫","燥","橡","柳","迷","暖","牌","秧","膽","詳","簧","踏","瓷","譜","呆","賓","糊","洛","輝","憤","競","隙","怒","粘","乃","緒","肩","籍","敏","塗","熙","皆","偵","懸","掘","享","糾","醒","狂","鎖","淀","恨","牲","霸","爬","賞","逆","玩","陵","祝","秒","浙","貌","役","彼","悉","鴨","趨","鳳","晨","畜","輩","秩","卵","署","梯","炎","灘","棋","驅","篩","峽","冒","啥","壽","譯","浸","泉","帽","遲","矽","疆","貸","漏","稿","冠","嫩","脅","芯","牢","叛","蝕","奧","鳴","嶺","羊","憑","串","塘","繪","酵","融","盆","錫","廟","籌","凍","輔","攝","襲","筋","拒","僚","旱","鉀","鳥","漆","沈","眉","疏","添","棒","穗","硝","韓","逼","扭","僑","涼","挺","碗","栽","炒","杯","患","餾","勸","豪","遼","勃","鴻","旦","吏","拜","狗","埋","輥","掩","飲","搬","罵","辭","勾","扣","估","蔣","絨","霧","丈","朵","姆","擬","宇","輯","陝","雕","償","蓄","崇","剪","倡","廳","咬","駛","薯","刷","斥","番","賦","奉","佛","澆","漫","曼","扇","鈣","桃","扶","仔","返","俗","虧","腔","鞋","棱","覆","框","悄","叔","撞","騙","勘","旺","沸","孤","吐","孟","渠","屈","疾","妙","惜","仰","狠","脹","諧","拋","黴","桑","崗","嘛","衰","盜","滲","臟","賴","湧","甜","曹","閱","肌","哩","厲","烴","緯","毅","昨","偽","症","煮","嘆","釘","搭","莖","籠","酷","偷","弓","錐","恆","傑","坑","鼻","翼","綸","敘","獄","逮","罐","絡","棚","抑","膨","蔬","寺","驟","穆","冶","枯","冊","屍","凸","紳","坯","犧","焰","轟","欣","晉","瘦","禦","錠","錦","喪","旬","鍛","壟","搜","撲","邀","亭","酯","邁","舒","脆","酶","閒","憂","酚","頑","羽","漲","卸","仗","陪","闢","懲","杭","姚","肚","捉","飄","漂","昆","欺","吾","郎","烷","汁","呵","飾","蕭","雅","郵","遷","燕","撒","姻","赴","宴","煩","債","帳","斑","鈴","旨","醇","董","餅","雛","姿","拌","傅","腹","妥","揉","賢","拆","歪","葡","胺","丟","浩","徽","昂","墊","擋","覽","貪","慰","繳","汪","慌","馮","諾","姜","誼","兇","劣","誣","耀","昏","躺","盈","騎","喬","溪","叢","盧","抹","悶","諮","刮","駕","纜","悟","摘","鉺","擲","頗","幻","柄","惠","慘","佳","仇","臘","窩","滌","劍","瞧","堡","潑","蔥","罩","霍","撈","胎","蒼","濱","倆","捅","湘","砍","霞","邵","萄","瘋","淮","遂","熊","糞","烘","宿","檔","戈","駁","嫂","裕","徙","箭","捐","腸","撐","曬","辨","殿","蓮","攤","攪","醬","屏","疫","哀","蔡","堵","沫","皺","暢","疊","閣","萊","敲","轄","鉤","痕","壩","巷","餓","禍","丘","玄","溜","曰","邏","彭","嘗","卿","妨","艇","吞","韋","怨","矮","歇"],ih=["가격","가끔","가난","가능","가득","가르침","가뭄","가방","가상","가슴","가운데","가을","가이드","가입","가장","가정","가족","가죽","각오","각자","간격","간부","간섭","간장","간접","간판","갈등","갈비","갈색","갈증","감각","감기","감소","감수성","감자","감정","갑자기","강남","강당","강도","강력히","강변","강북","강사","강수량","강아지","강원도","강의","강제","강조","같이","개구리","개나리","개방","개별","개선","개성","개인","객관적","거실","거액","거울","거짓","거품","걱정","건강","건물","건설","건조","건축","걸음","검사","검토","게시판","게임","겨울","견해","결과","결국","결론","결석","결승","결심","결정","결혼","경계","경고","경기","경력","경복궁","경비","경상도","경영","경우","경쟁","경제","경주","경찰","경치","경향","경험","계곡","계단","계란","계산","계속","계약","계절","계층","계획","고객","고구려","고궁","고급","고등학생","고무신","고민","고양이","고장","고전","고집","고춧가루","고통","고향","곡식","골목","골짜기","골프","공간","공개","공격","공군","공급","공기","공동","공무원","공부","공사","공식","공업","공연","공원","공장","공짜","공책","공통","공포","공항","공휴일","과목","과일","과장","과정","과학","관객","관계","관광","관념","관람","관련","관리","관습","관심","관점","관찰","광경","광고","광장","광주","괴로움","굉장히","교과서","교문","교복","교실","교양","교육","교장","교직","교통","교환","교훈","구경","구름","구멍","구별","구분","구석","구성","구속","구역","구입","구청","구체적","국가","국기","국내","국립","국물","국민","국수","국어","국왕","국적","국제","국회","군대","군사","군인","궁극적","권리","권위","권투","귀국","귀신","규정","규칙","균형","그날","그냥","그늘","그러나","그룹","그릇","그림","그제서야","그토록","극복","극히","근거","근교","근래","근로","근무","근본","근원","근육","근처","글씨","글자","금강산","금고","금년","금메달","금액","금연","금요일","금지","긍정적","기간","기관","기념","기능","기독교","기둥","기록","기름","기법","기본","기분","기쁨","기숙사","기술","기억","기업","기온","기운","기원","기적","기준","기침","기혼","기획","긴급","긴장","길이","김밥","김치","김포공항","깍두기","깜빡","깨달음","깨소금","껍질","꼭대기","꽃잎","나들이","나란히","나머지","나물","나침반","나흘","낙엽","난방","날개","날씨","날짜","남녀","남대문","남매","남산","남자","남편","남학생","낭비","낱말","내년","내용","내일","냄비","냄새","냇물","냉동","냉면","냉방","냉장고","넥타이","넷째","노동","노란색","노력","노인","녹음","녹차","녹화","논리","논문","논쟁","놀이","농구","농담","농민","농부","농업","농장","농촌","높이","눈동자","눈물","눈썹","뉴욕","느낌","늑대","능동적","능력","다방","다양성","다음","다이어트","다행","단계","단골","단독","단맛","단순","단어","단위","단점","단체","단추","단편","단풍","달걀","달러","달력","달리","닭고기","담당","담배","담요","담임","답변","답장","당근","당분간","당연히","당장","대규모","대낮","대단히","대답","대도시","대략","대량","대륙","대문","대부분","대신","대응","대장","대전","대접","대중","대책","대출","대충","대통령","대학","대한민국","대합실","대형","덩어리","데이트","도대체","도덕","도둑","도망","도서관","도심","도움","도입","도자기","도저히","도전","도중","도착","독감","독립","독서","독일","독창적","동화책","뒷모습","뒷산","딸아이","마누라","마늘","마당","마라톤","마련","마무리","마사지","마약","마요네즈","마을","마음","마이크","마중","마지막","마찬가지","마찰","마흔","막걸리","막내","막상","만남","만두","만세","만약","만일","만점","만족","만화","많이","말기","말씀","말투","맘대로","망원경","매년","매달","매력","매번","매스컴","매일","매장","맥주","먹이","먼저","먼지","멀리","메일","며느리","며칠","면담","멸치","명단","명령","명예","명의","명절","명칭","명함","모금","모니터","모델","모든","모범","모습","모양","모임","모조리","모집","모퉁이","목걸이","목록","목사","목소리","목숨","목적","목표","몰래","몸매","몸무게","몸살","몸속","몸짓","몸통","몹시","무관심","무궁화","무더위","무덤","무릎","무슨","무엇","무역","무용","무조건","무지개","무척","문구","문득","문법","문서","문제","문학","문화","물가","물건","물결","물고기","물론","물리학","물음","물질","물체","미국","미디어","미사일","미술","미역","미용실","미움","미인","미팅","미혼","민간","민족","민주","믿음","밀가루","밀리미터","밑바닥","바가지","바구니","바나나","바늘","바닥","바닷가","바람","바이러스","바탕","박물관","박사","박수","반대","반드시","반말","반발","반성","반응","반장","반죽","반지","반찬","받침","발가락","발걸음","발견","발달","발레","발목","발바닥","발생","발음","발자국","발전","발톱","발표","밤하늘","밥그릇","밥맛","밥상","밥솥","방금","방면","방문","방바닥","방법","방송","방식","방안","방울","방지","방학","방해","방향","배경","배꼽","배달","배드민턴","백두산","백색","백성","백인","백제","백화점","버릇","버섯","버튼","번개","번역","번지","번호","벌금","벌레","벌써","범위","범인","범죄","법률","법원","법적","법칙","베이징","벨트","변경","변동","변명","변신","변호사","변화","별도","별명","별일","병실","병아리","병원","보관","보너스","보라색","보람","보름","보상","보안","보자기","보장","보전","보존","보통","보편적","보험","복도","복사","복숭아","복습","볶음","본격적","본래","본부","본사","본성","본인","본질","볼펜","봉사","봉지","봉투","부근","부끄러움","부담","부동산","부문","부분","부산","부상","부엌","부인","부작용","부장","부정","부족","부지런히","부친","부탁","부품","부회장","북부","북한","분노","분량","분리","분명","분석","분야","분위기","분필","분홍색","불고기","불과","불교","불꽃","불만","불법","불빛","불안","불이익","불행","브랜드","비극","비난","비닐","비둘기","비디오","비로소","비만","비명","비밀","비바람","비빔밥","비상","비용","비율","비중","비타민","비판","빌딩","빗물","빗방울","빗줄기","빛깔","빨간색","빨래","빨리","사건","사계절","사나이","사냥","사람","사랑","사립","사모님","사물","사방","사상","사생활","사설","사슴","사실","사업","사용","사월","사장","사전","사진","사촌","사춘기","사탕","사투리","사흘","산길","산부인과","산업","산책","살림","살인","살짝","삼계탕","삼국","삼십","삼월","삼촌","상관","상금","상대","상류","상반기","상상","상식","상업","상인","상자","상점","상처","상추","상태","상표","상품","상황","새벽","색깔","색연필","생각","생명","생물","생방송","생산","생선","생신","생일","생활","서랍","서른","서명","서민","서비스","서양","서울","서적","서점","서쪽","서클","석사","석유","선거","선물","선배","선생","선수","선원","선장","선전","선택","선풍기","설거지","설날","설렁탕","설명","설문","설사","설악산","설치","설탕","섭씨","성공","성당","성명","성별","성인","성장","성적","성질","성함","세금","세미나","세상","세월","세종대왕","세탁","센터","센티미터","셋째","소규모","소극적","소금","소나기","소년","소득","소망","소문","소설","소속","소아과","소용","소원","소음","소중히","소지품","소질","소풍","소형","속담","속도","속옷","손가락","손길","손녀","손님","손등","손목","손뼉","손실","손질","손톱","손해","솔직히","솜씨","송아지","송이","송편","쇠고기","쇼핑","수건","수년","수단","수돗물","수동적","수면","수명","수박","수상","수석","수술","수시로","수업","수염","수영","수입","수준","수집","수출","수컷","수필","수학","수험생","수화기","숙녀","숙소","숙제","순간","순서","순수","순식간","순위","숟가락","술병","술집","숫자","스님","스물","스스로","스승","스웨터","스위치","스케이트","스튜디오","스트레스","스포츠","슬쩍","슬픔","습관","습기","승객","승리","승부","승용차","승진","시각","시간","시골","시금치","시나리오","시댁","시리즈","시멘트","시민","시부모","시선","시설","시스템","시아버지","시어머니","시월","시인","시일","시작","시장","시절","시점","시중","시즌","시집","시청","시합","시험","식구","식기","식당","식량","식료품","식물","식빵","식사","식생활","식초","식탁","식품","신고","신규","신념","신문","신발","신비","신사","신세","신용","신제품","신청","신체","신화","실감","실내","실력","실례","실망","실수","실습","실시","실장","실정","실질적","실천","실체","실컷","실태","실패","실험","실현","심리","심부름","심사","심장","심정","심판","쌍둥이","씨름","씨앗","아가씨","아나운서","아드님","아들","아쉬움","아스팔트","아시아","아울러","아저씨","아줌마","아직","아침","아파트","아프리카","아픔","아홉","아흔","악기","악몽","악수","안개","안경","안과","안내","안녕","안동","안방","안부","안주","알루미늄","알코올","암시","암컷","압력","앞날","앞문","애인","애정","액수","앨범","야간","야단","야옹","약간","약국","약속","약수","약점","약품","약혼녀","양념","양력","양말","양배추","양주","양파","어둠","어려움","어른","어젯밤","어쨌든","어쩌다가","어쩐지","언니","언덕","언론","언어","얼굴","얼른","얼음","얼핏","엄마","업무","업종","업체","엉덩이","엉망","엉터리","엊그제","에너지","에어컨","엔진","여건","여고생","여관","여군","여권","여대생","여덟","여동생","여든","여론","여름","여섯","여성","여왕","여인","여전히","여직원","여학생","여행","역사","역시","역할","연결","연구","연극","연기","연락","연설","연세","연속","연습","연애","연예인","연인","연장","연주","연출","연필","연합","연휴","열기","열매","열쇠","열심히","열정","열차","열흘","염려","엽서","영국","영남","영상","영양","영역","영웅","영원히","영하","영향","영혼","영화","옆구리","옆방","옆집","예감","예금","예방","예산","예상","예선","예술","예습","예식장","예약","예전","예절","예정","예컨대","옛날","오늘","오락","오랫동안","오렌지","오로지","오른발","오븐","오십","오염","오월","오전","오직","오징어","오페라","오피스텔","오히려","옥상","옥수수","온갖","온라인","온몸","온종일","온통","올가을","올림픽","올해","옷차림","와이셔츠","와인","완성","완전","왕비","왕자","왜냐하면","왠지","외갓집","외국","외로움","외삼촌","외출","외침","외할머니","왼발","왼손","왼쪽","요금","요일","요즘","요청","용기","용서","용어","우산","우선","우승","우연히","우정","우체국","우편","운동","운명","운반","운전","운행","울산","울음","움직임","웃어른","웃음","워낙","원고","원래","원서","원숭이","원인","원장","원피스","월급","월드컵","월세","월요일","웨이터","위반","위법","위성","위원","위험","위협","윗사람","유난히","유럽","유명","유물","유산","유적","유치원","유학","유행","유형","육군","육상","육십","육체","은행","음력","음료","음반","음성","음식","음악","음주","의견","의논","의문","의복","의식","의심","의외로","의욕","의원","의학","이것","이곳","이념","이놈","이달","이대로","이동","이렇게","이력서","이론적","이름","이민","이발소","이별","이불","이빨","이상","이성","이슬","이야기","이용","이웃","이월","이윽고","이익","이전","이중","이튿날","이틀","이혼","인간","인격","인공","인구","인근","인기","인도","인류","인물","인생","인쇄","인연","인원","인재","인종","인천","인체","인터넷","인하","인형","일곱","일기","일단","일대","일등","일반","일본","일부","일상","일생","일손","일요일","일월","일정","일종","일주일","일찍","일체","일치","일행","일회용","임금","임무","입대","입력","입맛","입사","입술","입시","입원","입장","입학","자가용","자격","자극","자동","자랑","자부심","자식","자신","자연","자원","자율","자전거","자정","자존심","자판","작가","작년","작성","작업","작용","작은딸","작품","잔디","잔뜩","잔치","잘못","잠깐","잠수함","잠시","잠옷","잠자리","잡지","장관","장군","장기간","장래","장례","장르","장마","장면","장모","장미","장비","장사","장소","장식","장애인","장인","장점","장차","장학금","재능","재빨리","재산","재생","재작년","재정","재채기","재판","재학","재활용","저것","저고리","저곳","저녁","저런","저렇게","저번","저울","저절로","저축","적극","적당히","적성","적용","적응","전개","전공","전기","전달","전라도","전망","전문","전반","전부","전세","전시","전용","전자","전쟁","전주","전철","전체","전통","전혀","전후","절대","절망","절반","절약","절차","점검","점수","점심","점원","점점","점차","접근","접시","접촉","젓가락","정거장","정도","정류장","정리","정말","정면","정문","정반대","정보","정부","정비","정상","정성","정오","정원","정장","정지","정치","정확히","제공","제과점","제대로","제목","제발","제법","제삿날","제안","제일","제작","제주도","제출","제품","제한","조각","조건","조금","조깅","조명","조미료","조상","조선","조용히","조절","조정","조직","존댓말","존재","졸업","졸음","종교","종로","종류","종소리","종업원","종종","종합","좌석","죄인","주관적","주름","주말","주머니","주먹","주문","주민","주방","주변","주식","주인","주일","주장","주전자","주택","준비","줄거리","줄기","줄무늬","중간","중계방송","중국","중년","중단","중독","중반","중부","중세","중소기업","중순","중앙","중요","중학교","즉석","즉시","즐거움","증가","증거","증권","증상","증세","지각","지갑","지경","지극히","지금","지급","지능","지름길","지리산","지방","지붕","지식","지역","지우개","지원","지적","지점","지진","지출","직선","직업","직원","직장","진급","진동","진로","진료","진리","진짜","진찰","진출","진통","진행","질문","질병","질서","짐작","집단","집안","집중","짜증","찌꺼기","차남","차라리","차량","차림","차별","차선","차츰","착각","찬물","찬성","참가","참기름","참새","참석","참여","참외","참조","찻잔","창가","창고","창구","창문","창밖","창작","창조","채널","채점","책가방","책방","책상","책임","챔피언","처벌","처음","천국","천둥","천장","천재","천천히","철도","철저히","철학","첫날","첫째","청년","청바지","청소","청춘","체계","체력","체온","체육","체중","체험","초등학생","초반","초밥","초상화","초순","초여름","초원","초저녁","초점","초청","초콜릿","촛불","총각","총리","총장","촬영","최근","최상","최선","최신","최악","최종","추석","추억","추진","추천","추측","축구","축소","축제","축하","출근","출발","출산","출신","출연","출입","출장","출판","충격","충고","충돌","충분히","충청도","취업","취직","취향","치약","친구","친척","칠십","칠월","칠판","침대","침묵","침실","칫솔","칭찬","카메라","카운터","칼국수","캐릭터","캠퍼스","캠페인","커튼","컨디션","컬러","컴퓨터","코끼리","코미디","콘서트","콜라","콤플렉스","콩나물","쾌감","쿠데타","크림","큰길","큰딸","큰소리","큰아들","큰어머니","큰일","큰절","클래식","클럽","킬로","타입","타자기","탁구","탁자","탄생","태권도","태양","태풍","택시","탤런트","터널","터미널","테니스","테스트","테이블","텔레비전","토론","토마토","토요일","통계","통과","통로","통신","통역","통일","통장","통제","통증","통합","통화","퇴근","퇴원","퇴직금","튀김","트럭","특급","특별","특성","특수","특징","특히","튼튼히","티셔츠","파란색","파일","파출소","판결","판단","판매","판사","팔십","팔월","팝송","패션","팩스","팩시밀리","팬티","퍼센트","페인트","편견","편의","편지","편히","평가","평균","평생","평소","평양","평일","평화","포스터","포인트","포장","포함","표면","표정","표준","표현","품목","품질","풍경","풍속","풍습","프랑스","프린터","플라스틱","피곤","피망","피아노","필름","필수","필요","필자","필통","핑계","하느님","하늘","하드웨어","하룻밤","하반기","하숙집","하순","하여튼","하지만","하천","하품","하필","학과","학교","학급","학기","학년","학력","학번","학부모","학비","학생","학술","학습","학용품","학원","학위","학자","학점","한계","한글","한꺼번에","한낮","한눈","한동안","한때","한라산","한마디","한문","한번","한복","한식","한여름","한쪽","할머니","할아버지","할인","함께","함부로","합격","합리적","항공","항구","항상","항의","해결","해군","해답","해당","해물","해석","해설","해수욕장","해안","핵심","핸드백","햄버거","햇볕","햇살","행동","행복","행사","행운","행위","향기","향상","향수","허락","허용","헬기","현관","현금","현대","현상","현실","현장","현재","현지","혈액","협력","형부","형사","형수","형식","형제","형태","형편","혜택","호기심","호남","호랑이","호박","호텔","호흡","혹시","홀로","홈페이지","홍보","홍수","홍차","화면","화분","화살","화요일","화장","화학","확보","확인","확장","확정","환갑","환경","환영","환율","환자","활기","활동","활발히","활용","활짝","회견","회관","회복","회색","회원","회장","회전","횟수","횡단보도","효율적","후반","후춧가루","훈련","훨씬","휴식","휴일","흉내","흐름","흑백","흑인","흔적","흔히","흥미","흥분","희곡","희망","희생","흰색","힘껏"],sh=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","académie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acquérir","acronyme","acteur","actif","actuel","adepte","adéquat","adhésif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","aérer","aéronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agréable","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","algèbre","algue","aliéner","aliment","alléger","alliage","allouer","allumer","alourdir","alpaga","altesse","alvéole","amateur","ambigu","ambre","aménager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","anéantir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","apéritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","artériel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannière","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","bélier","belote","bénéfice","berceau","berger","berline","bermuda","besace","besogne","bétail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","brèche","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","caféine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","caméra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","cédille","ceinture","céleste","cellule","cendrier","censurer","central","cercle","cérébral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","chéquier","chercher","cheval","chien","chiffre","chignon","chimère","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cinéma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohésion","coiffer","coincer","colère","colibri","colline","colmater","colonel","combat","comédie","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","cortège","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","créature","créditer","crémeux","creuser","crevette","cribler","crier","cristal","critère","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuillère","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","débattre","débiter","déborder","débrider","débutant","décaler","décembre","déchirer","décider","déclarer","décorer","décrire","décupler","dédale","déductif","déesse","défensif","défiler","défrayer","dégager","dégivrer","déglutir","dégrafer","déjeuner","délice","déloger","demander","demeurer","démolir","dénicher","dénouer","dentelle","dénuder","départ","dépenser","déphaser","déplacer","déposer","déranger","dérober","désastre","descente","désert","désigner","désobéir","dessiner","destrier","détacher","détester","détourer","détresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","différer","digérer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","éblouir","écarter","écharpe","échelle","éclairer","éclipse","éclore","écluse","école","économie","écorce","écouter","écraser","écrémer","écrivain","écrou","écume","écureuil","édifier","éduquer","effacer","effectif","effigie","effort","effrayer","effusion","égaliser","égarer","éjecter","élaborer","élargir","électron","élégant","éléphant","élève","éligible","élitisme","éloge","élucider","éluder","emballer","embellir","embryon","émeraude","émission","emmener","émotion","émouvoir","empereur","employer","emporter","emprise","émulsion","encadrer","enchère","enclave","encoche","endiguer","endosser","endroit","enduire","énergie","enfance","enfermer","enfouir","engager","engin","englober","énigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","énumérer","envahir","enviable","envoyer","enzyme","éolien","épaissir","épargne","épatant","épaule","épicerie","épidémie","épier","épilogue","épine","épisode","épitaphe","époque","épreuve","éprouver","épuisant","équerre","équipe","ériger","érosion","erreur","éruption","escalier","espadon","espèce","espiègle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","étagère","étaler","étanche","étatique","éteindre","étendoir","éternel","éthanol","éthique","ethnie","étirer","étoffer","étoile","étonnant","étourdir","étrange","étroit","étude","euphorie","évaluer","évasion","éventail","évidence","éviter","évolutif","évoquer","exact","exagérer","exaucer","exceller","excitant","exclusif","excuse","exécuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expédier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fébrile","féconder","fédérer","félin","femme","fémur","fendoir","féodal","fermer","féroce","ferveur","festival","feuille","feutre","février","fiasco","ficeler","fictif","fidèle","figure","filature","filetage","filière","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fléau","flèche","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fougère","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","frégate","freiner","frelon","frémir","frénésie","frère","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","géant","gélatine","gélule","gendarme","général","génie","genou","gentil","géologie","géomètre","géranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruyère","guépard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","hélium","hématome","herbe","hérisson","hermine","héron","hésiter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homogène","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygiène","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impérial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","inédit","ineptie","inexact","infini","infliger","informer","infusion","ingérer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irréel","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juvénile","kayak","kimono","kiosque","label","labial","labourer","lacérer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","légal","léger","légume","lessive","lettre","levier","lexique","lézard","liasse","libérer","libre","licence","licorne","liège","lièvre","ligature","ligoter","ligue","limer","limite","limonade","limpide","linéaire","lingot","lionceau","liquide","lisière","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumière","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","maléfice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","matériel","matière","matraque","maudire","maussade","mauve","maximal","méchant","méconnu","médaille","médecin","méditer","méduse","meilleur","mélange","mélodie","membre","mémoire","menacer","mener","menhir","mensonge","mentor","mercredi","mérite","merle","messager","mesure","métal","météore","méthode","métier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","minéral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","murène","murmure","muscle","muséum","musicien","mutation","muter","mutuel","myriade","myrtille","mystère","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","nébuleux","nectar","néfaste","négation","négliger","négocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","numéro","nuptial","nuque","nutritif","obéir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","océan","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","onéreux","onirique","opale","opaque","opérer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxygène","ozone","paisible","palace","palmarès","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","pastèque","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pélican","pelle","pelouse","peluche","pendule","pénétrer","pénible","pensif","pénurie","pépite","péplum","perdrix","perforer","période","permuter","perplexe","persil","perte","peser","pétale","petit","pétrir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pièce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poésie","poète","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","pondérer","poney","portique","position","posséder","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","précieux","prédire","préfixe","prélude","prénom","présence","prétexte","prévoir","primitif","prince","prison","priver","problème","procéder","prodige","profond","progrès","proie","projeter","prologue","promener","propre","prospère","protéger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quiétude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","réactif","réagir","réaliser","réanimer","recevoir","réciter","réclamer","récolter","recruter","reculer","recycler","rédiger","redouter","refaire","réflexe","réformer","refrain","refuge","régalien","région","réglage","régulier","réitérer","rejeter","rejouer","relatif","relever","relief","remarque","remède","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","réserve","résineux","résoudre","respect","rester","résultat","rétablir","retenir","réticule","retomber","retracer","réunion","réussir","revanche","revivre","révolte","révulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivière","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","scélérat","scénario","sceptre","schéma","science","scinder","score","scrutin","sculpter","séance","sécable","sécher","secouer","sécréter","sédatif","séduire","seigneur","séjour","sélectif","semaine","sembler","semence","séminal","sénateur","sensible","sentence","séparer","séquence","serein","sergent","sérieux","serrure","sérum","service","sésame","sévir","sevrage","sextuple","sidéral","siècle","siéger","siffler","sigle","signal","silence","silicium","simple","sincère","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spécial","sphère","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succès","sucre","suffixe","suggérer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","symétrie","synapse","syntaxe","système","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","témoin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","tétine","texte","thème","théorie","thérapie","thorax","tibia","tiède","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tolérant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","trèfle","tremper","trésor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","végétal","véhicule","veinard","véloce","vendredi","vénérer","venger","venimeux","ventouse","verdure","vérin","vernir","verrou","verser","vertu","veston","vétéran","vétuste","vexant","vexer","viaduc","viande","victoire","vidange","vidéo","vignette","vigueur","vilain","village","vinaigre","violon","vipère","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xénon","yacht","zèbre","zénith","zeste","zoologie"],ch=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"],lh=["ábaco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","acción","aceite","acelga","acento","aceptar","ácido","aclarar","acné","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","aéreo","afectar","afición","afinar","afirmar","ágil","agitar","agonía","agosto","agotar","agregar","agrio","agua","agudo","águila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacrán","alambre","alarma","alba","álbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodón","aliado","aliento","alivio","alma","almeja","almíbar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","ámbar","ámbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","andén","anemia","ángulo","anillo","ánimo","anís","anotar","antena","antiguo","antojo","anual","anular","anuncio","añadir","añejo","año","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","araña","arar","árbitro","árbol","arbusto","archivo","arco","arder","ardilla","arduo","área","árido","aries","armonía","arnés","aroma","arpa","arpón","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","áspero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","ático","atleta","átomo","atraer","atroz","atún","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avión","aviso","ayer","ayuda","ayuno","azafrán","azar","azote","azúcar","azufre","azul","baba","babor","bache","bahía","baile","bajar","balanza","balcón","balde","bambú","banco","banda","baño","barba","barco","barniz","barro","báscula","bastón","basura","batalla","batería","batir","batuta","baúl","bazar","bebé","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsái","borde","borrar","bosque","bote","botín","bóveda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufón","búho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzón","caballo","cabeza","cabina","cabra","cacao","cadáver","cadena","caer","café","caída","caimán","caja","cajón","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","cáncer","candil","canela","canguro","canica","canto","caña","cañón","caoba","caos","capaz","capitán","capote","captar","capucha","cara","carbón","cárcel","careta","carga","cariño","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","célebre","celoso","célula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","césped","cetro","chacal","chaleco","champú","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclón","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","ciprés","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","clínica","cobre","cocción","cochino","cocina","coco","código","codo","cofre","coger","cohete","cojín","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","cómodo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazón","corbata","corcho","cordón","corona","correr","coser","cosmos","costa","cráneo","cráter","crear","crecer","creído","crema","cría","crimen","cripta","crisis","cromo","crónica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupón","cúpula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","dátil","deber","débil","década","decir","dedo","defensa","definir","dejar","delfín","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvío","detalle","detener","deuda","día","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difícil","digno","dilema","diluir","dinero","directo","dirigir","disco","diseño","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","dragón","droga","ducha","duda","duelo","dueño","dulce","dúo","duque","durar","dureza","duro","ébano","ebrio","echar","eco","ecuador","edad","edición","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","élite","elixir","elogio","eludir","embudo","emitir","emoción","empate","empeño","empleo","empresa","enano","encargo","enchufe","encía","enemigo","enero","enfado","enfermo","engaño","enigma","enlace","enorme","enredo","ensayo","enseñar","entero","entrar","envase","envío","época","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espía","esposa","espuma","esquí","estar","este","estilo","estufa","etapa","eterno","ética","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","éxito","experto","explicar","exponer","extremo","fábrica","fábula","fachada","fácil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","faraón","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fértil","fervor","festín","fiable","fianza","fiar","fibra","ficción","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flúor","fobia","foca","fogata","fogón","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","frágil","franja","frase","fraude","freír","freno","fresa","frío","frito","fruta","fuego","fuente","fuerza","fuga","fumar","función","funda","furgón","furia","fusil","fútbol","futuro","gacela","gafas","gaita","gajo","gala","galería","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavilán","gemelo","gemir","gen","género","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gráfico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","grúa","grueso","grumo","grupo","guante","guapo","guardia","guerra","guía","guiño","guion","guiso","guitarra","gusano","gustar","haber","hábil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazaña","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","héroe","hervir","hielo","hierro","hígado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","húmedo","humilde","humo","hundir","huracán","hurto","icono","ideal","idioma","ídolo","iglesia","iglú","igual","ilegal","ilusión","imagen","imán","imitar","impar","imperio","imponer","impulso","incapaz","índice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","interés","íntimo","intuir","inútil","invierno","ira","iris","ironía","isla","islote","jabalí","jabón","jamón","jarabe","jardín","jarra","jaula","jazmín","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","júpiter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladrón","lagarto","lágrima","laguna","laico","lamer","lámina","lámpara","lana","lancha","langosta","lanza","lápiz","largo","larva","lástima","lata","látex","latir","laurel","lavar","lazo","leal","lección","leche","lector","leer","legión","legumbre","lejano","lengua","lento","leña","león","leopardo","lesión","letal","letra","leve","leyenda","libertad","libro","licor","líder","lidiar","lienzo","liga","ligero","lima","límite","limón","limpio","lince","lindo","línea","lingote","lino","linterna","líquido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","loción","loco","locura","lógica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","maíz","maldad","maleta","malla","malo","mamá","mambo","mamut","manco","mando","manejar","manga","maniquí","manjar","mano","manso","manta","mañana","mapa","máquina","mar","marco","marea","marfil","margen","marido","mármol","marrón","martes","marzo","masa","máscara","masivo","matar","materia","matiz","matriz","máximo","mayor","mazorca","mecha","medalla","medio","médula","mejilla","mejor","melena","melón","memoria","menor","mensaje","mente","menú","mercado","merengue","mérito","mes","mesón","meta","meter","método","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millón","mimo","mina","minero","mínimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","moción","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","moño","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","móvil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","muñeca","mural","muro","músculo","museo","musgo","música","muslo","nácar","nación","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","náusea","naval","nave","navidad","necio","néctar","negar","negocio","negro","neón","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","niñez","niño","nítido","nivel","nobleza","noche","nómina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","núcleo","nudillo","nudo","nuera","nueve","nuez","nulo","número","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","océano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oído","oír","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opción","ópera","opinar","oponer","optar","óptica","opuesto","oración","orador","oral","órbita","orca","orden","oreja","órgano","orgía","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadía","oscuro","osezno","oso","ostra","otoño","otro","oveja","óvulo","óxido","oxígeno","oyente","ozono","pacto","padre","paella","página","pago","país","pájaro","palabra","palco","paleta","pálido","palma","paloma","palpar","pan","panal","pánico","pantera","pañuelo","papá","papel","papilla","paquete","parar","parcela","pared","parir","paro","párpado","parque","párrafo","parte","pasar","paseo","pasión","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peatón","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldaño","pelea","peligro","pellejo","pelo","peluca","pena","pensar","peñón","peón","peor","pepino","pequeño","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pésimo","pestaña","pétalo","petróleo","pez","pezuña","picar","pichón","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","piña","piojo","pipa","pirata","pisar","piscina","piso","pista","pitón","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesía","poeta","polen","policía","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porción","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","príncipe","prisión","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","próximo","prueba","público","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmón","pulpo","pulso","puma","punto","puñal","puño","pupa","pupila","puré","quedar","queja","quemar","querer","queso","quieto","química","quince","quitar","rábano","rabia","rabo","ración","radical","raíz","rama","rampa","rancho","rango","rapaz","rápido","rapto","rasgo","raspa","rato","rayo","raza","razón","reacción","realidad","rebaño","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refrán","refugio","regalo","regir","regla","regreso","rehén","reino","reír","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","revés","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","rígido","rigor","rincón","riñón","río","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubí","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sábado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmón","salón","salsa","salto","salud","salvar","samba","sanción","sandía","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sartén","sastre","satán","sauna","saxofón","sección","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","señal","señor","separar","sepia","sequía","ser","serie","sermón","servir","sesenta","sesión","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","sílaba","silbar","silencio","silla","símbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","sólido","soltar","solución","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","sostén","sótano","suave","subir","suceso","sudor","suegra","suelo","sueño","suerte","sufrir","sujeto","sultán","sumar","superar","suplir","suponer","supremo","sur","surco","sureño","surgir","susto","sutil","tabaco","tabique","tabla","tabú","taco","tacto","tajo","talar","talco","talento","talla","talón","tamaño","tambor","tango","tanque","tapa","tapete","tapia","tapón","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazón","teatro","techo","tecla","técnica","tejado","tejer","tejido","tela","teléfono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teoría","terapia","terco","término","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburón","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","tímido","timo","tinta","tío","típico","tipo","tira","tirón","titán","títere","título","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","tórax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","tóxico","trabajo","tractor","traer","tráfico","trago","traje","tramo","trance","trato","trauma","trazar","trébol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tubería","tubo","tuerto","tumba","tumor","túnel","túnica","turbina","turismo","turno","tutor","ubicar","úlcera","umbral","unidad","unir","universo","uno","untar","uña","urbano","urbe","urgente","urna","usar","usuario","útil","utopía","uva","vaca","vacío","vacuna","vagar","vago","vaina","vajilla","vale","válido","valle","valor","válvula","vampiro","vara","variar","varón","vaso","vecino","vector","vehículo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vía","viaje","vibrar","vicio","víctima","vida","vídeo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","viñedo","violín","viral","virgo","virtud","visor","víspera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volcán","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"],uh=["あいこくしん","あいさつ","あいだ","あおぞら","あかちゃん","あきる","あけがた","あける","あこがれる","あさい","あさひ","あしあと","あじわう","あずかる","あずき","あそぶ","あたえる","あたためる","あたりまえ","あたる","あつい","あつかう","あっしゅく","あつまり","あつめる","あてな","あてはまる","あひる","あぶら","あぶる","あふれる","あまい","あまど","あまやかす","あまり","あみもの","あめりか","あやまる","あゆむ","あらいぐま","あらし","あらすじ","あらためる","あらゆる","あらわす","ありがとう","あわせる","あわてる","あんい","あんがい","あんこ","あんぜん","あんてい","あんない","あんまり","いいだす","いおん","いがい","いがく","いきおい","いきなり","いきもの","いきる","いくじ","いくぶん","いけばな","いけん","いこう","いこく","いこつ","いさましい","いさん","いしき","いじゅう","いじょう","いじわる","いずみ","いずれ","いせい","いせえび","いせかい","いせき","いぜん","いそうろう","いそがしい","いだい","いだく","いたずら","いたみ","いたりあ","いちおう","いちじ","いちど","いちば","いちぶ","いちりゅう","いつか","いっしゅん","いっせい","いっそう","いったん","いっち","いってい","いっぽう","いてざ","いてん","いどう","いとこ","いない","いなか","いねむり","いのち","いのる","いはつ","いばる","いはん","いびき","いひん","いふく","いへん","いほう","いみん","いもうと","いもたれ","いもり","いやがる","いやす","いよかん","いよく","いらい","いらすと","いりぐち","いりょう","いれい","いれもの","いれる","いろえんぴつ","いわい","いわう","いわかん","いわば","いわゆる","いんげんまめ","いんさつ","いんしょう","いんよう","うえき","うえる","うおざ","うがい","うかぶ","うかべる","うきわ","うくらいな","うくれれ","うけたまわる","うけつけ","うけとる","うけもつ","うける","うごかす","うごく","うこん","うさぎ","うしなう","うしろがみ","うすい","うすぎ","うすぐらい","うすめる","うせつ","うちあわせ","うちがわ","うちき","うちゅう","うっかり","うつくしい","うったえる","うつる","うどん","うなぎ","うなじ","うなずく","うなる","うねる","うのう","うぶげ","うぶごえ","うまれる","うめる","うもう","うやまう","うよく","うらがえす","うらぐち","うらない","うりあげ","うりきれ","うるさい","うれしい","うれゆき","うれる","うろこ","うわき","うわさ","うんこう","うんちん","うんてん","うんどう","えいえん","えいが","えいきょう","えいご","えいせい","えいぶん","えいよう","えいわ","えおり","えがお","えがく","えきたい","えくせる","えしゃく","えすて","えつらん","えのぐ","えほうまき","えほん","えまき","えもじ","えもの","えらい","えらぶ","えりあ","えんえん","えんかい","えんぎ","えんげき","えんしゅう","えんぜつ","えんそく","えんちょう","えんとつ","おいかける","おいこす","おいしい","おいつく","おうえん","おうさま","おうじ","おうせつ","おうたい","おうふく","おうべい","おうよう","おえる","おおい","おおう","おおどおり","おおや","おおよそ","おかえり","おかず","おがむ","おかわり","おぎなう","おきる","おくさま","おくじょう","おくりがな","おくる","おくれる","おこす","おこなう","おこる","おさえる","おさない","おさめる","おしいれ","おしえる","おじぎ","おじさん","おしゃれ","おそらく","おそわる","おたがい","おたく","おだやか","おちつく","おっと","おつり","おでかけ","おとしもの","おとなしい","おどり","おどろかす","おばさん","おまいり","おめでとう","おもいで","おもう","おもたい","おもちゃ","おやつ","おやゆび","およぼす","おらんだ","おろす","おんがく","おんけい","おんしゃ","おんせん","おんだん","おんちゅう","おんどけい","かあつ","かいが","がいき","がいけん","がいこう","かいさつ","かいしゃ","かいすいよく","かいぜん","かいぞうど","かいつう","かいてん","かいとう","かいふく","がいへき","かいほう","かいよう","がいらい","かいわ","かえる","かおり","かかえる","かがく","かがし","かがみ","かくご","かくとく","かざる","がぞう","かたい","かたち","がちょう","がっきゅう","がっこう","がっさん","がっしょう","かなざわし","かのう","がはく","かぶか","かほう","かほご","かまう","かまぼこ","かめれおん","かゆい","かようび","からい","かるい","かろう","かわく","かわら","がんか","かんけい","かんこう","かんしゃ","かんそう","かんたん","かんち","がんばる","きあい","きあつ","きいろ","ぎいん","きうい","きうん","きえる","きおう","きおく","きおち","きおん","きかい","きかく","きかんしゃ","ききて","きくばり","きくらげ","きけんせい","きこう","きこえる","きこく","きさい","きさく","きさま","きさらぎ","ぎじかがく","ぎしき","ぎじたいけん","ぎじにってい","ぎじゅつしゃ","きすう","きせい","きせき","きせつ","きそう","きぞく","きぞん","きたえる","きちょう","きつえん","ぎっちり","きつつき","きつね","きてい","きどう","きどく","きない","きなが","きなこ","きぬごし","きねん","きのう","きのした","きはく","きびしい","きひん","きふく","きぶん","きぼう","きほん","きまる","きみつ","きむずかしい","きめる","きもだめし","きもち","きもの","きゃく","きやく","ぎゅうにく","きよう","きょうりゅう","きらい","きらく","きりん","きれい","きれつ","きろく","ぎろん","きわめる","ぎんいろ","きんかくじ","きんじょ","きんようび","ぐあい","くいず","くうかん","くうき","くうぐん","くうこう","ぐうせい","くうそう","ぐうたら","くうふく","くうぼ","くかん","くきょう","くげん","ぐこう","くさい","くさき","くさばな","くさる","くしゃみ","くしょう","くすのき","くすりゆび","くせげ","くせん","ぐたいてき","くださる","くたびれる","くちこみ","くちさき","くつした","ぐっすり","くつろぐ","くとうてん","くどく","くなん","くねくね","くのう","くふう","くみあわせ","くみたてる","くめる","くやくしょ","くらす","くらべる","くるま","くれる","くろう","くわしい","ぐんかん","ぐんしょく","ぐんたい","ぐんて","けあな","けいかく","けいけん","けいこ","けいさつ","げいじゅつ","けいたい","げいのうじん","けいれき","けいろ","けおとす","けおりもの","げきか","げきげん","げきだん","げきちん","げきとつ","げきは","げきやく","げこう","げこくじょう","げざい","けさき","げざん","けしき","けしごむ","けしょう","げすと","けたば","けちゃっぷ","けちらす","けつあつ","けつい","けつえき","けっこん","けつじょ","けっせき","けってい","けつまつ","げつようび","げつれい","けつろん","げどく","けとばす","けとる","けなげ","けなす","けなみ","けぬき","げねつ","けねん","けはい","げひん","けぶかい","げぼく","けまり","けみかる","けむし","けむり","けもの","けらい","けろけろ","けわしい","けんい","けんえつ","けんお","けんか","げんき","けんげん","けんこう","けんさく","けんしゅう","けんすう","げんそう","けんちく","けんてい","けんとう","けんない","けんにん","げんぶつ","けんま","けんみん","けんめい","けんらん","けんり","こあくま","こいぬ","こいびと","ごうい","こうえん","こうおん","こうかん","ごうきゅう","ごうけい","こうこう","こうさい","こうじ","こうすい","ごうせい","こうそく","こうたい","こうちゃ","こうつう","こうてい","こうどう","こうない","こうはい","ごうほう","ごうまん","こうもく","こうりつ","こえる","こおり","ごかい","ごがつ","ごかん","こくご","こくさい","こくとう","こくない","こくはく","こぐま","こけい","こける","ここのか","こころ","こさめ","こしつ","こすう","こせい","こせき","こぜん","こそだて","こたい","こたえる","こたつ","こちょう","こっか","こつこつ","こつばん","こつぶ","こてい","こてん","ことがら","ことし","ことば","ことり","こなごな","こねこね","このまま","このみ","このよ","ごはん","こひつじ","こふう","こふん","こぼれる","ごまあぶら","こまかい","ごますり","こまつな","こまる","こむぎこ","こもじ","こもち","こもの","こもん","こやく","こやま","こゆう","こゆび","こよい","こよう","こりる","これくしょん","ころっけ","こわもて","こわれる","こんいん","こんかい","こんき","こんしゅう","こんすい","こんだて","こんとん","こんなん","こんびに","こんぽん","こんまけ","こんや","こんれい","こんわく","ざいえき","さいかい","さいきん","ざいげん","ざいこ","さいしょ","さいせい","ざいたく","ざいちゅう","さいてき","ざいりょう","さうな","さかいし","さがす","さかな","さかみち","さがる","さぎょう","さくし","さくひん","さくら","さこく","さこつ","さずかる","ざせき","さたん","さつえい","ざつおん","ざっか","ざつがく","さっきょく","ざっし","さつじん","ざっそう","さつたば","さつまいも","さてい","さといも","さとう","さとおや","さとし","さとる","さのう","さばく","さびしい","さべつ","さほう","さほど","さます","さみしい","さみだれ","さむけ","さめる","さやえんどう","さゆう","さよう","さよく","さらだ","ざるそば","さわやか","さわる","さんいん","さんか","さんきゃく","さんこう","さんさい","ざんしょ","さんすう","さんせい","さんそ","さんち","さんま","さんみ","さんらん","しあい","しあげ","しあさって","しあわせ","しいく","しいん","しうち","しえい","しおけ","しかい","しかく","じかん","しごと","しすう","じだい","したうけ","したぎ","したて","したみ","しちょう","しちりん","しっかり","しつじ","しつもん","してい","してき","してつ","じてん","じどう","しなぎれ","しなもの","しなん","しねま","しねん","しのぐ","しのぶ","しはい","しばかり","しはつ","しはらい","しはん","しひょう","しふく","じぶん","しへい","しほう","しほん","しまう","しまる","しみん","しむける","じむしょ","しめい","しめる","しもん","しゃいん","しゃうん","しゃおん","じゃがいも","しやくしょ","しゃくほう","しゃけん","しゃこ","しゃざい","しゃしん","しゃせん","しゃそう","しゃたい","しゃちょう","しゃっきん","じゃま","しゃりん","しゃれい","じゆう","じゅうしょ","しゅくはく","じゅしん","しゅっせき","しゅみ","しゅらば","じゅんばん","しょうかい","しょくたく","しょっけん","しょどう","しょもつ","しらせる","しらべる","しんか","しんこう","じんじゃ","しんせいじ","しんちく","しんりん","すあげ","すあし","すあな","ずあん","すいえい","すいか","すいとう","ずいぶん","すいようび","すうがく","すうじつ","すうせん","すおどり","すきま","すくう","すくない","すける","すごい","すこし","ずさん","すずしい","すすむ","すすめる","すっかり","ずっしり","ずっと","すてき","すてる","すねる","すのこ","すはだ","すばらしい","ずひょう","ずぶぬれ","すぶり","すふれ","すべて","すべる","ずほう","すぼん","すまい","すめし","すもう","すやき","すらすら","するめ","すれちがう","すろっと","すわる","すんぜん","すんぽう","せあぶら","せいかつ","せいげん","せいじ","せいよう","せおう","せかいかん","せきにん","せきむ","せきゆ","せきらんうん","せけん","せこう","せすじ","せたい","せたけ","せっかく","せっきゃく","ぜっく","せっけん","せっこつ","せっさたくま","せつぞく","せつだん","せつでん","せっぱん","せつび","せつぶん","せつめい","せつりつ","せなか","せのび","せはば","せびろ","せぼね","せまい","せまる","せめる","せもたれ","せりふ","ぜんあく","せんい","せんえい","せんか","せんきょ","せんく","せんげん","ぜんご","せんさい","せんしゅ","せんすい","せんせい","せんぞ","せんたく","せんちょう","せんてい","せんとう","せんぬき","せんねん","せんぱい","ぜんぶ","ぜんぽう","せんむ","せんめんじょ","せんもん","せんやく","せんゆう","せんよう","ぜんら","ぜんりゃく","せんれい","せんろ","そあく","そいとげる","そいね","そうがんきょう","そうき","そうご","そうしん","そうだん","そうなん","そうび","そうめん","そうり","そえもの","そえん","そがい","そげき","そこう","そこそこ","そざい","そしな","そせい","そせん","そそぐ","そだてる","そつう","そつえん","そっかん","そつぎょう","そっけつ","そっこう","そっせん","そっと","そとがわ","そとづら","そなえる","そなた","そふぼ","そぼく","そぼろ","そまつ","そまる","そむく","そむりえ","そめる","そもそも","そよかぜ","そらまめ","そろう","そんかい","そんけい","そんざい","そんしつ","そんぞく","そんちょう","ぞんび","ぞんぶん","そんみん","たあい","たいいん","たいうん","たいえき","たいおう","だいがく","たいき","たいぐう","たいけん","たいこ","たいざい","だいじょうぶ","だいすき","たいせつ","たいそう","だいたい","たいちょう","たいてい","だいどころ","たいない","たいねつ","たいのう","たいはん","だいひょう","たいふう","たいへん","たいほ","たいまつばな","たいみんぐ","たいむ","たいめん","たいやき","たいよう","たいら","たいりょく","たいる","たいわん","たうえ","たえる","たおす","たおる","たおれる","たかい","たかね","たきび","たくさん","たこく","たこやき","たさい","たしざん","だじゃれ","たすける","たずさわる","たそがれ","たたかう","たたく","ただしい","たたみ","たちばな","だっかい","だっきゃく","だっこ","だっしゅつ","だったい","たてる","たとえる","たなばた","たにん","たぬき","たのしみ","たはつ","たぶん","たべる","たぼう","たまご","たまる","だむる","ためいき","ためす","ためる","たもつ","たやすい","たよる","たらす","たりきほんがん","たりょう","たりる","たると","たれる","たれんと","たろっと","たわむれる","だんあつ","たんい","たんおん","たんか","たんき","たんけん","たんご","たんさん","たんじょうび","だんせい","たんそく","たんたい","だんち","たんてい","たんとう","だんな","たんにん","だんねつ","たんのう","たんぴん","だんぼう","たんまつ","たんめい","だんれつ","だんろ","だんわ","ちあい","ちあん","ちいき","ちいさい","ちえん","ちかい","ちから","ちきゅう","ちきん","ちけいず","ちけん","ちこく","ちさい","ちしき","ちしりょう","ちせい","ちそう","ちたい","ちたん","ちちおや","ちつじょ","ちてき","ちてん","ちぬき","ちぬり","ちのう","ちひょう","ちへいせん","ちほう","ちまた","ちみつ","ちみどろ","ちめいど","ちゃんこなべ","ちゅうい","ちゆりょく","ちょうし","ちょさくけん","ちらし","ちらみ","ちりがみ","ちりょう","ちるど","ちわわ","ちんたい","ちんもく","ついか","ついたち","つうか","つうじょう","つうはん","つうわ","つかう","つかれる","つくね","つくる","つけね","つける","つごう","つたえる","つづく","つつじ","つつむ","つとめる","つながる","つなみ","つねづね","つのる","つぶす","つまらない","つまる","つみき","つめたい","つもり","つもる","つよい","つるぼ","つるみく","つわもの","つわり","てあし","てあて","てあみ","ていおん","ていか","ていき","ていけい","ていこく","ていさつ","ていし","ていせい","ていたい","ていど","ていねい","ていひょう","ていへん","ていぼう","てうち","ておくれ","てきとう","てくび","でこぼこ","てさぎょう","てさげ","てすり","てそう","てちがい","てちょう","てつがく","てつづき","でっぱ","てつぼう","てつや","でぬかえ","てぬき","てぬぐい","てのひら","てはい","てぶくろ","てふだ","てほどき","てほん","てまえ","てまきずし","てみじか","てみやげ","てらす","てれび","てわけ","てわたし","でんあつ","てんいん","てんかい","てんき","てんぐ","てんけん","てんごく","てんさい","てんし","てんすう","でんち","てんてき","てんとう","てんない","てんぷら","てんぼうだい","てんめつ","てんらんかい","でんりょく","でんわ","どあい","といれ","どうかん","とうきゅう","どうぐ","とうし","とうむぎ","とおい","とおか","とおく","とおす","とおる","とかい","とかす","ときおり","ときどき","とくい","とくしゅう","とくてん","とくに","とくべつ","とけい","とける","とこや","とさか","としょかん","とそう","とたん","とちゅう","とっきゅう","とっくん","とつぜん","とつにゅう","とどける","ととのえる","とない","となえる","となり","とのさま","とばす","どぶがわ","とほう","とまる","とめる","ともだち","ともる","どようび","とらえる","とんかつ","どんぶり","ないかく","ないこう","ないしょ","ないす","ないせん","ないそう","なおす","ながい","なくす","なげる","なこうど","なさけ","なたでここ","なっとう","なつやすみ","ななおし","なにごと","なにもの","なにわ","なのか","なふだ","なまいき","なまえ","なまみ","なみだ","なめらか","なめる","なやむ","ならう","ならび","ならぶ","なれる","なわとび","なわばり","にあう","にいがた","にうけ","におい","にかい","にがて","にきび","にくしみ","にくまん","にげる","にさんかたんそ","にしき","にせもの","にちじょう","にちようび","にっか","にっき","にっけい","にっこう","にっさん","にっしょく","にっすう","にっせき","にってい","になう","にほん","にまめ","にもつ","にやり","にゅういん","にりんしゃ","にわとり","にんい","にんか","にんき","にんげん","にんしき","にんずう","にんそう","にんたい","にんち","にんてい","にんにく","にんぷ","にんまり","にんむ","にんめい","にんよう","ぬいくぎ","ぬかす","ぬぐいとる","ぬぐう","ぬくもり","ぬすむ","ぬまえび","ぬめり","ぬらす","ぬんちゃく","ねあげ","ねいき","ねいる","ねいろ","ねぐせ","ねくたい","ねくら","ねこぜ","ねこむ","ねさげ","ねすごす","ねそべる","ねだん","ねつい","ねっしん","ねつぞう","ねったいぎょ","ねぶそく","ねふだ","ねぼう","ねほりはほり","ねまき","ねまわし","ねみみ","ねむい","ねむたい","ねもと","ねらう","ねわざ","ねんいり","ねんおし","ねんかん","ねんきん","ねんぐ","ねんざ","ねんし","ねんちゃく","ねんど","ねんぴ","ねんぶつ","ねんまつ","ねんりょう","ねんれい","のいず","のおづま","のがす","のきなみ","のこぎり","のこす","のこる","のせる","のぞく","のぞむ","のたまう","のちほど","のっく","のばす","のはら","のべる","のぼる","のみもの","のやま","のらいぬ","のらねこ","のりもの","のりゆき","のれん","のんき","ばあい","はあく","ばあさん","ばいか","ばいく","はいけん","はいご","はいしん","はいすい","はいせん","はいそう","はいち","ばいばい","はいれつ","はえる","はおる","はかい","ばかり","はかる","はくしゅ","はけん","はこぶ","はさみ","はさん","はしご","ばしょ","はしる","はせる","ぱそこん","はそん","はたん","はちみつ","はつおん","はっかく","はづき","はっきり","はっくつ","はっけん","はっこう","はっさん","はっしん","はったつ","はっちゅう","はってん","はっぴょう","はっぽう","はなす","はなび","はにかむ","はぶらし","はみがき","はむかう","はめつ","はやい","はやし","はらう","はろうぃん","はわい","はんい","はんえい","はんおん","はんかく","はんきょう","ばんぐみ","はんこ","はんしゃ","はんすう","はんだん","ぱんち","ぱんつ","はんてい","はんとし","はんのう","はんぱ","はんぶん","はんぺん","はんぼうき","はんめい","はんらん","はんろん","ひいき","ひうん","ひえる","ひかく","ひかり","ひかる","ひかん","ひくい","ひけつ","ひこうき","ひこく","ひさい","ひさしぶり","ひさん","びじゅつかん","ひしょ","ひそか","ひそむ","ひたむき","ひだり","ひたる","ひつぎ","ひっこし","ひっし","ひつじゅひん","ひっす","ひつぜん","ぴったり","ぴっちり","ひつよう","ひてい","ひとごみ","ひなまつり","ひなん","ひねる","ひはん","ひびく","ひひょう","ひほう","ひまわり","ひまん","ひみつ","ひめい","ひめじし","ひやけ","ひやす","ひよう","びょうき","ひらがな","ひらく","ひりつ","ひりょう","ひるま","ひるやすみ","ひれい","ひろい","ひろう","ひろき","ひろゆき","ひんかく","ひんけつ","ひんこん","ひんしゅ","ひんそう","ぴんち","ひんぱん","びんぼう","ふあん","ふいうち","ふうけい","ふうせん","ぷうたろう","ふうとう","ふうふ","ふえる","ふおん","ふかい","ふきん","ふくざつ","ふくぶくろ","ふこう","ふさい","ふしぎ","ふじみ","ふすま","ふせい","ふせぐ","ふそく","ぶたにく","ふたん","ふちょう","ふつう","ふつか","ふっかつ","ふっき","ふっこく","ぶどう","ふとる","ふとん","ふのう","ふはい","ふひょう","ふへん","ふまん","ふみん","ふめつ","ふめん","ふよう","ふりこ","ふりる","ふるい","ふんいき","ぶんがく","ぶんぐ","ふんしつ","ぶんせき","ふんそう","ぶんぽう","へいあん","へいおん","へいがい","へいき","へいげん","へいこう","へいさ","へいしゃ","へいせつ","へいそ","へいたく","へいてん","へいねつ","へいわ","へきが","へこむ","べにいろ","べにしょうが","へらす","へんかん","べんきょう","べんごし","へんさい","へんたい","べんり","ほあん","ほいく","ぼうぎょ","ほうこく","ほうそう","ほうほう","ほうもん","ほうりつ","ほえる","ほおん","ほかん","ほきょう","ぼきん","ほくろ","ほけつ","ほけん","ほこう","ほこる","ほしい","ほしつ","ほしゅ","ほしょう","ほせい","ほそい","ほそく","ほたて","ほたる","ぽちぶくろ","ほっきょく","ほっさ","ほったん","ほとんど","ほめる","ほんい","ほんき","ほんけ","ほんしつ","ほんやく","まいにち","まかい","まかせる","まがる","まける","まこと","まさつ","まじめ","ますく","まぜる","まつり","まとめ","まなぶ","まぬけ","まねく","まほう","まもる","まゆげ","まよう","まろやか","まわす","まわり","まわる","まんが","まんきつ","まんぞく","まんなか","みいら","みうち","みえる","みがく","みかた","みかん","みけん","みこん","みじかい","みすい","みすえる","みせる","みっか","みつかる","みつける","みてい","みとめる","みなと","みなみかさい","みねらる","みのう","みのがす","みほん","みもと","みやげ","みらい","みりょく","みわく","みんか","みんぞく","むいか","むえき","むえん","むかい","むかう","むかえ","むかし","むぎちゃ","むける","むげん","むさぼる","むしあつい","むしば","むじゅん","むしろ","むすう","むすこ","むすぶ","むすめ","むせる","むせん","むちゅう","むなしい","むのう","むやみ","むよう","むらさき","むりょう","むろん","めいあん","めいうん","めいえん","めいかく","めいきょく","めいさい","めいし","めいそう","めいぶつ","めいれい","めいわく","めぐまれる","めざす","めした","めずらしい","めだつ","めまい","めやす","めんきょ","めんせき","めんどう","もうしあげる","もうどうけん","もえる","もくし","もくてき","もくようび","もちろん","もどる","もらう","もんく","もんだい","やおや","やける","やさい","やさしい","やすい","やすたろう","やすみ","やせる","やそう","やたい","やちん","やっと","やっぱり","やぶる","やめる","ややこしい","やよい","やわらかい","ゆうき","ゆうびんきょく","ゆうべ","ゆうめい","ゆけつ","ゆしゅつ","ゆせん","ゆそう","ゆたか","ゆちゃく","ゆでる","ゆにゅう","ゆびわ","ゆらい","ゆれる","ようい","ようか","ようきゅう","ようじ","ようす","ようちえん","よかぜ","よかん","よきん","よくせい","よくぼう","よけい","よごれる","よさん","よしゅう","よそう","よそく","よっか","よてい","よどがわく","よねつ","よやく","よゆう","よろこぶ","よろしい","らいう","らくがき","らくご","らくさつ","らくだ","らしんばん","らせん","らぞく","らたい","らっか","られつ","りえき","りかい","りきさく","りきせつ","りくぐん","りくつ","りけん","りこう","りせい","りそう","りそく","りてん","りねん","りゆう","りゅうがく","りよう","りょうり","りょかん","りょくちゃ","りょこう","りりく","りれき","りろん","りんご","るいけい","るいさい","るいじ","るいせき","るすばん","るりがわら","れいかん","れいぎ","れいせい","れいぞうこ","れいとう","れいぼう","れきし","れきだい","れんあい","れんけい","れんこん","れんさい","れんしゅう","れんぞく","れんらく","ろうか","ろうご","ろうじん","ろうそく","ろくが","ろこつ","ろじうら","ろしゅつ","ろせん","ろてん","ろめん","ろれつ","ろんぎ","ろんぱ","ろんぶん","ろんり","わかす","わかめ","わかやま","わかれる","わしつ","わじまし","わすれもの","わらう","われる"],dh=["abacate","abaixo","abalar","abater","abduzir","abelha","aberto","abismo","abotoar","abranger","abreviar","abrigar","abrupto","absinto","absoluto","absurdo","abutre","acabado","acalmar","acampar","acanhar","acaso","aceitar","acelerar","acenar","acervo","acessar","acetona","achatar","acidez","acima","acionado","acirrar","aclamar","aclive","acolhida","acomodar","acoplar","acordar","acumular","acusador","adaptar","adega","adentro","adepto","adequar","aderente","adesivo","adeus","adiante","aditivo","adjetivo","adjunto","admirar","adorar","adquirir","adubo","adverso","advogado","aeronave","afastar","aferir","afetivo","afinador","afivelar","aflito","afluente","afrontar","agachar","agarrar","agasalho","agenciar","agilizar","agiota","agitado","agora","agradar","agreste","agrupar","aguardar","agulha","ajoelhar","ajudar","ajustar","alameda","alarme","alastrar","alavanca","albergue","albino","alcatra","aldeia","alecrim","alegria","alertar","alface","alfinete","algum","alheio","aliar","alicate","alienar","alinhar","aliviar","almofada","alocar","alpiste","alterar","altitude","alucinar","alugar","aluno","alusivo","alvo","amaciar","amador","amarelo","amassar","ambas","ambiente","ameixa","amenizar","amido","amistoso","amizade","amolador","amontoar","amoroso","amostra","amparar","ampliar","ampola","anagrama","analisar","anarquia","anatomia","andaime","anel","anexo","angular","animar","anjo","anomalia","anotado","ansioso","anterior","anuidade","anunciar","anzol","apagador","apalpar","apanhado","apego","apelido","apertada","apesar","apetite","apito","aplauso","aplicada","apoio","apontar","aposta","aprendiz","aprovar","aquecer","arame","aranha","arara","arcada","ardente","areia","arejar","arenito","aresta","argiloso","argola","arma","arquivo","arraial","arrebate","arriscar","arroba","arrumar","arsenal","arterial","artigo","arvoredo","asfaltar","asilado","aspirar","assador","assinar","assoalho","assunto","astral","atacado","atadura","atalho","atarefar","atear","atender","aterro","ateu","atingir","atirador","ativo","atoleiro","atracar","atrevido","atriz","atual","atum","auditor","aumentar","aura","aurora","autismo","autoria","autuar","avaliar","avante","avaria","avental","avesso","aviador","avisar","avulso","axila","azarar","azedo","azeite","azulejo","babar","babosa","bacalhau","bacharel","bacia","bagagem","baiano","bailar","baioneta","bairro","baixista","bajular","baleia","baliza","balsa","banal","bandeira","banho","banir","banquete","barato","barbado","baronesa","barraca","barulho","baseado","bastante","batata","batedor","batida","batom","batucar","baunilha","beber","beijo","beirada","beisebol","beldade","beleza","belga","beliscar","bendito","bengala","benzer","berimbau","berlinda","berro","besouro","bexiga","bezerro","bico","bicudo","bienal","bifocal","bifurcar","bigorna","bilhete","bimestre","bimotor","biologia","biombo","biosfera","bipolar","birrento","biscoito","bisneto","bispo","bissexto","bitola","bizarro","blindado","bloco","bloquear","boato","bobagem","bocado","bocejo","bochecha","boicotar","bolada","boletim","bolha","bolo","bombeiro","bonde","boneco","bonita","borbulha","borda","boreal","borracha","bovino","boxeador","branco","brasa","braveza","breu","briga","brilho","brincar","broa","brochura","bronzear","broto","bruxo","bucha","budismo","bufar","bule","buraco","busca","busto","buzina","cabana","cabelo","cabide","cabo","cabrito","cacau","cacetada","cachorro","cacique","cadastro","cadeado","cafezal","caiaque","caipira","caixote","cajado","caju","calafrio","calcular","caldeira","calibrar","calmante","calota","camada","cambista","camisa","camomila","campanha","camuflar","canavial","cancelar","caneta","canguru","canhoto","canivete","canoa","cansado","cantar","canudo","capacho","capela","capinar","capotar","capricho","captador","capuz","caracol","carbono","cardeal","careca","carimbar","carneiro","carpete","carreira","cartaz","carvalho","casaco","casca","casebre","castelo","casulo","catarata","cativar","caule","causador","cautelar","cavalo","caverna","cebola","cedilha","cegonha","celebrar","celular","cenoura","censo","centeio","cercar","cerrado","certeiro","cerveja","cetim","cevada","chacota","chaleira","chamado","chapada","charme","chatice","chave","chefe","chegada","cheiro","cheque","chicote","chifre","chinelo","chocalho","chover","chumbo","chutar","chuva","cicatriz","ciclone","cidade","cidreira","ciente","cigana","cimento","cinto","cinza","ciranda","circuito","cirurgia","citar","clareza","clero","clicar","clone","clube","coado","coagir","cobaia","cobertor","cobrar","cocada","coelho","coentro","coeso","cogumelo","coibir","coifa","coiote","colar","coleira","colher","colidir","colmeia","colono","coluna","comando","combinar","comentar","comitiva","comover","complexo","comum","concha","condor","conectar","confuso","congelar","conhecer","conjugar","consumir","contrato","convite","cooperar","copeiro","copiador","copo","coquetel","coragem","cordial","corneta","coronha","corporal","correio","cortejo","coruja","corvo","cosseno","costela","cotonete","couro","couve","covil","cozinha","cratera","cravo","creche","credor","creme","crer","crespo","criada","criminal","crioulo","crise","criticar","crosta","crua","cruzeiro","cubano","cueca","cuidado","cujo","culatra","culminar","culpar","cultura","cumprir","cunhado","cupido","curativo","curral","cursar","curto","cuspir","custear","cutelo","damasco","datar","debater","debitar","deboche","debulhar","decalque","decimal","declive","decote","decretar","dedal","dedicado","deduzir","defesa","defumar","degelo","degrau","degustar","deitado","deixar","delator","delegado","delinear","delonga","demanda","demitir","demolido","dentista","depenado","depilar","depois","depressa","depurar","deriva","derramar","desafio","desbotar","descanso","desenho","desfiado","desgaste","desigual","deslize","desmamar","desova","despesa","destaque","desviar","detalhar","detentor","detonar","detrito","deusa","dever","devido","devotado","dezena","diagrama","dialeto","didata","difuso","digitar","dilatado","diluente","diminuir","dinastia","dinheiro","diocese","direto","discreta","disfarce","disparo","disquete","dissipar","distante","ditador","diurno","diverso","divisor","divulgar","dizer","dobrador","dolorido","domador","dominado","donativo","donzela","dormente","dorsal","dosagem","dourado","doutor","drenagem","drible","drogaria","duelar","duende","dueto","duplo","duquesa","durante","duvidoso","eclodir","ecoar","ecologia","edificar","edital","educado","efeito","efetivar","ejetar","elaborar","eleger","eleitor","elenco","elevador","eliminar","elogiar","embargo","embolado","embrulho","embutido","emenda","emergir","emissor","empatia","empenho","empinado","empolgar","emprego","empurrar","emulador","encaixe","encenado","enchente","encontro","endeusar","endossar","enfaixar","enfeite","enfim","engajado","engenho","englobar","engomado","engraxar","enguia","enjoar","enlatar","enquanto","enraizar","enrolado","enrugar","ensaio","enseada","ensino","ensopado","entanto","enteado","entidade","entortar","entrada","entulho","envergar","enviado","envolver","enxame","enxerto","enxofre","enxuto","epiderme","equipar","ereto","erguido","errata","erva","ervilha","esbanjar","esbelto","escama","escola","escrita","escuta","esfinge","esfolar","esfregar","esfumado","esgrima","esmalte","espanto","espelho","espiga","esponja","espreita","espumar","esquerda","estaca","esteira","esticar","estofado","estrela","estudo","esvaziar","etanol","etiqueta","euforia","europeu","evacuar","evaporar","evasivo","eventual","evidente","evoluir","exagero","exalar","examinar","exato","exausto","excesso","excitar","exclamar","executar","exemplo","exibir","exigente","exonerar","expandir","expelir","expirar","explanar","exposto","expresso","expulsar","externo","extinto","extrato","fabricar","fabuloso","faceta","facial","fada","fadiga","faixa","falar","falta","familiar","fandango","fanfarra","fantoche","fardado","farelo","farinha","farofa","farpa","fartura","fatia","fator","favorita","faxina","fazenda","fechado","feijoada","feirante","felino","feminino","fenda","feno","fera","feriado","ferrugem","ferver","festejar","fetal","feudal","fiapo","fibrose","ficar","ficheiro","figurado","fileira","filho","filme","filtrar","firmeza","fisgada","fissura","fita","fivela","fixador","fixo","flacidez","flamingo","flanela","flechada","flora","flutuar","fluxo","focal","focinho","fofocar","fogo","foguete","foice","folgado","folheto","forjar","formiga","forno","forte","fosco","fossa","fragata","fralda","frango","frasco","fraterno","freira","frente","fretar","frieza","friso","fritura","fronha","frustrar","fruteira","fugir","fulano","fuligem","fundar","fungo","funil","furador","furioso","futebol","gabarito","gabinete","gado","gaiato","gaiola","gaivota","galega","galho","galinha","galocha","ganhar","garagem","garfo","gargalo","garimpo","garoupa","garrafa","gasoduto","gasto","gata","gatilho","gaveta","gazela","gelado","geleia","gelo","gemada","gemer","gemido","generoso","gengiva","genial","genoma","genro","geologia","gerador","germinar","gesso","gestor","ginasta","gincana","gingado","girafa","girino","glacial","glicose","global","glorioso","goela","goiaba","golfe","golpear","gordura","gorjeta","gorro","gostoso","goteira","governar","gracejo","gradual","grafite","gralha","grampo","granada","gratuito","graveto","graxa","grego","grelhar","greve","grilo","grisalho","gritaria","grosso","grotesco","grudado","grunhido","gruta","guache","guarani","guaxinim","guerrear","guiar","guincho","guisado","gula","guloso","guru","habitar","harmonia","haste","haver","hectare","herdar","heresia","hesitar","hiato","hibernar","hidratar","hiena","hino","hipismo","hipnose","hipoteca","hoje","holofote","homem","honesto","honrado","hormonal","hospedar","humorado","iate","ideia","idoso","ignorado","igreja","iguana","ileso","ilha","iludido","iluminar","ilustrar","imagem","imediato","imenso","imersivo","iminente","imitador","imortal","impacto","impedir","implante","impor","imprensa","impune","imunizar","inalador","inapto","inativo","incenso","inchar","incidir","incluir","incolor","indeciso","indireto","indutor","ineficaz","inerente","infantil","infestar","infinito","inflamar","informal","infrator","ingerir","inibido","inicial","inimigo","injetar","inocente","inodoro","inovador","inox","inquieto","inscrito","inseto","insistir","inspetor","instalar","insulto","intacto","integral","intimar","intocado","intriga","invasor","inverno","invicto","invocar","iogurte","iraniano","ironizar","irreal","irritado","isca","isento","isolado","isqueiro","italiano","janeiro","jangada","janta","jararaca","jardim","jarro","jasmim","jato","javali","jazida","jejum","joaninha","joelhada","jogador","joia","jornal","jorrar","jovem","juba","judeu","judoca","juiz","julgador","julho","jurado","jurista","juro","justa","labareda","laboral","lacre","lactante","ladrilho","lagarta","lagoa","laje","lamber","lamentar","laminar","lampejo","lanche","lapidar","lapso","laranja","lareira","largura","lasanha","lastro","lateral","latido","lavanda","lavoura","lavrador","laxante","lazer","lealdade","lebre","legado","legendar","legista","leigo","leiloar","leitura","lembrete","leme","lenhador","lentilha","leoa","lesma","leste","letivo","letreiro","levar","leveza","levitar","liberal","libido","liderar","ligar","ligeiro","limitar","limoeiro","limpador","linda","linear","linhagem","liquidez","listagem","lisura","litoral","livro","lixa","lixeira","locador","locutor","lojista","lombo","lona","longe","lontra","lorde","lotado","loteria","loucura","lousa","louvar","luar","lucidez","lucro","luneta","lustre","lutador","luva","macaco","macete","machado","macio","madeira","madrinha","magnata","magreza","maior","mais","malandro","malha","malote","maluco","mamilo","mamoeiro","mamute","manada","mancha","mandato","manequim","manhoso","manivela","manobrar","mansa","manter","manusear","mapeado","maquinar","marcador","maresia","marfim","margem","marinho","marmita","maroto","marquise","marreco","martelo","marujo","mascote","masmorra","massagem","mastigar","matagal","materno","matinal","matutar","maxilar","medalha","medida","medusa","megafone","meiga","melancia","melhor","membro","memorial","menino","menos","mensagem","mental","merecer","mergulho","mesada","mesclar","mesmo","mesquita","mestre","metade","meteoro","metragem","mexer","mexicano","micro","migalha","migrar","milagre","milenar","milhar","mimado","minerar","minhoca","ministro","minoria","miolo","mirante","mirtilo","misturar","mocidade","moderno","modular","moeda","moer","moinho","moita","moldura","moleza","molho","molinete","molusco","montanha","moqueca","morango","morcego","mordomo","morena","mosaico","mosquete","mostarda","motel","motim","moto","motriz","muda","muito","mulata","mulher","multar","mundial","munido","muralha","murcho","muscular","museu","musical","nacional","nadador","naja","namoro","narina","narrado","nascer","nativa","natureza","navalha","navegar","navio","neblina","nebuloso","negativa","negociar","negrito","nervoso","neta","neural","nevasca","nevoeiro","ninar","ninho","nitidez","nivelar","nobreza","noite","noiva","nomear","nominal","nordeste","nortear","notar","noticiar","noturno","novelo","novilho","novo","nublado","nudez","numeral","nupcial","nutrir","nuvem","obcecado","obedecer","objetivo","obrigado","obscuro","obstetra","obter","obturar","ocidente","ocioso","ocorrer","oculista","ocupado","ofegante","ofensiva","oferenda","oficina","ofuscado","ogiva","olaria","oleoso","olhar","oliveira","ombro","omelete","omisso","omitir","ondulado","oneroso","ontem","opcional","operador","oponente","oportuno","oposto","orar","orbitar","ordem","ordinal","orfanato","orgasmo","orgulho","oriental","origem","oriundo","orla","ortodoxo","orvalho","oscilar","ossada","osso","ostentar","otimismo","ousadia","outono","outubro","ouvido","ovelha","ovular","oxidar","oxigenar","pacato","paciente","pacote","pactuar","padaria","padrinho","pagar","pagode","painel","pairar","paisagem","palavra","palestra","palheta","palito","palmada","palpitar","pancada","panela","panfleto","panqueca","pantanal","papagaio","papelada","papiro","parafina","parcial","pardal","parede","partida","pasmo","passado","pastel","patamar","patente","patinar","patrono","paulada","pausar","peculiar","pedalar","pedestre","pediatra","pedra","pegada","peitoral","peixe","pele","pelicano","penca","pendurar","peneira","penhasco","pensador","pente","perceber","perfeito","pergunta","perito","permitir","perna","perplexo","persiana","pertence","peruca","pescado","pesquisa","pessoa","petiscar","piada","picado","piedade","pigmento","pilastra","pilhado","pilotar","pimenta","pincel","pinguim","pinha","pinote","pintar","pioneiro","pipoca","piquete","piranha","pires","pirueta","piscar","pistola","pitanga","pivete","planta","plaqueta","platina","plebeu","plumagem","pluvial","pneu","poda","poeira","poetisa","polegada","policiar","poluente","polvilho","pomar","pomba","ponderar","pontaria","populoso","porta","possuir","postal","pote","poupar","pouso","povoar","praia","prancha","prato","praxe","prece","predador","prefeito","premiar","prensar","preparar","presilha","pretexto","prevenir","prezar","primata","princesa","prisma","privado","processo","produto","profeta","proibido","projeto","prometer","propagar","prosa","protetor","provador","publicar","pudim","pular","pulmonar","pulseira","punhal","punir","pupilo","pureza","puxador","quadra","quantia","quarto","quase","quebrar","queda","queijo","quente","querido","quimono","quina","quiosque","rabanada","rabisco","rachar","racionar","radial","raiar","rainha","raio","raiva","rajada","ralado","ramal","ranger","ranhura","rapadura","rapel","rapidez","raposa","raquete","raridade","rasante","rascunho","rasgar","raspador","rasteira","rasurar","ratazana","ratoeira","realeza","reanimar","reaver","rebaixar","rebelde","rebolar","recado","recente","recheio","recibo","recordar","recrutar","recuar","rede","redimir","redonda","reduzida","reenvio","refinar","refletir","refogar","refresco","refugiar","regalia","regime","regra","reinado","reitor","rejeitar","relativo","remador","remendo","remorso","renovado","reparo","repelir","repleto","repolho","represa","repudiar","requerer","resenha","resfriar","resgatar","residir","resolver","respeito","ressaca","restante","resumir","retalho","reter","retirar","retomada","retratar","revelar","revisor","revolta","riacho","rica","rigidez","rigoroso","rimar","ringue","risada","risco","risonho","robalo","rochedo","rodada","rodeio","rodovia","roedor","roleta","romano","roncar","rosado","roseira","rosto","rota","roteiro","rotina","rotular","rouco","roupa","roxo","rubro","rugido","rugoso","ruivo","rumo","rupestre","russo","sabor","saciar","sacola","sacudir","sadio","safira","saga","sagrada","saibro","salada","saleiro","salgado","saliva","salpicar","salsicha","saltar","salvador","sambar","samurai","sanar","sanfona","sangue","sanidade","sapato","sarda","sargento","sarjeta","saturar","saudade","saxofone","sazonal","secar","secular","seda","sedento","sediado","sedoso","sedutor","segmento","segredo","segundo","seiva","seleto","selvagem","semanal","semente","senador","senhor","sensual","sentado","separado","sereia","seringa","serra","servo","setembro","setor","sigilo","silhueta","silicone","simetria","simpatia","simular","sinal","sincero","singular","sinopse","sintonia","sirene","siri","situado","soberano","sobra","socorro","sogro","soja","solda","soletrar","solteiro","sombrio","sonata","sondar","sonegar","sonhador","sono","soprano","soquete","sorrir","sorteio","sossego","sotaque","soterrar","sovado","sozinho","suavizar","subida","submerso","subsolo","subtrair","sucata","sucesso","suco","sudeste","sufixo","sugador","sugerir","sujeito","sulfato","sumir","suor","superior","suplicar","suposto","suprimir","surdina","surfista","surpresa","surreal","surtir","suspiro","sustento","tabela","tablete","tabuada","tacho","tagarela","talher","talo","talvez","tamanho","tamborim","tampa","tangente","tanto","tapar","tapioca","tardio","tarefa","tarja","tarraxa","tatuagem","taurino","taxativo","taxista","teatral","tecer","tecido","teclado","tedioso","teia","teimar","telefone","telhado","tempero","tenente","tensor","tentar","termal","terno","terreno","tese","tesoura","testado","teto","textura","texugo","tiara","tigela","tijolo","timbrar","timidez","tingido","tinteiro","tiragem","titular","toalha","tocha","tolerar","tolice","tomada","tomilho","tonel","tontura","topete","tora","torcido","torneio","torque","torrada","torto","tostar","touca","toupeira","toxina","trabalho","tracejar","tradutor","trafegar","trajeto","trama","trancar","trapo","traseiro","tratador","travar","treino","tremer","trepidar","trevo","triagem","tribo","triciclo","tridente","trilogia","trindade","triplo","triturar","triunfal","trocar","trombeta","trova","trunfo","truque","tubular","tucano","tudo","tulipa","tupi","turbo","turma","turquesa","tutelar","tutorial","uivar","umbigo","unha","unidade","uniforme","urologia","urso","urtiga","urubu","usado","usina","usufruir","vacina","vadiar","vagaroso","vaidoso","vala","valente","validade","valores","vantagem","vaqueiro","varanda","vareta","varrer","vascular","vasilha","vassoura","vazar","vazio","veado","vedar","vegetar","veicular","veleiro","velhice","veludo","vencedor","vendaval","venerar","ventre","verbal","verdade","vereador","vergonha","vermelho","verniz","versar","vertente","vespa","vestido","vetorial","viaduto","viagem","viajar","viatura","vibrador","videira","vidraria","viela","viga","vigente","vigiar","vigorar","vilarejo","vinco","vinheta","vinil","violeta","virada","virtude","visitar","visto","vitral","viveiro","vizinho","voador","voar","vogal","volante","voleibol","voltagem","volumoso","vontade","vulto","vuvuzela","xadrez","xarope","xeque","xeretar","xerife","xingar","zangado","zarpar","zebu","zelador","zombar","zoologia","zumbido"],ph=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];Object.defineProperty(rh,"__esModule",{value:!0});const hh={};let fh;rh.wordlists=hh;rh._default=fh;try{rh._default=fh=ah,hh.czech=fh}catch(of){}try{rh._default=fh=oh,hh.chinese_simplified=fh}catch(of){}try{rh._default=fh=nh,hh.chinese_traditional=fh}catch(of){}try{rh._default=fh=ih,hh.korean=fh}catch(of){}try{rh._default=fh=sh,hh.french=fh}catch(of){}try{rh._default=fh=ch,hh.italian=fh}catch(of){}try{rh._default=fh=lh,hh.spanish=fh}catch(of){}try{rh._default=fh=uh,hh.japanese=fh,hh.JA=fh}catch(of){}try{rh._default=fh=dh,hh.portuguese=fh}catch(of){}try{rh._default=fh=ph,hh.english=fh,hh.EN=fh}catch(of){}Object.defineProperty(th,"__esModule",{value:!0});const mh=kc,gh=Ml,bh=jl,vh=yc,yh=rh;let wh=yh._default;const kh="Invalid mnemonic",xh="Invalid entropy",jh="A wordlist is required but a default could not be found.\nPlease pass a 2048 word array explicitly.";function zh(e){return(e||"").normalize("NFKD")}function Eh(e,t,r){for(;e.length<r;)e=t+e;return e}function Sh(e){return parseInt(e,2)}function Ih(e){return e.map(e=>Eh(e.toString(2),"0",8)).join("")}function Ah(e){const t=8*e.length/32,r=mh.sha256(Uint8Array.from(e));return Ih(Array.from(r)).slice(0,t)}function Oh(e){return"mnemonic"+(e||"")}var Th=th.mnemonicToSeedSync=function(e,t){const r=Uint8Array.from(eh.from(zh(e),"utf8")),a=Uint8Array.from(eh.from(Oh(zh(t)),"utf8")),o=bh.pbkdf2(gh.sha512,r,a,{c:2048,dkLen:64});return eh.from(o)};var Bh=th.mnemonicToSeed=function(e,t){const r=Uint8Array.from(eh.from(zh(e),"utf8")),a=Uint8Array.from(eh.from(Oh(zh(t)),"utf8"));return bh.pbkdf2Async(gh.sha512,r,a,{c:2048,dkLen:64}).then(e=>eh.from(e))};function Uh(e,t){if(!(t=t||wh))throw new Error(jh);const r=zh(e).split(" ");if(r.length%3!=0)throw new Error(kh);const a=r.map(e=>{const r=t.indexOf(e);if(-1===r)throw new Error(kh);return Eh(r.toString(2),"0",11)}).join(""),o=32*Math.floor(a.length/33),n=a.slice(0,o),i=a.slice(o),s=n.match(/(.{1,8})/g).map(Sh);if(s.length<16)throw new Error(xh);if(s.length>32)throw new Error(xh);if(s.length%4!=0)throw new Error(xh);const c=eh.from(s);if(Ah(c)!==i)throw new Error("Invalid mnemonic checksum");return c.toString("hex")}var Ch=th.mnemonicToEntropy=Uh;function Mh(e,t){if(eh.isBuffer(e)||(e=eh.from(e,"hex")),!(t=t||wh))throw new Error(jh);if(e.length<16)throw new TypeError(xh);if(e.length>32)throw new TypeError(xh);if(e.length%4!=0)throw new TypeError(xh);const r=(Ih(Array.from(e))+Ah(e)).match(/(.{1,11})/g).map(e=>{const r=Sh(e);return t[r]});return"あいこくしん"===t[0]?r.join("　"):r.join(" ")}var $h=th.entropyToMnemonic=Mh;var Ph=th.generateMnemonic=function(e,t,r){if((e=e||128)%32!=0)throw new TypeError(xh);return Mh((t=t||(e=>eh.from(vh.randomBytes(e))))(e/8),r)};var Rh=th.validateMnemonic=function(e,t){try{Uh(e,t)}catch(r){return!1}return!0};var _h=th.setDefaultWordlist=function(e){const t=yh.wordlists[e];if(!t)throw new Error('Could not find wordlist for language "'+e+'"');wh=t};var Vh=th.getDefaultWordlist=function(){if(!wh)throw new Error("No Default Wordlist set");return Object.keys(yh.wordlists).filter(e=>"JA"!==e&&"EN"!==e&&yh.wordlists[e].every((e,t)=>e===wh[t]))[0]},Nh=rh,qh=th.wordlists=Nh.wordlists;const Lh=a({__proto__:null,default:th,entropyToMnemonic:$h,generateMnemonic:Ph,getDefaultWordlist:Vh,mnemonicToEntropy:Ch,mnemonicToSeed:Bh,mnemonicToSeedSync:Th,setDefaultWordlist:_h,validateMnemonic:Rh,wordlists:qh},[th]),Dh="0x2::sui::SUI";function Hh(e,t=0){const r=`m/44'/784'/${t}'/0'/0'`;return Ll.deriveKeypair(e,r)}function Fh(e){console.log("=== EXPORT PRIVATE KEY DEBUG ==="),console.log("Keypair:",e);try{if("function"==typeof e.getSecretKey){const t=e.getSecretKey();if(console.log("getSecretKey result:",t),console.log("getSecretKey result type:",typeof t),"string"==typeof t){if(console.log("Secret key is a string"),t.startsWith("suiprivkey1"))return console.log("✅ Found suiprivkey1 format, returning as-is"),t;let e;console.log("Converting string to bytes for CSV format");const r=atob(t),a=new Uint8Array(r.length);for(let t=0;t<r.length;t++)a[t]=r.charCodeAt(t);if(e=a,e.length>32&&(e=e.slice(0,32)),32!==e.length)throw new Error(`Invalid private key length: ${e.length}. Expected 32.`);return Array.from(e).join(",")}if(t instanceof Uint8Array){console.log("Secret key is Uint8Array, converting to CSV");let e=t;if(e.length>32&&(e=e.slice(0,32)),32!==e.length)throw new Error(`Invalid private key length: ${e.length}. Expected 32.`);return Array.from(e).join(",")}if(Array.isArray(t)){console.log("Secret key is Array, converting to CSV");let e=Uint8Array.from(t);if(e.length>32&&(e=e.slice(0,32)),32!==e.length)throw new Error(`Invalid private key length: ${e.length}. Expected 32.`);return Array.from(e).join(",")}throw new Error("Unknown secretKey format: "+typeof t)}if("function"==typeof e.export){const t=e.export();if(console.log("Exported keypair:",t),t&&t.privateKey){if("string"==typeof t.privateKey){if(t.privateKey.startsWith("suiprivkey1"))return console.log("✅ Found suiprivkey1 format in exported.privateKey, returning as-is"),t.privateKey;const e=atob(t.privateKey),r=new Uint8Array(e.length);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);let a=r;if(a.length>32&&(a=a.slice(0,32)),32!==a.length)throw new Error(`Invalid private key length: ${a.length}. Expected 32.`);return Array.from(a).join(",")}if(t.privateKey instanceof Uint8Array){let e=t.privateKey;if(e.length>32&&(e=e.slice(0,32)),32!==e.length)throw new Error(`Invalid private key length: ${e.length}. Expected 32.`);return Array.from(e).join(",")}if(Array.isArray(t.privateKey)){let e=Uint8Array.from(t.privateKey);if(e.length>32&&(e=e.slice(0,32)),32!==e.length)throw new Error(`Invalid private key length: ${e.length}. Expected 32.`);return Array.from(e).join(",")}throw new Error("Unknown exported privateKey format: "+typeof t.privateKey)}throw new Error("Exported keypair has no privateKey property")}if("function"==typeof e.exportSecretKey){const t=e.exportSecretKey();if("string"==typeof t&&t.startsWith("suiprivkey1"))return console.log("✅ Found suiprivkey1 format in exportSecretKey, returning as-is"),t;let r;if(t instanceof Uint8Array)r=t;else{if(!Array.isArray(t))throw new Error("Unknown exportSecretKey format: "+typeof t);r=Uint8Array.from(t)}if(r.length>32&&(r=r.slice(0,32)),32!==r.length)throw new Error(`Invalid private key length: ${r.length}. Expected 32.`);return Array.from(r).join(",")}if(e.secretKey){if("string"==typeof e.secretKey&&e.secretKey.startsWith("suiprivkey1"))return console.log("✅ Found suiprivkey1 format in keypair.secretKey, returning as-is"),e.secretKey;let t;if(e.secretKey instanceof Uint8Array)t=e.secretKey;else{if(!Array.isArray(e.secretKey))throw new Error("Unknown secretKey property format: "+typeof e.secretKey);t=Uint8Array.from(e.secretKey)}if(t.length>32&&(t=t.slice(0,32)),32!==t.length)throw new Error(`Invalid private key length: ${t.length}. Expected 32.`);return Array.from(t).join(",")}if(e.privateKey){if("string"==typeof e.privateKey&&e.privateKey.startsWith("suiprivkey1"))return console.log("✅ Found suiprivkey1 format in keypair.privateKey, returning as-is"),e.privateKey;let t;if(e.privateKey instanceof Uint8Array)t=e.privateKey;else{if(!Array.isArray(e.privateKey))throw new Error("Unknown privateKey property format: "+typeof e.privateKey);t=Uint8Array.from(e.privateKey)}if(t.length>32&&(t=t.slice(0,32)),32!==t.length)throw new Error(`Invalid private key length: ${t.length}. Expected 32.`);return Array.from(t).join(",")}throw new Error("No method found to export private key from keypair")}catch(t){throw console.error("Error in exportPrivateKey:",t),t}}const Kh=()=>Ph(),Wh=e=>Rh(e);function Gh(e){return new Di({url:e})}function Zh(e,t){const r=[];e&&"string"==typeof e||r.push("Invalid recipient address"),At(e)||r.push("Invalid Sui address format");const a=Number(t);return(!Number.isFinite(a)||a<=0)&&r.push("Invalid amount"),{isValid:0===r.length,errors:r}}async function Jh(e,t,r,a){let o,n;try{o=t.getPublicKey()}catch(f){throw console.error("Error getting public key:",f),f}try{n=o.toSuiAddress()}catch(f){throw console.error("Error generating Sui address:",f),f}const i=BigInt(Math.floor(1e9*Number(a)));console.log("Amount in MIST:",i.toString()),console.log("Checking balance...");const s=await e.getBalance({owner:n,coinType:Dh});if(console.log("Balance result:",s),console.log("Total balance:",s.totalBalance),BigInt(s.totalBalance)<i)throw new Error(`잔액 부족: 보유 ${s.totalBalance} < 전송 ${i.toString()} (Mist 단위)`);console.log("Balance check passed, creating transaction...");const c=new Lp;c.setSender(n);const[l]=c.splitCoins(c.gas,[c.pure.u64(i)]);c.transferObjects([l],c.pure.address(r)),console.log("Transaction created, signing and executing..."),console.log("=== CLIENT METHODS DEBUG ==="),console.log("Client object:",e),console.log("Client type:",typeof e),console.log("Client constructor:",e.constructor.name),console.log("Available client methods:",Object.getOwnPropertyNames(e)),console.log("Client prototype methods:",Object.getOwnPropertyNames(Object.getPrototypeOf(e)));const u="function"==typeof e.signAndExecuteTransactionBlock,d="function"==typeof e.signAndExecuteTransaction,p="function"==typeof e.executeTransactionBlock;let h;if(console.log("Method availability:",{signAndExecuteTransactionBlock:u,signAndExecuteTransaction:d,executeTransactionBlock:p}),u)console.log("Using signAndExecuteTransactionBlock..."),h=await e.signAndExecuteTransactionBlock({signer:t,transactionBlock:c,options:{showEffects:!0,showObjectChanges:!0}});else if(d)console.log("Using signAndExecuteTransaction..."),h=await e.signAndExecuteTransaction({signer:t,transaction:c,options:{showEffects:!0,showObjectChanges:!0}});else{if(!p)throw console.log("No known transaction methods found, trying alternative approach..."),new Error("No supported transaction execution method found on client. Available methods: "+Object.getOwnPropertyNames(e).join(", "));{console.log("Using executeTransactionBlock (need to sign first)...");const r=await t.signTransactionBlock(c);h=await e.executeTransactionBlock({transactionBlock:r,options:{showEffects:!0,showObjectChanges:!0}})}}return console.log("Transaction executed successfully:",h),h}async function Yh(e,t,r=20,a=null){var o;try{console.log("=== BUNDLER: getTransactionHistory called ==="),console.log(`Fetching transaction history for address: ${t}`),console.log(`Limit: ${r}, Cursor: ${a}`),console.log("Client:",e);let i=[];const s={limit:5*r,...a&&{cursor:a},filter:{FromAddress:t}};console.log("FromAddress query options:",s);try{const t=await e.queryTransactionBlocks(s);console.log("FromAddress filter result:",t),t.data&&t.data.length>0&&i.push(...t.data)}catch(n){console.log("FromAddress filter failed:",n)}const c={limit:5*r,...a&&{cursor:a},filter:{ToAddress:t}};console.log("ToAddress query options:",c);try{const t=await e.queryTransactionBlocks(c);console.log("ToAddress filter result:",t),t.data&&t.data.length>0&&i.push(...t.data)}catch(n){console.log("ToAddress filter failed:",n)}const l=i.filter((e,t,r)=>t===r.findIndex(t=>t.digest===e.digest));if(console.log("Combined unique digests:",l),console.log("Total unique digests found:",l.length),0===l.length)return console.log("No transaction digests found"),{data:[],hasNextPage:!1,nextCursor:null};const u={data:l,hasNextPage:!1,nextCursor:null};if(console.log("Digest result:",u),console.log("Digest result data length:",null==(o=u.data)?void 0:o.length),!u.data||0===u.data.length)return console.log("No transaction digests found"),{data:[],hasNextPage:!1,nextCursor:null};const d=[],p=3;for(let t=0;t<u.data.length;t+=p){const r=u.data.slice(t,t+p).map(async t=>{try{return await e.getTransactionBlock({digest:t.digest,options:{showInput:!0,showRawInput:!1,showEffects:!0,showEvents:!0,showObjectChanges:!0,showBalanceChanges:!0}})}catch(n){return console.error(`Error fetching transaction ${t.digest}:`,n),null}}),a=await Promise.all(r);d.push(...a.filter(e=>null!==e))}console.log(`Fetched ${d.length} detailed transactions`),console.log("Sample transaction structure:",d[0]);const h=d.filter(e=>{var r,a,o,n,i,s,c,l,u,d,p;if(!e)return!1;if((null==(a=null==(r=e.transaction)?void 0:r.data)?void 0:a.sender)===t)return console.log(`Found transaction with sender: ${e.digest}`),!0;if((null==(n=null==(o=e.transaction)?void 0:o.data)?void 0:n.recipient)===t)return console.log(`Found transaction with recipient: ${e.digest}`),!0;if((null==(c=null==(s=null==(i=e.transaction)?void 0:i.data)?void 0:s.gasData)?void 0:c.owner)===t)return console.log(`Found transaction with gas sender: ${e.digest}`),!0;if(e.objectChanges)for(const h of e.objectChanges){if("transferred"===h.type){if((null==(l=h.recipient)?void 0:l.AddressOwner)===t)return console.log(`Found transaction with recipient in objectChanges: ${e.digest}`),!0}if("created"===h.type){if((null==(u=h.owner)?void 0:u.AddressOwner)===t)return console.log(`Found transaction with created object for: ${e.digest}`),!0}if("mutated"===h.type){if((null==(d=h.owner)?void 0:d.AddressOwner)===t)return console.log(`Found transaction with mutated object for: ${e.digest}`),!0}}if(e.events)for(const h of e.events){if(h.parsedJson){const r=h.parsedJson;if(r.sender===t||r.recipient===t)return console.log(`Found transaction with address in events: ${e.digest}`),!0}if(h.sender===t)return console.log(`Found transaction with sender in event: ${e.digest}`),!0}if(e.balanceChanges)for(const h of e.balanceChanges)if((null==(p=h.owner)?void 0:p.AddressOwner)===t)return console.log(`Found transaction with balance change for: ${e.digest}`),!0;return!1});console.log(`Filtered ${h.length} transactions for address ${t}`),h.length>0?console.log("Filtered transaction digests:",h.map(e=>e.digest)):console.log("No transactions found for this address"),h.sort((e,t)=>{const r=parseInt(e.timestampMs||0);return parseInt(t.timestampMs||0)-r});const f={data:h.slice(0,r),hasNextPage:u.hasNextPage&&h.length>=r,nextCursor:u.nextCursor};return console.log("Final transaction history:",f),console.log("=== BUNDLER: getTransactionHistory completed ==="),f}catch(n){throw console.error("=== BUNDLER: Error fetching transaction history ===",n),n}}async function Xh(e,t){try{console.log(`Fetching transaction details for digest: ${t}`);const r=await e.getTransactionBlock({digest:t,options:{showEffects:!0,showInput:!0,showObjectChanges:!0,showEvents:!0}});return console.log("Transaction details response:",r),r}catch(r){throw console.error("Error fetching transaction details:",r),r}}async function Qh(e,t,r=20,a=null){try{console.log(`Fetching all transactions for address: ${t}`);const o=await Yh(e,t,r,a);return console.log("All transactions response:",o),o}catch(o){throw console.error("Error fetching all transactions:",o),o}}function ef(e,t="all",r=null){return"all"===t?e:r?e.filter(e=>{var a,o,n,i;if(!e)return!1;const s=(null==(o=null==(a=e.transaction)?void 0:a.data)?void 0:o.sender)===r,c=(null==(i=null==(n=e.transaction)?void 0:n.data)?void 0:i.recipient)===r;let l=!1;if(e.balanceChanges){e.balanceChanges.find(e=>{var t;return"0x2::sui::SUI"===e.coinType&&(null==(t=e.owner)?void 0:t.AddressOwner)===r&&Number(e.amount)>0})&&(l=!0)}let u=!1;if(e.objectChanges){e.objectChanges.find(e=>{var t;return"created"===e.type&&(null==(t=e.owner)?void 0:t.AddressOwner)===r})&&(u=!0)}return"send"===t?s:"receive"!==t||(c||l||u)}):(console.warn("User address not provided for filtering, returning all transactions"),e)}function tf(e){if(!e.effects)return"unknown";const t=e.effects.status;return"success"===t.status?"success":"failure"===t.status?"failed":"pending"}function rf(e,t=null){try{if(!e)return null;if(e.balanceChanges){const r=e.balanceChanges.filter(e=>{var r;return"0x2::sui::SUI"===e.coinType&&(null==(r=e.owner)?void 0:r.AddressOwner)===t});if(r.length>0){return r.reduce((e,t)=>e+Number(t.amount),0)/1e9}}if(e.objectChanges){const t=e.objectChanges.filter(e=>"transferred"===e.type&&"0x2::coin::Coin<0x2::sui::SUI>"===e.objectType);if(t.length>0){const e=t[0].amount||t[0].balance;if(e)return Number(e)/1e9}}if(e.events)for(const t of e.events)if(t.parsedJson&&t.parsedJson.sui_amount)return Number(t.parsedJson.sui_amount)/1e9;return null}catch(r){return console.error("Error extracting transaction amount:",r),null}}const af={SuiClient:Di,Ed25519Keypair:Ll,TransactionBlock:Lp,SUI_TYPE_ARG:Dh,isValidSuiAddress:At,bip39:Lh,generateMnemonic:Kh,validateMnemonic:Wh,deriveKeypair:Hh,exportPrivateKey:Fh,createClient:Gh,validateTransfer:Zh,sendSui:Jh,getTransactionHistory:Yh,getTransactionDetails:Xh,getAllTransactions:Qh,filterTransactionsByType:ef,getTransactionStatus:tf,extractTransactionAmount:rf,version:"bundled-1.0.0"};return"undefined"!=typeof window&&(window.suiSDK=af),void 0!==o&&(o.suiSDK=af),e.Ed25519Keypair=Ll,e.SUI_TYPE_ARG=Dh,e.SuiClient=Di,e.TransactionBlock=Lp,e.bip39=Lh,e.createClient=Gh,e.default=af,e.deriveKeypair=Hh,e.exportPrivateKey=Fh,e.extractTransactionAmount=rf,e.filterTransactionsByType=ef,e.generateMnemonic=Kh,e.getAllTransactions=Qh,e.getTransactionDetails=Xh,e.getTransactionHistory=Yh,e.getTransactionStatus=tf,e.isValidSuiAddress=At,e.sendSui=Jh,e.validateMnemonic=Wh,e.validateTransfer=Zh,Object.defineProperties(e,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}}),e}({});
